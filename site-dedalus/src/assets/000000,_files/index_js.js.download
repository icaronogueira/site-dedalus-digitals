function do_loading(msg,delay){
    if($('#loader_div').is(':visible')){
         return;
    }
    if(!msg){
        msg = _js("Loading")+'...';
    }
    if(!delay){
        delay = 0;
    }
    $('#loading_msg').html(msg);
    loading_timer = setTimeout(function(){
        $('#loader_div').show();
        $('#loader_div').css({left: (($(document).width()-$('#loader_div').outerWidth()) /2) + 'px' });
    },delay);

}

function stop_loading(){
    if(loading_timer){
        clearTimeout(loading_timer);
    }
    $('#loader_div').hide();
}

function get_location_hash(){
    var loc = location.hash.substring(1);
    var hash = loc;
    if(loc == '_=_'){
        // remove fb crap!
        remove_hash();
        loc = '';
    }

    // always use history, do not use hashes anymore
    var parser = document.createElement('a');
    parser.href = document.location.href;
    loc = parser.pathname;
    if(loc.charAt(0) == '/'){
        loc = loc.substring(1);
    }

    if(loc.slice(-1) == '/'){
        loc = loc.slice(0,-1);
    }
    return loc;
}

function remove_hash() {
    var scrollV, scrollH, loc = window.location;
    if ("pushState" in history){
        history.pushState("", document.title, loc.pathname + loc.search);
    } else {
        // Prevent scrolling by storing the page's current scroll offset
        scrollV = document.body.scrollTop;
        scrollH = document.body.scrollLeft;

        loc.hash = "";

        // Restore the scroll offset, should be flicker free
        document.body.scrollTop = scrollV;
        document.body.scrollLeft = scrollH;
    }
}

function show_update_interval_notice(interval){
    var html = '';
    if(!interval){
        html += sprintf(_js("This feed is updated in real time, thanks to the %s"),"<a target=\"_blank\" class=\"bluelink underlink\" href=\"https://code.google.com/p/pubsubhubbub/\">"+_js("PubSubHubbub protocol")+"</a>");
        html += '<p>'+_js("Articles should arrive at the moment they are posted.")+'</p>';
    }else if(interval == boosted_update_interval / 60){
        html += _js("This feed has been boosted and is updated every 10 minutes.");
        html += '<p><a class="bluelink underlink" target="_blank" href=\"https://www.inoreader.com/blog/2015/03/inoreader-how-to-boosting-feeds.html?utm_source=inoreader&utm_medium=inoreader&utm_campaign=update_interval_notice\">'+_js("Read more about feed boosting.")+'</a></p>';
    }else{
        html += _js("We have identified this to be the optimal update interval for the specific feed, based on a number of factors.");
        html += '<p>'+_js("If you need more frequent updates, you can either:")+'</p>';
        html += '<ul>';
        html += '<li><a class="bluelink underlink" target="_blank" href=\"https://www.inoreader.com/blog/2015/03/inoreader-how-to-boosting-feeds.html?utm_source=inoreader&utm_medium=inoreader&utm_campaign=update_interval_notice\">'+_js("Boost the feed.")+'</a></li>';
        html += '<li><a class="bluelink underlink" target="_blank" href=\"https://www.inoreader.com/blog/2015/04/polling-for-professional-accounts-stay.html?utm_source=inoreader&utm_medium=inoreader&utm_campaign=update_interval_notice\">'+_js("Guarantee yourself updates for all feeds in less than 1 hour.")+'</a></li>';
        html += '</ul>';
    }

    var params = {};
    params.content = html;
    dialog('update_interval_notice_dialog',params);
}

function copy_row_with_inputs(parent_selector_string, element, data_arr){
    var id_max = 0;
    $(parent_selector_string).find('input:text:first').each(function() {
        var id = this.id || "";
        var match = id.match(/^(.+?)(\d+)$/i) || [];
        if(match.length == 3) {
            id_max = Math.max(match[2], id_max);
        }
    });
    var clone_index = $(parent_selector_string).length;
    var $tr = $(element).closest(parent_selector_string);
    var $clone = $tr.clone();
    if(data_arr){
        var i;
        for (i = 0; i < data_arr.length; ++i) {
            $clone.attr('data-'+data_arr[i], 0);
        }
    }
    $clone.find(':text')
        .val('')
        .each(function() {
            var id = this.id || "";
            var match = id.match(/^(.+?)(\d+)$/i) || [];
            if(match.length == 3) {
                var newId = Math.max(clone_index, id_max) + 1;
                $(this).attr('id', match[1] + newId);
            }
        });
    $tr.after($clone);
}

function rem_row(parent_selector_string, element){
    $(element).parents(parent_selector_string).remove();
}

function set_caret_area(el){
    var id = el.id;
    if(id.substring(0, 14) != "emailbody_row_" && id != 'emailrule_subject') {
        return false;
    }
    caret_area = id;
}

function get_caret_area(){
    if(typeof caret_area === "undefined"){
        return false;
    }
    if(!caret_area){
        return false;
    }

    return caret_area;
}

function insert_at_caret(areaId, text) {
    var txtarea = document.getElementById(areaId);
    if(!txtarea){return;}

    var scroll_pos = txtarea.scrollTop;
    var str_pos = 0;
    var br = ((txtarea.selectionStart || txtarea.selectionStart == '0') ? "ff" : (document.selection ? "ie" : false ) );
    if(br == "ie"){
        txtarea.focus();
        var range = document.selection.createRange();
        range.moveStart ('character', -txtarea.value.length);
        str_pos = range.text.length;
    }else if(br == "ff"){
        str_pos = txtarea.selectionStart;
    }

    var front = (txtarea.value).substring(0, str_pos);
    var back = (txtarea.value).substring(str_pos, txtarea.value.length);
    txtarea.value = front + text + back;
    str_pos = str_pos + text.length;
    if(br == "ie"){
        txtarea.focus();
        var ieRange = document.selection.createRange();
        ieRange.moveStart ('character', -txtarea.value.length);
        ieRange.moveStart ('character', str_pos);
        ieRange.moveEnd ('character', 0);
        ieRange.select();
    }else if(br == "ff"){
        txtarea.selectionStart = str_pos;
        txtarea.selectionEnd = str_pos;
        txtarea.focus();
    }

    txtarea.scrollTop = scroll_pos;
}

function reset_payment_form (instance) {
    if(window.lastPaymentDialogParams) {
        inno_dialog_close('upgrade_dialog');
        dialog('upgrade_dialog', window.lastPaymentDialogParams);
    } else { //fallback to from reset (js)
        instance.clearSelectedPaymentMethod();
    }
}

function braintree_verify(client_token, threeDS_data, form, instance) {
    $('#upgrade_dialog').html('<div class="payment_processing">' + _js('Processing your payment.') + ' ' + _js('Please wait...') + '</div><div class="loader loader_high"></div>');
    var user_cancelled = false;

    $.post('/api/prepare_braintree.php', form, function (data) {
        form.payment_method_nonce = null;
        //console_log(data)
        if(!data.once3d) {
            form.payment_method_nonce = data.once;
            console_log('skipping 3ds', data);
            return finish_order(form)
        }
        braintree.client.create({ authorization: client_token }, function (createErr, clientInstance) {
            if (createErr) {
                console_log(createErr);
                if (createErr.code === 'CLIENT_AUTHORIZATION_INVALID') {
                    // either the client token has expired, and a new one should be generated
                    // or the tokenization key was deactivated or deleted
                } else {
                    // console.log('something went wrong creating the client instance', createErr);
                }
                Sentry && Sentry.captureException(createErr);
                reset_payment_form(instance);
                return;
            }

            braintree.threeDSecure.create({
                client: clientInstance,
                version: 2
            }, function (createError, threeDSecure) {
                if(createError) {
                  console_log(createError)
                }
                threeDSecure.on('lookup-complete', function (data, next) {
                    // check lookup data
                    console_log('lookup-complete', data)
                    next();
                });
                threeDSecure.on('customer-canceled', function () {
                    console_log('customer canceled');
                    user_cancelled = true
                });

                threeDS_data.nonce = data.once3d
                threeDS_data.bin = data.bin
                threeDS_data.challengeRequested = true;  // [INO-3575] Add param to verifyCard to fix frictionless failed errors
                console_log('threeDS_data', threeDS_data, data)
                threeDSecure.verifyCard(threeDS_data, function (verifyError, payload) {
                    if(verifyError) {
                        console_log(verifyError)
                        if(verifyError.code === 'THREEDS_LOOKUP_VALIDATION_ERROR' && verifyError.details &&
                            verifyError.details.originalError && verifyError.details.originalError.details &&
                            verifyError.details.originalError.details.originalError) {
                            //
                            var error = verifyError.details.originalError.details.originalError
                            if(error.threeDSecureInfo && error.threeDSecureInfo.liabilityShiftPossible === false) {
                                return finish_order(form)
                            }
                        }
                        Sentry && Sentry.captureException(verifyError, { extra: verifyError.details });
                        xajax_client_payment_error(verifyError);
                        return false;
                    }

                    console_log(payload)
                    if (!payload.liabilityShifted && payload.liabilityShiftPossible) {
                        $('#upgrade_button_do').prop('disabled', false).html(_js('Continue'));
                        reset_payment_form(instance)


                        if(!user_cancelled) {
                            xajax_client_payment_error(payload);
                            Sentry && Sentry.captureMessage('[Braintree] Liability did not shift', {extra: payload});
                        }
                        return;
                    }

                    // inspect payload
                    form.payment_method_nonce = payload.nonce;
                    // send payload.nonce to your server
                    finish_order(form);
                });
            });
        });
    }).fail(function(response) {
      var error = response.responseJSON
      payment_error_modal(error, true);
    });
}

function finish_order(form) {
    // console.log('finish order call')
    if (form.upgrade_period == undefined) {
        $('#upgrade_button_do').prop('disabled', false).html(_js('Continue'));
        xalert(_js('Please choose period'));
        return;
    }
    $('#upgrade_dialog').html('<div class="payment_processing">' + _js('Processing your payment.') + ' ' + _js('Please wait...') + '</div><div class="loader loader_high"></div>');
    $('#upgrade_dialog_close_button').remove();
    $('#upgrade_dialog_wrapper').css('border-radius', '10px');
    xajax_finish_braintree_order(form);
}

function braintree_init_dialog(client_token, threeDS_data, threeDS_disabled, params){
    // xajax_load_inspectlet(); // logrocket
    // threeDS_disabled = 1

    var braintree_locales = ['da_DK','de_DE','en_US','en_AU','en_GB','es_ES','fr_CA','fr_FR','id_ID','it_IT','ja_JP','ko_KR','nl_NL','no_NO','pl_PL','pt_BR','pt_PT','ru_RU','sv_SE','th_TH','zh_CN','zh_HK','zh_TW'];

    var braintree_locale = 'en_GB';
    if(locale != 'en_US'){
        for(var i in braintree_locales){
            if(braintree_locales[i] == locale){
                braintree_locale = braintree_locales[i];
                break;
            }
        }
    }

    var paypal_color = (theme == 4) ? 'black' : 'blue';
    //prepare params
    var bt_params = {
      authorization: client_token,
      locale: braintree_locale,
      selector: '#bt-dropin',
      paypal: {
        flow: 'vault',
        buttonStyle: {
          color: paypal_color,
          shape: 'rect',
          size: 'responsive'
        }
      },
      // threeDSecure: threeDS_disabled !== 1;
    };

    if(params.googlePay) {
      bt_params.googlePay = params.googlePay;
    };
    if(params.applePay) {
      bt_params.applePay = params.applePay;
    };
    //

    var dropinInstance = braintree.dropin.create(bt_params, function (createErr, instance) {
        if (createErr) {
            console_log('Create Error', createErr);
            return;
        }
        var paymentOptions = instance.getAvailablePaymentOptions();
        console_log('getAvailablePaymentOptions', paymentOptions);

        $('input[name="upgrade_period"]').change(function(e) {
          var form = xajax.getFormValues('upgrade_form');
          var amount = e.target.value === "monthly" ? form.price_monthly : form.price_annual;
          console_log(bt_params, amount);
          if(window.lastPaymentDialogParams) {
            lastPaymentDialogParams.period = e.target.value
          }

          // console.log(paymentOptions, paymentOptions.indexOf('googlePay'), paymentOptions.indexOf('applePay'));
          paymentOptions.indexOf('googlePay') !== -1 && bt_params.googlePay && instance.updateConfiguration('googlePay', 'transactionInfo',{
            currencyCode: bt_params.googlePay.transactionInfo.currencyCode,
            totalPrice: parseFloat(amount).toFixed(2),
            totalPriceStatus: bt_params.googlePay.transactionInfo.totalPriceStatus,
            totalPriceLabel: bt_params.googlePay.transactionInfo.totalPriceLabel
          });

          paymentOptions.indexOf('applePay') !== -1 && bt_params.applePay && instance.updateConfiguration('applePay', 'paymentRequest',{
            total: {
              amount: parseFloat(amount).toFixed(2),
              label: bt_params.applePay.paymentRequest.total.label
            },
          });
        });
        $('input[name="upgrade_period"]:checked').trigger('change');

        $('#upgrade_button_do').click(function (event) {
            event.preventDefault();

            var form = xajax.getFormValues('upgrade_form');
            threeDS_data.amount = form.upgrade_period === "monthly" ?
              Math.max(form.base_monthly, form.price_monthly) :
              Math.max(form.base_annualy, form.price_annual);
            threeDS_data.amount = parseFloat(threeDS_data.amount).toFixed(2);
            // console.log(form, threeDS_data);

            $('#upgrade_button_do').prop('disabled', true).html(_js('Loading...'));
            // {threeDSecure: threeDS_disabled === 1 ? false : threeDS_data}
            instance.requestPaymentMethod(function (err, payload) {
                  if (err) {
                      console_log('Request Payment Method Error', err);
                      if(Sentry) {
                          // var originalError = err.details
                          // console.log('sending to sentry', originalError)
                          if(err.details && err.details.originalError && err.details.originalError.details) {
                              var details = err.details.originalError.details
                              if(details.originalError)
                                err.message = err.message + '\n' + JSON.stringify(details.originalError)
                          }
                          Sentry.captureException(err);
                      }
                      return;
                  }
                  document.querySelector('#payment_method_nonce').value = payload.nonce;
                  document.querySelector('#payment_method_type').value = payload.type;
                  var form = xajax.getFormValues('upgrade_form');
                  form.liabilityShifted = payload.liabilityShifted;
                  form.liabilityShiftPossible = payload.liabilityShiftPossible;
                  form.payment_details = payload

                  if(threeDS_disabled !== 1) { //3ds not completely disabled
                      return braintree_verify(client_token, threeDS_data, form, instance);
                  } else {
                    finish_order(form);
                  }
              });
        });

        if (instance.isPaymentMethodRequestable()) {
            $('#upgrade_button_do').prop('disabled', false);
        }

        instance.on('paymentMethodRequestable', function (event) {
            if(event.paymentMethodIsSelected && (event.type === 'AndroidPayCard' || event.type === 'ApplePayCard')) {
              // console.log('gpay/apay selected');
              $('#upgrade_button_do').click()
            }
            console_log('paymentMethodRequestable',event);
            $('#upgrade_button_do').prop('disabled', false);
        });

        instance.on('noPaymentMethodRequestable', function (event) {
            $('#upgrade_button_do').prop('disabled', true);
        });

        $('#upgrade_button_do').html(_js('Continue'));
    });


    try{
        fbq('track', 'InitiateCheckout',
          {
            content_ids: ['partner_event_id'],
            eventref: ''
          }
        );
    }catch(e){

    }
};

function payment_complete_countdown(counter){
    setTimeout(function(){
        document.location.reload();
        // document.location.href = '/upgrade'
    },counter*1000);
    setInterval(function(){
        counter--;
        if(counter < 1){
            counter = 1;
        }
        $('#payment_complete_counter').html(__js('%s second','%s seconds',counter));
    },1000);
}

$(function(){
    if(window.INOREAD_OAUTH2_MODE === true)
      return false;
    if(Function('/*@cc_on return document.documentMode===10@*/')()){
        var fileref = document.createElement("link");
        fileref.setAttribute("rel", "stylesheet");
        fileref.setAttribute("type", "text/css");
        fileref.setAttribute("href", 'css/ie_overrides.css?v=' + application_version);
        document.getElementsByTagName("head")[0].appendChild(fileref);
    }
    resize();
    if(ul == 1){
        // User is logged
        // Start ajax functions first
        if(device_type == 'phone' && (tree_docked == 0 || tree_docked == null || tree_docked == undefined)){
            tree_docked = 1;
        }

        build_tree();
        get_notifications(true);

        // critical blocking functions
        start_toolbar();
        start_footer();
        bind_toolbar_events(true);
        init_tree_pane_dock();
        init_view_style();
        init_footer();
        init_window_focus_events();
        init_auto_dark_theme();

        checksum_timer = setTimeout(function(){
            checksum(false);
        },ajax_timer);

        // non-critical functions that can be delayed to speed-up initial load
        setTimeout(function(){
            bind_reader_pane_scroll();
            bind_hotkeys();
            bind_global_hotkeys();
            init_hashchange_events();
            init_autocomplete('#feed_searcher');
            check_new_update_subscriptions_radio_buttons();
            check_tree_ordering_radio_buttons();
            init_hide_tags();
            init_favicons();
            init_max_unread();
            init_tree_width();
            init_separate_tags();
            init_unseen_counters();
            init_lock_dragdrop();
            init_tree_scrollbar();
            init_font_settings();
            activate_add_subscription_more_expanded();
            check_bottom();
        },50);

        // Hack for Chrome on iOS where tree pane couldn't be scrolled
        // if(navigator.userAgent.match('CriOS')){
        if(device_type == 'phone'){
            $('#tree_pane').css('overflow','auto');
            $('#reader_pane').css('overflow','auto');
        }

        // Hack for Firefox Extension...
        if(is_firefox){
            setTimeout(function(){
                update_ff_addon_counters();
            },3000);
        }

        try{
            // Attach topics_progress_bar globally to 'html' data
            $('html').topics_progress_bar();
            topics_progress_bar = $('html').data('topics_progress_bar');
        }catch(e){
            topics_progress_bar = null;
        }

        setTimeout(function(){
            // other non-important event declarations
            $(document).mouseup(function(){
                $('#read_options_menu').hide();
                //$('.social_media_options').hide();
                $('#subscription_context_menu').hide();
                $('#tree_pane').find('.parent_div_inner_focused').removeClass('parent_div_inner_focused');
                hide_submenus();
            });

            $(window).on('keydown',function(e){
                if(e.keyCode == 27){ // Esc
                    close_picker();
                }
            });

            $(document).on('click','a.ajaxed',function(event){
                var href = $(this).attr('href');
                var protocol = this.protocol + '//';

                if(href.slice(protocol.length) !== protocol){
                    process_hashchange(href.substring(1));
                    set_loc();
                    event.preventDefault();
                }
            });

            $(window).on('beforeunload', function(event){
                if(score_queue.length > 0){
                    for(var i in score_queue){
                        delete score_queue[i].md5;
                    }
                    var beacon = document.createElement("img");
                    beacon.src = '/api/score_queue_beacon/?q=' + encodeURIComponent(JSON.stringify(score_queue));
                    document.body.appendChild(beacon);
                }
            });

            if(device_type == 'normal'){
                $(document).on('mouseover','.icon-bin',function(event){
                    $(this).removeClass('icon-bin').addClass('icon-bin_opened');
                });

                $(document).on('mouseout','.icon-bin_opened',function(event){
                    $(this).removeClass('icon-bin_opened').addClass('icon-bin');
                });

                $('#tree_pane').on('mouseenter','.unread_cnt_wrapper.ucw_hover',function(event){
                    uc_hover(this,true,event);
                });

                $('#tree_pane').on('mouseleave','.unread_cnt_wrapper.ucw_hover',function(event){
                    uc_hover(this,false,event);
                });

                $('#tree_pane').on('scroll',function(event){
                    fix_subscriptions_options_add_menu_position();
                });

                $('#tree_pane').on('mouseleave',function(event){
                    if($(this).hasClass('has_been_peeked')){
                        $(this).removeClass('has_been_peeked');
                        $(this).find('.parent_div_should_be_hidden').each(function(){
                            $(this).removeClass('parent_div_should_be_hidden').addClass('parent_div_hidden');
                        });
                    }
                });
            }

            if(broadcast_teams){
                if(joined_teams.length == 0){
                    broadcast_teams = '';
                }else{
                    var broadcast_teams_array = array_filter(broadcast_teams.split(','));
                    var joined_teams_ids = [];
                    for(var i in joined_teams){
                        joined_teams_ids.push(joined_teams[i].id);
                    }
                    if(broadcast_teams_array.length > 0){
                        for(var i in broadcast_teams_array){
                            if(!in_array(broadcast_teams_array[i],joined_teams_ids)){
                                broadcast_teams_array.splice(i,1);
                            }
                        }

                        broadcast_teams_array = [...new Set(broadcast_teams_array)];
                        broadcast_teams = broadcast_teams_array.join(',');
                    }
                }

                if(!broadcast_teams){
                    broadcast_privacy = 0;
                }
            }
        },100);
        // setTimeout(function(){
        //     if(!seen_ids.hasOwnProperty('id')){
        //         articles_initial_sync = true;
        //     }
        // },1);

        // Disable because of too many false positives!
        if(false && ads_enabled && !user_access[access_starter]){
            // THIS IS BROKEN. SEE ALERT BELOW
            var iframe = document.createElement('iframe');
            var html = '<!DOCTYPE html><html><head><script type="text/javascript" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script></head><body></body></html>';
            document.body.appendChild(iframe);
            iframe.contentWindow.document.open();
            iframe.contentWindow.document.write(html);
            iframe.contentWindow.document.close();
            iframe.onload = function(){
                var wecool = 'no';
                links = iframe.contentWindow.document.getElementsByTagName('link');
                for(var i in links){
                    if(links[i].href && links[i].href.indexOf('integrator.js')){
                        wecool = 'yes';
                    }
                }
                if(wecool == 'no'){
                    // ALERT HERE
                }
            };
        }
    }else{
        resize();
    }
    setInterval(function(){
        if(google_analytics_enabled){
            var focus = (window_focus == true) ? 'Page in focus' : 'Page in background';
            log_ga_event('State', focus, '');
        }

        // if(innologica_analytics_enabled){
        //     var focus = (window_focus == true) ? 'Page in focus' : 'Page in background';
        //     _paq.push(['trackEvent', 'State', focus, '']);
        // }

        if(!show_absolute_dates){
            fix_relative_dates();
        }

        flush_score_queue();
    },60000);

    setInterval(function(){
        increment_server_time();
    },1000);

    if(tree_has_hidden_sections || hide_read_feeds == 1){
        $('#tree_pane').addClass('has_hidden_sections');
    }

    setTimeout(function(){
        $('#below_tree_social').show();
    },1000);

    setTimeout(function(){
        if($('#tree_pane').is(':hover')){
            $('#tree_pane').css('overflow','auto');
        }
    },1);

    var covid_dismissed = readCookie('covid_dismissed');
    if(geoip && geoip.country_code == "CN"){
        covid_dismissed = true;
    }
    covid_dismissed = true; // Stop running the COVID-19 banner

    if(!covid_dismissed){
        var covid = '<a href="javascript:void(0);" onclick="dialog(\'covid_dialog\')"><div style="padding-left:16px;"><div style="font-weight:500">Get Free Local COVID-19 Alerts</div>with Inoreader</div><img src="/images/covid-icon.svg" class="covid_icon"></a>';
        $('#splitter').append('<div id="tree_announce" class="tree_announce tree_announce_covid">' + covid + '<span onclick="dismiss_announce(\'covid\')" class="icon16 icon_close_announce icon-cross" title="'+_js("Dismiss")+'"></span></div>');
    }

    // beta_optin_sidebar_banner();

    if(is_beta === 1){
        var nag = readCookie('hidebetathankyounag');
        if(nag != 1){
            getSVG('/images/svg/thank-you.svg', function (svg) {
              var content = '';
              content += '<div style="display:flex;align-items:center;">';
              content += '<div style="width:230px;"><div style="font-size:18px;font-weight:bold;">Thank you for testing the new Inoreader!</div>';
              content += '<div class="graylink" style="font-size:14px;margin-top:10px;">Your feedback was essential to us. You can now enjoy Inoreader on the stable channel again.</div>';
              content += '</div>';

              content += '<div style="padding-left:32px;">';
              content += svg;
              content += '</div>';
              dialog('beta_thank_you_dialog', {content: content});
            })
        }
    }

    if(Date.now()/1000 < 1644962399){
        if(readCookie('investing_hint_viewed') != 1){
            show_catalog_hint();
        }
    }
});

function beta_optin_sidebar_banner(){
  var beta_optin_dismissed = readCookie('beta_optin_dismissed');
  if(!beta_optin_dismissed){
    var html = '<a href="javascript:void();" onclick="redesign_dialog();" class=\"flex\"><div><span class="something_new something_beta mr-2 ml-0">beta</span><div>Test-drive the new Inoreader!</div></a>';
    $('#splitter').append('<div id="tree_announce" class="tree_announce tree_announce_covid tree_announce_beta">' + html + '<span onclick="dismiss_announce(\'beta_optin\')" class="icon16 icon_close_announce icon-cross" title="'+_js("Dismiss")+'"></span></div>');
  }
}

function sidebar_show_feeds_limit(feeds,limit,plan){
    var new_plan = (plan == 'Pro') ? 'Custom' : 'Pro';
    var html = '<div class="sidebar_limit_error_message">';
    html += '<div class="flex justify-content-between" onclick="subscriptions_overlimit_popup(' + feeds + ', ' + limit + ', \'' + plan + '\')">';
    html += '<span class="icon19 icon-exclamation-mark"></span>';
    html += '<span class="sidebar_limit_error_text">';
    html += _js("Some of your feeds have been deactivated!");
    // html += ' ';
    // html += sprintf(_js("Upgrade to %s to activate all feeds."),new_plan);
    html += '</span>';
    html += '</div>';
    html += '<a href="javascript:" class="sidebar_limit_error_more_info" onclick="subscriptions_overlimit_popup(' + feeds + ', ' + limit + ', \'' + plan + '\')">';
    html += '<span class="icon16 icon-welcome_help feeds_overusage_tippy" data-tippy-placement="top" data-tippy-content="' + _js("Why am I seeing this?") + '"></span>';
    html += '</a>';
    html += '</div>';
    $('#subscriptions_limit_message').html(html);

    tippy('.feeds_overusage_tippy');
}

function sidebar_remove_feeds_limit(){
    if($('#subscriptions_overlimit_popup')[0]){
        $('#subscriptions_limit_message').html('');
        $('#subscriptions_overlimit_popup').remove();
        resize();
    }
}

var $adsense_reader_pane = null;
var adsense_height_fixer_interval = null;
var adsense_height_fixer_cycles = 0;
var adsense_height_fixer_max_cycles = 100;
var ltr_koef = float_left === 'left' ? 1 : -1

function adsense_height_fixer(){
    if(!ads_enabled){
        return;
    }
    if(!$adsense_reader_pane){
        $adsense_reader_pane = $('#reader_pane');
    }
    adsense_height_fixer_cleanup();
    adsense_height_fixer_interval = setInterval(function(){
        if(adsense_height_fixer_cycles++ > adsense_height_fixer_max_cycles){
            adsense_height_fixer_cleanup();
        }else{

            if($adsense_reader_pane.height() <= 100){
                log_ga_event('AdSense Reader Pane collapse','AdSense Reader Pane collapse','Collapsed');
                resize();
                setTimeout(function(){resize(),10});
                adsense_height_fixer_cleanup();
            }
        }
    },50);
}

function adsense_height_fixer_cleanup(){
    if(adsense_height_fixer_interval){
        clearInterval(adsense_height_fixer_interval);
        adsense_height_fixer_interval = null;
        adsense_height_fixer_cycles = 0
    }
}

function dechex(d){
    return d.toString(16);
}

function hexdec(h) {
    return parseInt(h,16);
}

Object.size = function(obj) {
    var size = 0, key;
    for (key in obj) {
        if (obj.hasOwnProperty(key)) size++;
    }
    return size;
};

Object.keys = Object.keys || (function () {
        var hasOwnProperty = Object.prototype.hasOwnProperty,
            hasDontEnumBug = !{toString:null}.propertyIsEnumerable("toString"),
            DontEnums = [
                'toString',
                'toLocaleString',
                'valueOf',
                'hasOwnProperty',
                'isPrototypeOf',
                'propertyIsEnumerable',
                'constructor'
            ],
            DontEnumsLength = DontEnums.length;

        return function (o) {
            if (typeof o != "object" && typeof o != "function" || o === null)
                throw new TypeError("Object.keys called on a non-object");

            var result = [];
            for (var name in o) {
                if (hasOwnProperty.call(o, name))
                    result.push(name);
            }

            if (hasDontEnumBug) {
                for (var i = 0; i < DontEnumsLength; i++) {
                    if (hasOwnProperty.call(o, DontEnums[i]))
                        result.push(DontEnums[i]);
                }
            }

            return result;
        };
    })();

var emailrule_templ = {};

function dev_popup(){
    var html = '<div class="adb_left dev_left"><img src="/images/android-popup.png" style="width:100px;height:180px;position:relative;top:54px;right:-30px;"></div>';
    html += '<div class="adb_right">';
    html += '<div class="adb_right_header dev_right_header">We can make a good team!</div>';
    html += '<div class="adb_right_body">Are you a mobile developer looking for job? Are you using Inoreader on a daily basis? If yes, then you could actually help us with bringing Inoreader to the next level.<p>We are looking for talented Android developers to help us with our mobile apps and this time we are turning to you - our users, because who knows Inoreader better than you? Apply at <a class="bluelink underlink" href="mailto:jobs@innologica.com">jobs@innologica.com</a>.</p></div>';
    html += '<div class="adb_right_link_active"><a class="bluelink underlink" href="https://innologica.com/uncategorized/looking-for-talent-senior-android-developer/" target=\"_blank\">View current job offerings on innologica.com</a></div>';
    html += '<div class="adb_right_link_passive"><a class="bluelink underlink" href="javascript:void(0);" onclick="dev_close()">I\'m not interested (don\'t show this again)</a></div>';
    html += '</div>';

    dialog('dev_popup_dialog',{content: html});
}

function subscriptions_overlimit_popup(feeds,limit,plan){
    var bgcolor = (theme_is_dark) ? '#3d292c' : '#ffedef'
    var html = '<div class="user_over_feeds_limit_popup">';
    if(plan == 'Pro'){
        html += '<div class="user_over_feeds_limit_popup_h1">Reduce your usage or upgrade to an Custom plan!</div>';
    }else if(plan == 'Custom'){
        html += '<div class="user_over_feeds_limit_popup_h1">Reduce your usage or upgrade your Custom plan!</div>';
    }else{
        html += '<div class="user_over_feeds_limit_popup_h1">Reduce your usage or upgrade to Pro!</div>';
    }
    if(feeds > limit){
        html += '<div class="user_over_feeds_limit_popup_text">Your ' + plan + ' Inoreader account currently has <b>' + feeds + '</b> feeds. Please reduce this number below <b>' + limit + '</b> or <a class="bluelink ajaxed" href="javascript:void(0);" onclick="dialog(\'upgrade_dialog\',{access: access_pro, forced_entry: \'subscriptions_overlimit_popup\'})">upgrade to Inoreader Pro</a>.</div>';
    }
    html += '<p class="user_over_feeds_limit_popup_warning flex"><span class="icon19 icon-exclamation-mark mr-3"></span><span>Some of your feeds were automatically deactivated. If you don\'t take action, those feeds will be removed from your account in the future.</span></p>';
    html += '<div class="user_over_feeds_limit_popup_btns flex justify-content-between">';
    html += '<a class="graylink_darklink underlink" href="javascript:void(0);" onclick="inno_dialog_close(\'subscriptions_overlimit\');set_feed_param(\'subscriptions_list_list_filter\',1);dialog(\'preferences_dialog\',{set_category:\'preferences_subscriptions\',ajax:true, subscriptions_list_list_filter: 1});">View deactivated feeds</a>';

    if(plan == 'Pro'){
        html += '<button class="bluebutton greenbutton" style="min-width:144px; height: 40px;" onclick="init_addon_dialog();">' + _js('Request quote') + '</button>';
    }else if(plan == 'Custom'){
        html += '<button class="bluebutton greenbutton" style="min-width:144px; height: 40px;" onclick="dialog(\'feedback_dialog\', {from_team_request: 1})">' + _js('Request quote') + '</button>';
    }else{
        html += '<button class="bluebutton greenbutton" style="min-width:144px; height: 40px;" onclick="dialog(\'upgrade_dialog\',{access: access_pro, forced_entry: \'subscriptions_overlimit_popup\'})">' + sprintf(_js("Buy %s"),application_name + ' Pro') + '</button>';
    }

    html += '</div>';
    html += '</div>';

    dialog('subscriptions_overlimit',{content: html});
}

function dev_close(){
    inno_dialog_close('dev_popup_dialog');
    info_close('dev');
}

function clear_toolbar(){
    // var toolbar = document.getElementById('sb_rp_ribbon');
    var tools = document.getElementById('sb_rp_tools');
    var footer_controls = document.getElementById('fo_control_buttons');
    // toolbar.innerHTML = '';
    tools.innerHTML = '';
    footer_controls.innerHTML = '';
}

function build_toolbar(params){
    try{

    var articles_section = is_article_section(params);
    var subscribed_section = false;

    if(articles_section == true){
        for(var i in subscribed_sections){
            if(subscribed_sections[i] == params.filter_type){
                subscribed_section = true;
                break;
            }
        }
    }

    if($('#topic_progress_wrapper')[0]){
        $('#topic_progress_wrapper').appendTo('#footer').hide();
    }

    var html = '';
    var toolbar = document.getElementById('sb_rp_ribbon');
    var tools = document.getElementById('sb_rp_tools');
    var footer_controls = document.getElementById('fo_control_buttons');
    toolbar.innerHTML = '';
    tools.innerHTML = '';
    footer_controls.innerHTML = '';

    $('#sb_rp_heading_menu').remove();
    $('#sb_reading_part').removeClass('tag_reading_part');

    if(articles_section == true && params.filter_type != 'feed' && params.filter_type != 'old_search' && params.filter_pinned != 1){
        var mark_read_menu = [];
        n = 0;
        mark_read_menu[n++] = {type: 'link', icon: '', text: _js("Older than one day"), click: "read_multiple_articles(2)"};
        mark_read_menu[n++] = {type: 'link', icon: '', text: _js("Older than two days"), click: "read_multiple_articles(3)"};
        mark_read_menu[n++] = {type: 'link', icon: '', text: _js("Older than three days"), click: "read_multiple_articles(4)"};
        mark_read_menu[n++] = {type: 'link', icon: '', text: _js("Older than a week"), click: "read_multiple_articles(5)"};
        mark_read_menu[n++] = {type: 'link', icon: '', text: _js("Older than two weeks"), click: "read_multiple_articles(6)"};
        mark_read_menu[n++] = {type: 'line'};
        mark_read_menu[n++] = {type: 'heading', text: _js("Options")};

        if(mark_read_jump_to_next == 1){
            mark_read_menu[n++] = {type: 'link', icon: 'icon-checkmark', text: _js("Advance to next section"), click: "set_mark_read_jump_to_next(0);"};
        }else{
            mark_read_menu[n++] = {type: 'link', icon: '', text: _js("Advance to next section"), click: "set_mark_read_jump_to_next(1);"};
        }

        var mrol_text = (direction == 'ltr') ? _js("Button on left") : _js("Button on right");
        if(mark_read_on_left == 1){
            $('#sb_rp_ribbon').addClass('maar_on_left');
            $('.sb_rp_controls').addClass('maar_on_left');
            mark_read_menu[n++] = {type: 'link', icon: 'icon-checkmark', text: mrol_text, click: "set_mark_read_button_on_left(0);"};
        }else{
            // mark_read_menu[n++] = {type: 'link', icon: '', text: mrol_text, click: "set_mark_read_button_on_left(1);"};
        }

        if(mark_read_undo == 1){
            mark_read_menu[n++] = {type: 'link', icon: 'icon-checkmark', text: _js("Enable Undo"), click: "set_mark_read_undo(0);"};
        }else{
            mark_read_menu[n++] = {type: 'link', icon: '', text: _js("Enable Undo"), click: "set_mark_read_undo(1);"};
        }

        // toolbar.appendChild(inno_toolbar_spacer());
        // toolbar.appendChild(inno_toolbar_spacer());

    }else if(device_type != 'phone' && (params.filter_type == 'old_search' || params.filter_pinned == 1)){
        if(!params.filter_pinned){
            var icon = 'pin_up';
            var text = _js("Click to pin this search");
        }else{
            var icon = 'pin_down';
            var text = _js("Click to unpin this search");
        }
        toolbar.appendChild(inno_toolbar_spacer());
        toolbar.appendChild(inno_toolbar_spacer());
        toolbar.appendChild(inno_toolbar_button('sb_rp_pin_search','<span class="icon-' + icon + '"></span>',text,function(){ pin_filter() }));
    }else{
        //toolbar.appendChild(inno_toolbar_spacer());
    }
    if(params.heading){
        //toolbar.appendChild(inno_toolbar_spacer());
        // toolbar.appendChild(inno_toolbar_spacer());
        // if(params.filter_type == 'discovery'){
        //     toolbar.appendChild(inno_toolbar_spacer());
        //     toolbar.appendChild(inno_toolbar_spacer());
        // }else if(params.filter_type == 'bundles'){
        //     toolbar.appendChild(inno_toolbar_spacer());
        // }else if(params.filter_type == 'feed'){
        //     toolbar.appendChild(inno_toolbar_spacer());
        //     $(toolbar).append(params.favicon);
        //     toolbar.appendChild(inno_toolbar_spacer());
        // }else if(params.filter_type == 'upgrade'){
        //     toolbar.appendChild(inno_toolbar_spacer());
        // }else if(params.filter_type == 'upgrade_teams'){
        //     toolbar.appendChild(inno_toolbar_spacer());
        // }else if(params.filter_type == 'teams'){
        //     toolbar.appendChild(inno_toolbar_spacer());
        //     toolbar.appendChild(inno_toolbar_spacer());
        // }

        // toolbar.appendChild(inno_toolbar_heading(params.heading));
        if(title_counter != 0){
            doc_title = application_name + ' - ' + $("<div/>").html(params.heading).text();
        }else{
            doc_title = $("<div/>").html(params.heading).text();
        }

        set_title(title_num);
    }

    if(params.filter_type == 'dashboard'){
        var add_gadgets_label = (dsh_id == 1) ? _js("Create custom dashboard") : _js("Add gadgets");
        var dashboard_menu = [];
        n = 0;
        dashboard_menu[n++] = {type: 'heading', text: _js("Your dashboards")};

        for(var i in params.available_dashboards){
            dashboard_menu[n++] = {type: 'link',  icon: (params.active_dashboard.dsh_id == params.available_dashboards[i].dsh_id) ? 'icon-checkmark' : '', text: params.available_dashboards[i].dsh_name, click: "do_loading();xajax_user_dashboard('set_default'," + params.available_dashboards[i].dsh_id + ");"};
        }
        dashboard_menu[n++] = {type: 'line'};
        dashboard_menu[n++] = {type: 'heading', text: _js("New dashboard")};

        dashboard_menu[n++] = {type: 'link', text: _js("Create blank"), click: "dashboard_operation('new')"};
        dashboard_menu[n++] = {type: 'link', text: _js("Create from current"), click: "dashboard_operation('copy', {origin_dashboard_name: '" + params.active_dashboard.dsh_name.replace(/\'/,"\\'") + "', origin_dashboard_id: " + params.active_dashboard.dsh_id + "})"};

        dashboard_menu[n++] = {type: 'line'};
        dashboard_menu[n++] = {type: 'heading', text: _js("Current dashboard")};
        dashboard_menu[n++] = {type: 'link', text: add_gadgets_label, click: "dialog('dashboard_gadgets',{})"};
        dashboard_menu[n++] = {type: 'link', text: _js("Rename"), click: "dashboard_operation('rename', {dashboard_name: '" + params.active_dashboard.dsh_name.replace(/\'/,"\\'") + "', dashboard_id: " + params.active_dashboard.dsh_id + "})"};
        dashboard_menu[n++] = {type: 'link', text: _js("Delete"), click: "dashboard_operation('delete', {dashboard_id: " + params.active_dashboard.dsh_id + "})"};

        // dashboard_menu[n++] = {type: 'line'};
        // dashboard_menu[n++] = {type: 'heading', text: _js("Admin")};
        // dashboard_menu[n++] = {type: 'link', text: _js("Make default"), click: "xconfirm(_js('Are you sure?'),\"xajax_user_dashboard('set_system');\")"};

        toolbar.appendChild(inno_toolbar_button('sb_rp_view_options', '<span class="sb_rp_heading_ellipsis">' + params.active_dashboard.dsh_name + '</span><span class="icon-arrow_down_small"></span>','',dashboard_menu,'inno_toolbar_button inno_toolbar_button_with_arrow inno_toolbar_button_dashboard flex'));

        if(title_counter != 0){
            doc_title = application_name + ' - ' + _js("Dashboard");
        }else{
            doc_title = _js("Dashboard");
        }

        set_title(title_num);
    }

    if(params.filter_type == 'teams'){
        if(params.is_team_admin){
            var team_menu = [];
            n = 0;
            team_menu[n++] = {type: 'link', text: _js("Manage team"), click: "edit_organization(" + params.organization_id + ")"};
            team_menu[n++] = {type: 'link', text: _js("Manage members"), click: "edit_organization_members(" + params.organization_id + ")"};
            team_menu[n++] = {type: 'link', text: _js("Manage SSO") + ' (Beta)', click: "edit_organization_sso(" + params.organization_id + ")"};
            team_menu[n++] = {type: 'link', text: _js("Add channel"), click: "edit_team(0,{organization_id: " + params.organization_id + "})"};

            toolbar.appendChild(inno_toolbar_button('sb_rp_view_options', '<span class="sb_rp_heading_ellipsis">' + params.heading_text + '</span><span class="icon-arrow_down_small"></span>','',team_menu,'inno_toolbar_button inno_toolbar_button_with_arrow inno_toolbar_button_dashboard flex'));
        }else{
            var toolbar_heading = (params.heading_text) ? '<span class="sb_rp_heading_ellipsis">' + params.heading_text + '</span>' : '';
            var section_menu_button = inno_toolbar_button('sb_rp_heading',toolbar_heading,'', '', 'inno_toolbar_button inno_toolbar_rp_heading inno_toolbar_button_with_arrow flex');
            toolbar.appendChild(section_menu_button);
        }
    }

    if(articles_section == true){
        var view_menu = [];
        n = 0;

        view_menu[n++] = {type: 'heading', text: _js("Layout")};
        view_menu[n++] = {type: 'link', icon: 'icon-view_style_0', text: _js("List view"), title: _js("Hotkey")+': 1', click: "set_view_style(0)", class_name: (params.view_style == 0) ? '' : 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_inactive'};
        view_menu[n++] = {type: 'link', icon: 'icon-view_style_1', text: _js("Expanded view"), title: _js("Hotkey")+': 2', click: "set_view_style(1)", class_name: (params.view_style == 1) ? '' : 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_inactive'};
        if(device_type != 'phone'){
            view_menu[n++] = {type: 'link', icon: 'icon-view_style_2', text: _js("Column view"), title: _js("Hotkey")+': 3', click: "set_view_style(2)", class_name: (params.view_style == 2) ? '' : 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_inactive'};
        }

        view_menu[n++] = {type: 'link', icon: 'icon-view_style_3', text: _js("Card view"), title: _js("Hotkey")+': 4', click: "set_view_style(3)", class_name: (params.view_style == 3) ? '' : 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_inactive'};
        view_menu[n++] = {type: 'link', icon: 'icon-view_style_4', text: _js("Magazine view"), title: _js("Hotkey")+': 5', click: "set_view_style(4)", class_name: (params.view_style == 4) ? '' : 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_inactive'};

        // view_menu[n++] = {type: 'line'};
        // view_menu[n++] = {type: 'heading', text: _js("Themes")};

        // for(var tm in themes_order){
        //     var t = themes_order[tm];
        //     view_menu[n++] = {type: 'link', icon: global_themes[t].icon, text: global_themes[t].name, title: _js("Hotkey")+': ' + global_themes[t].hotkey, click: "set_theme(" + t + ")", class_name: (theme == t) ? '' : 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_inactive'};
        // }

        if(!user_is_guest){
            // view_menu[n++] = {type: 'link', icon: (high_contrast == 1) ? 'icon-checkmark' : '', text: _js("Contrast mode"), click: "toggle_high_contrast()"};
            if(device_type == 'phone'){
                view_menu[n++] = {type: 'line'};
                view_menu[n++] = {type: 'heading', text: _js("Articles filter")};
                view_menu[n++] = {type: 'link', icon: (params.view_unread == 1) ? 'icon-checkmark' : '', text: _js("All articles"), click: "set_view(1)"};
                view_menu[n++] = {type: 'link', icon: (params.view_unread == 0) ? 'icon-checkmark' : '', text: _js('Unread'), click: "set_view(0)"};
                view_menu[n++] = {type: 'link', icon: (params.view_unread == 2) ? 'icon-checkmark' : '', text: _js("Read later"), click: "set_view(2)"};
            }

            if(params.filter_type != 'trending' && params.filter_type != 'old_search' && params.filter_type != 'today'){
                var global_articles_order_scoped = global_articles_order;
                var magic_sort_not_available = false;

                if(global_articles_order_scoped == 2 && feed_params.filter_type != 'subscription' && feed_params.filter_type != 'folder' && feed_params.filter_type != 'feed' && feed_params.filter_type != '' && feed_params.filter_type != undefined && feed_params.filter_type != 'all_articles'){
                    magic_sort_not_available = true;
                    global_articles_order_scoped = 0;
                }

                var sort_txt = _js("Sorting");
                var local_articles_order = articles_order;

                has_scoped_sort = 'false';
                if(params.articles_order > -1){
                    local_articles_order = params.articles_order;
                }

                var custom_sort = ((feed_params.filter_type == 'subscription' || feed_params.filter_type == 'folder') && params.articles_order != -1) ? true : false;
                view_menu[n++] = {type: 'line'};
                view_menu[n++] = {type: 'heading', text: sort_txt};
                var title_txt = '';

                if(feed_params.filter_type == 'subscription'){
                    title_txt = _js("Go to Feed Settings to change sorting.");
                }else if(feed_params.filter_type == 'folder'){
                    title_txt = _js("Go to Folder Settings to change sorting.");
                }

                view_menu[n++] = {type: 'link', icon: (local_articles_order == 0) ? 'icon-checkmark' : '', text: _js("Newest first"), click: "set_articles_order(0," + has_scoped_sort + ")"};
                view_menu[n++] = {type: 'link', icon: (local_articles_order == 1) ? 'icon-checkmark' : '', text: _js("Oldest first"), click: "set_articles_order(1," + has_scoped_sort + ")"};
                if(sort_by_magic_enabled == 1){
                    var shield_text = '';
                    if(user_access[access_pro] != 1){
                        shield_text = ' <span class="icon14 icon-shield icon-yellow" title="' + _js("This feature is only available to Pro users") + '"></span>';
                    }

                    var magic_tooltip = '';
                    if(magic_sort_not_available){
                        magic_tooltip = _js("This function is not available for the current selection!");
                    }

                    view_menu[n++] = {type: 'link', icon: (local_articles_order == 2) ? 'icon-checkmark' : '', text: _js("Magic") + shield_text, click: "set_articles_order(2," + has_scoped_sort + ")", class_name: (magic_sort_not_available) ? 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_disabled' : null, title: (magic_sort_not_available) ? magic_tooltip : ''};
                }
            }


            if(params.filter_type != 'today'){
                view_menu[n++] = {type: 'line'};
                view_menu[n++] = {type: 'heading', text: _js("Grouping")};

                var group_article_list_1_ok = false;
                var no_grouping_1_title = '';

                if((params.view_unread != 1 && (params.filter_type == 'starred' || params.filter_type == 'folder' || !params.filter_type) || (params.filter_type == 'folder' && params.is_tag))){
                    group_article_list_1_ok = true;
                }else{
                    if(params.view_unread == 1){
                        no_grouping_1_title = _js("Grouping works in unread mode only.");
                    }else if(params.filter_type != 'folder' && params.filter_type != ""){
                        no_grouping_1_title = _js("Grouping works when viewing folders only.");
                    }else{
                        no_grouping_1_title = _js("Grouping is not available.");
                    }
                }

                var group_article_list_2_ok = true;
                var no_grouping_2_title = '';

                if(params.filter_type == 'trending'){
                    no_grouping_2_title = _js("Grouping is not available in this section");
                    group_article_list_2_ok = false;
                }else if(articles_order == 2){
                    no_grouping_2_title = _js("Grouping is not available when sorting by Magic.");
                    group_article_list_2_ok = false;
                }

                if((params.filter_type == 'subscription' || params.filter_type == 'folder') && params.group_article_list != undefined && params.group_article_list != -1){
                    var local_group_article_list = params.group_article_list;
                }else{
                    var local_group_article_list = group_article_list;
                }

                view_menu[n++] = {div_id: 'group_article_list_check_0', type: 'link', icon: (local_group_article_list == 0 || (local_group_article_list == 1 && !group_article_list_1_ok) || (local_group_article_list == 2 && !group_article_list_2_ok)) ? 'icon-checkmark' : '', text: _js("None"), click: "set_group_article_list(0)"};
                view_menu[n++] = {div_id: 'group_article_list_check_1', type: 'link', icon: (local_group_article_list == 1 && group_article_list_1_ok) ? 'icon-checkmark' : '', text: _js("By feed"), click: (group_article_list_1_ok) ? "set_group_article_list(1)" : null, class_name: (!group_article_list_1_ok) ? 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_disabled' : null, title: no_grouping_1_title};
                view_menu[n++] = {div_id: 'group_article_list_check_2', type: 'link', icon: (local_group_article_list == 2 && group_article_list_2_ok) ? 'icon-checkmark' : '', text: _js("By date"), click: (group_article_list_2_ok) ? "set_group_article_list(2)" : null, class_name: (!group_article_list_2_ok) ? 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_disabled' : null, title: no_grouping_2_title};
            }
        }

        if(params.filter_type == 'web_pages' || (params.filter_type == 'folder' && params.is_tag == true)){
            var tag_id = (params.filter_type == 'web_pages') ? 0 : params.filter_id;

            if(params.is_tag == true) {
                $('#sb_reading_part').addClass('tag_reading_part');
            }

            tools.appendChild(inno_toolbar_button('sb_rp_clip_page','<span class="inno_toolbar_button_caption">'+_js("Add web page")+'</span>','',function(){ add_clip(tag_id); },'inno_toolbar_button inno_toolbar_button_subscribe bluebutton'));

            tools.appendChild(inno_toolbar_spacer());
        }

        if(params && !$.isEmptyObject(params)){
            if(device_type != 'phone'){
                if(subscribed_section == true && params.tmp_search != 1 && params.filter_type != 'starred' && params.filter_type != 'web_pages' && params.filter_type != 'recent' && params.filter_type != 'annotated' && params.filter_type != 'liked' && params.filter_type != 'instapaper' && params.filter_type != 'evernote' && params.filter_type != 'pocket' && params.filter_type != 'onenote' && params.filter_type != 'commented' && params.filter_type != 'article'){

                    if(mark_read_on_left == 0){
                        tools.appendChild(inno_toolbar_button('sb_rp_mark_read', '<span class="icon16 icon-upgrade-feature-checkmark"></span><span class="maar-text">' + _js("Mark all as read") + '</span>',null,function(){ read_multiple_articles(1) },'inno_toolbar_button inno_toolbar_button_mark_read'));
                        tools.appendChild(inno_toolbar_button('sb_rp_mark_read_menu','<div class="sb_rp_mark_read_menu_divider"></div><span class="icon-arrow_down_small"></span>','',mark_read_menu,'inno_toolbar_button inno_toolbar_button_narrow inno_toolbar_button_mark_read_tick'));

                        tools.appendChild(inno_toolbar_spacer());
                    }

                    var buttons = [];
                    var unread_filter_menu = [];
                    n = 0;
                    $b = 0;

                    buttons[$b++] =
                    {
                        id: 'unread_cnt_top',
                        caption: _js('Unread'),
                        value: 0,
                        active: params.view_unread == 0 ? true : false
                    }

                    buttons[$b++] =
                    {
                        id: 'all_cnt_top',
                        caption: _js('All articles'),
                        value: 1,
                        active: params.view_unread == 1 ? true : false
                    }

                    if(params.view_unread == 2){
                        buttons[$b++] =
                        {
                            id: 'favorites_cnt_top',
                            caption: _js('Read later'),
                            value: 2,
                            active: params.view_unread == 2 ? true : false
                        }
                    }else{
                        unread_filter_menu[n++] = {type: 'link', icon: '', text: _js("Read later") + ' (' + _js('Starred') + ')', click: "set_view(2)"};
                    }

                    unread_filter_menu[n++] = {type: 'link', icon: '', text: _js("Older than..."), click: "set_view_period()"};

                    tools.appendChild(inno_toolbar_switcher('unread_filter_switcher', buttons, set_view));
                    document.getElementById('unread_filter_switcher').appendChild(inno_toolbar_button('sb_rp_unread_filter_menu','<div class="sb_rp_mark_read_menu_divider sb_rp_unread_filter_menu_divider"></div><span class="icon-arrow_down_small"></span>','',unread_filter_menu,'inno_toolbar_button inno_toolbar_button_narrow inno_toolbar_button_mark_read_tick'));

                    tools.appendChild(inno_toolbar_spacer());

                    footer_controls.appendChild(inno_toolbar_spacer("inno_toolbar_spacer inno_toolbar_spacer_footer"));
                    footer_controls.appendChild(inno_toolbar_spacer("inno_toolbar_spacer inno_toolbar_spacer_footer"));
                    footer_controls.appendChild(inno_toolbar_button('fo_rp_mark_read','<span class="icon-checkmark_big"></span> <span class="footer_caption_button" style="padding-' + float_left + ': 9px;">' + _js("Mark all as read") + '</span>',_js("Hotkey") + ': Shift + A',function(){ read_multiple_articles(1) },"inno_toolbar_button inno_toolbar_button_short inno_toolbar_button_dark_caption"));
                }else if(params.filter_type == 'starred'){
                    tools.appendChild(inno_toolbar_button('sb_rp_unstar','<span class="inno_toolbar_button_caption">'+_js("Clear all")+'</span>',null,function(){ unstar_all_articles() }));
                }else if(params.filter_type == 'recent'){
                    tools.appendChild(inno_toolbar_button('sb_rp_clear_recent','<span class="inno_toolbar_button_caption">'+_js("Clear all")+'</span>',null,function(){ clear_recently_read(params) }));
                }
            }else{

                if(params.filter_type == 'recent'){
                  tools.appendChild(inno_toolbar_button('sb_rp_clear_recent','<span class="inno_toolbar_button_caption">'+_js("Clear all")+'</span>',null,function(){ clear_recently_read(params) }));
                }else if(params.filter_type == 'starred'){
                  tools.appendChild(inno_toolbar_button('sb_rp_unstar','<span class="inno_toolbar_button_caption">'+_js("Clear all")+'</span>',null,function(){ unstar_all_articles() }));
                }else {
                  tools.appendChild(inno_toolbar_button('sb_rp_mark_read_mobile','<span class="icon-checkmark_big"></span>',null,function(){ read_multiple_articles(1) }));
                }
            }
        }

        // Feed/Folder options
        if(!user_is_guest){
            if(params.filter_type == 'subscription' && params.tmp_search != 1){
                if(params.remote_user_id > 0){
                    var options_text = _js("Connection settings");
                }else if(params.team_id > 0){
                    var options_text = _js("Team settings");
                }else{
                    var options_text = _js("Feed settings");
                }
            }else if(params.filter_type == 'feed'){
                var options_text = _js("Feed settings");

                if(params.similar_feeds){
                    var similar_menu = [];
                    n = 0;
                    similar_menu[n++] = {type: 'heading', text: _js('Similar feeds') };

                    for(var i in params.similar_feeds){
                        similar_menu[n++] = {type: 'link', image: params.similar_feeds[i].icon, text: params.similar_feeds[i].title, click: 'view_feed("' + encodeURIComponent(params.similar_feeds[i].rss_url) + '")'};
                    }

                }
            }else if(params.filter_type == 'bundle'){
                var options_text = _js("Bundle settings");

            }else if(params.filter_type == 'folder' && params.tmp_search != 1){
                if(params.is_tag === false){
                    var options_text = _js("Folder settings");
                }else if(params.is_tag === true){
                    var options_text = _js("Tag settings");
                }else{
                    var options_text = _js("Search settings");
                }
            }else if(params.filter_type == 'tags'){
                var options_text = _js("Tags settings");
            }else if(params.filter_type == 'active_searches'){
                var options_text = _js("Search settings");
            }else if(params.filter_type == 'channel'){
                var options_text = _js("Channels settings");
            }else if(params.filter_type == 'starred'){
                var options_text = _js("Starred settings");
            }else if(params.filter_type == 'today'){
                var options_text = _js("Today settings");
            }else if(params.filter_type == 'trending'){
                var options_text = _js("Trending settings");
            }else if(params.filter_type == 'old_search' || params.tmp_search == 1){
                if(device_type != 'phone'){
                    tools.appendChild(inno_toolbar_button('sb_rp_create_as','<span class="inno_toolbar_button_caption">'+_js("Monitor keyword")+'</span>','',function(){ create_active_search() }));
                    tools.appendChild(inno_toolbar_spacer());
                    tools.appendChild(inno_toolbar_spacer());

                    if(params.search_options){
                        var search_in_text = '';
                        if(params.filter_type == 'old_search' && search_options == 1){
                            search_in_text = _js("All articles");
                        }else if(params.filter_type == 'old_search' && search_options == 4){
                            search_in_text = _js("All public feeds");
                        }else if(params.filter_type == 'starred'){
                            search_in_text = _js("Read later");
                        }else if(params.tmp_search == 1 && params.filter_type == 'folder'){
                            search_in_text = params.search_options.folders[params.filter_id];
                            if(search_in_text == undefined){
                                search_in_text = params.search_options.tags[params.filter_id];
                            }
                            if(search_in_text == undefined){
                                search_in_text = params.search_options.active_searches[params.filter_id];
                            }
                        }else if(params.tmp_search == 1 && params.filter_type == 'subscription'){
                            search_in_text = params.search_options.subscriptions[params.filter_id];
                        }

                        var search_in_menu = [];
                        n = 0;
                        search_in_menu[n++] = {type: 'link', icon: (params.filter_type == 'old_search' && search_options == 1) ? 'icon-checkmark' : '', text: _js("All articles"), click: "set_search_filter_section('')"};
                        search_in_menu[n++] = {type: 'link', icon: (params.filter_type == 'starred') ? 'icon-checkmark' : '', text: _js("Read later"), click: "set_search_filter_section('starred')"};
                        search_in_menu[n++] = {type: 'link', icon: (params.filter_type == 'old_search' && search_options == 4) ? 'icon-checkmark' : '', text: _js("All public feeds"), click: "set_search_filter_section('public')"};

                        if(params.search_options.folders){

                            search_in_menu[n++] = {type: 'line'};
                            search_in_menu[n++] = {type: 'heading', text: _js("Folders")};

                            if(Object.size(params.search_options.folders) > menu_filters_threshold){
                                search_in_menu[n++] = {type: 'filter', placeholder: _js("Filter folders..."), value: null };
                            }

                            for(var i in params.search_options.folders){
                                search_in_menu[n++] = {type: 'link', icon: (params.filter_type == 'folder' && params.filter_id == i) ? 'icon-checkmark' : '', text: params.search_options.folders[i], click: "set_search_filter_section('folder_" + i + "')"};
                            }
                        }

                        if(params.search_options.tags){
                            search_in_menu[n++] = {type: 'line'};
                            search_in_menu[n++] = {type: 'heading', text: _js("Tags")};

                            if(Object.size(params.search_options.tags) > menu_filters_threshold){
                                search_in_menu[n++] = {type: 'filter', placeholder: _js("Filter tags..."), value: null };
                            }

                            for(var i in params.search_options.tags){
                                search_in_menu[n++] = {type: 'link', icon: (params.filter_type == 'folder' && params.filter_id == i) ? 'icon-checkmark' : '', text: params.search_options.tags[i], click: "set_search_filter_section('folder_" + i + "')"};
                            }
                        }

                        if(params.search_options.active_searches){
                            search_in_menu[n++] = {type: 'line'};
                            search_in_menu[n++] = {type: 'heading', text: _js("Monitored keywords")};

                            if(Object.size(params.search_options.active_searches) > menu_filters_threshold){
                                search_in_menu[n++] = {type: 'filter', placeholder: _js("Filter keywords..."), value: null };
                            }

                            for(var i in params.search_options.active_searches){
                                search_in_menu[n++] = {type: 'link', icon: (params.filter_type == 'folder' && params.filter_id == i) ? 'icon-checkmark' : '', text: params.search_options.active_searches[i], click: "set_search_filter_section('folder_" + i + "')"};
                            }
                        }

                        if(params.search_options.subscriptions){
                            search_in_menu[n++] = {type: 'line'};
                            search_in_menu[n++] = {type: 'heading', text: _js("Feeds")};

                            if(Object.size(params.search_options.folders) > menu_filters_threshold){
                                search_in_menu[n++] = {type: 'filter', placeholder: _js("Filter subscriptions..."), value: null };
                            }

                            for(var i in params.search_options.subscriptions){
                                search_in_menu[n++] = {type: 'link', icon: (params.filter_type == 'subscription' && params.filter_id == i) ? 'icon-checkmark' : '', text: params.search_options.subscriptions[i], click: "set_search_filter_section('subscription_" + i + "')"};
                            }
                        }

                        tools.appendChild(inno_toolbar_button('sb_rp_search_in','<span class="inno_toolbar_button_caption">' + search_in_text + '</span><span class="icon-arrow_down_small inno_toolbar_tick_padding"></span>','',search_in_menu, 'inno_toolbar_button inno_toolbar_button_with_arrow'));
                    }
                }

                var options_text = _js("Search options");
            }else{
                var options_text = _js("Stream options");
            }

            if(params.filter_type != 'article' && params.filter_type != 'feeds' && params.heading){
                if(params.similar_feeds){
                    tools.appendChild(inno_toolbar_button('sb_rp_similar_feeds','<span class="inno_toolbar_button_caption">'+_js("Similar feeds")+'</span><span class="icon-arrow_down_small inno_toolbar_tick_padding"></span>','',similar_menu, 'inno_toolbar_button inno_toolbar_button_with_arrow'));
                }else{
                    var section_menu = get_section_menu(params);
                    var section_id = 'sb_rp_heading';
                    var toolbar_heading = (params.heading) ? '<span class="sb_rp_heading_ellipsis">' + fix_tag_name(params.heading) + '</span>' : '';
                    var section_menu_button = inno_toolbar_button(section_id,toolbar_heading + '<span class="icon-arrow_down_small"></span>','',section_menu, 'inno_toolbar_button inno_toolbar_rp_heading inno_toolbar_button_with_arrow flex');
                }
            }
        }
        if(section_menu_button){
            toolbar.appendChild(section_menu_button);
        }

        if(subscribed_section == true && params.tmp_search != 1 && mark_read_on_left == 1 && params.filter_type != 'starred' && params.filter_type != 'web_pages' && device_type != 'phone'){
            $('#sb_rp_ribbon').addClass('maar_on_left');
            $('.sb_rp_controls').addClass('maar_on_left');
            toolbar.appendChild(inno_toolbar_button('sb_rp_mark_read', '<span class="icon16 icon-upgrade-feature-checkmark"></span><span class="maar-text">' + _js("Mark all as read") + '</span>',null,function(){ read_multiple_articles(1) },'inno_toolbar_button inno_toolbar_button_mark_read'));
            toolbar.appendChild(inno_toolbar_button('sb_rp_mark_read_menu','<div class="sb_rp_mark_read_menu_divider"></div><span class="icon-arrow_down_small"></span>','',mark_read_menu,'inno_toolbar_button inno_toolbar_button_narrow inno_toolbar_button_mark_read_tick'));

            toolbar.appendChild(inno_toolbar_spacer());
        }

        if(params.filter_type == 'feed'){

            //toolbar.appendChild(inno_toolbar_spacer());
            //toolbar.appendChild(inno_toolbar_spacer());

            //toolbar.appendChild(inno_toolbar_button('sb_rp_subscribe','<span class="inno_toolbar_button_caption">'+_js("Follow")+'</span>','',function(){ add_subscription(params.rss_url,true,false); },'inno_toolbar_button inno_toolbar_button_subscribe bluebutton'));
            //toolbar.appendChild(inno_toolbar_spacer());
            if(user_registered_since < 60*60*24*7 && subscribe_onboarding_shown == 0){
                onboard_start_tour_subscribe();
                createCookie('subscribe_onboarding_shown',1,30);
                subscribe_onboarding_shown = 1;
            }
        }


        if(params.filter_type == 'bundle'){

            if(user_registered_since < 60*60*24*7 && subscribe_onboarding_shown == 0){
                onboard_start_tour_subscribe();
                createCookie('subscribe_onboarding_shown',1,30);
                subscribe_onboarding_shown = 1;
            }
        }

        if(params.social_account_connected && (params.filter_type == 'twitter_search' || params.filter_type == 'google_plus_search' || params.filter_type == 'google_news_search')){
            toolbar.appendChild(inno_toolbar_spacer());
            toolbar.appendChild(inno_toolbar_spacer());
            if(params.filter_type == 'twitter_search'){
                toolbar.appendChild(inno_toolbar_button('sb_rp_subscribe','<span class="inno_toolbar_button_caption">'+_js("Follow this search")+'</span>','',function(){ twitter_subscribe('https://twitter.com/search?q=' + $('#twitter_search_term').val(),'search'); },'inno_toolbar_button inno_toolbar_button_subscribe'));
            }else if(params.filter_type == 'google_plus_search'){
                toolbar.appendChild(inno_toolbar_button('sb_rp_subscribe','<span class="inno_toolbar_button_caption">'+_js("Follow this search")+'</span>','',function(){ google_plus_subscribe('https://plus.google.com/s/' + $('#google_plus_search_term').val(),'search'); },'inno_toolbar_button inno_toolbar_button_subscribe'));
            }else if(params.filter_type == 'google_news_search'){
                toolbar.appendChild(inno_toolbar_button('sb_rp_subscribe','<span class="inno_toolbar_button_caption">'+_js("Follow this search")+'</span>','',function(){ google_news_subscribe('http://news.google.com/news?hl=en&gl=us&q=' + $('#google_news_search_term').val() + '&um=1&ie=UTF-8&output=rss','search'); },'inno_toolbar_button inno_toolbar_button_subscribe'));
            }
            toolbar.appendChild(inno_toolbar_spacer());
            if(user_registered_since < 60*60*24*7 && subscribe_onboarding_shown == 0){
                onboard_start_tour_subscribe();
                createCookie('subscribe_onboarding_shown',1);
                subscribe_onboarding_shown = 1;
            }
        }

        if(params.filter_type != 'article'){
            if(!user_is_guest){
                // if(device_type != 'phone' || (device_type == 'phone' && view_style == 0)){
                if(device_type != 'phone'){
                    tools.appendChild(inno_toolbar_button('sb_rp_prev_article','<span class="icon-arrow_up_big"></span>',_js("Previous article")+' ('+_js("Hotkey")+': k)',function(e){ move_article_button('prev',e) }, 'inno_toolbar_button inno_toolbar_button_next_prev'));
                    tools.appendChild(inno_toolbar_button('sb_rp_next_article','<span class="icon-arrow_down_big"></span>',_js("Next article")+' ('+_js("Hotkey")+': j)',function(e){ move_article_button('next',e) }, 'inno_toolbar_button inno_toolbar_button_next_prev'));
                    // tools.appendChild(inno_toolbar_spacer());

                    tools.appendChild(inno_toolbar_button('sb_rp_refresh','<span class="icon-loop-new"></span><div id="refresh_button_badge" class="notifications_badge_neutral"></div>',_js("Refresh articles from current feeds")+' ('+_js("Hotkey")+': R)', function(){ reload_articles(); }));

                    check_new_articles_badge();

                }else{
                    var left_footer = document.getElementById('mf_left_part');
                    left_footer.innerHTML = '';

                    left_footer.appendChild(inno_toolbar_button('sb_rp_prev_article','<span class="icon16 icon-arrow_up_big"></span>',false,function(e){ move_article_button('prev',e) }, 'inno_toolbar_button inno_toolbar_button_next_prev'));
                    left_footer.appendChild(inno_toolbar_button('sb_rp_next_article','<span class="icon16 icon-arrow_down_big"></span>',false,function(e){ move_article_button('next',e) }, 'inno_toolbar_button inno_toolbar_button_next_prev'));

                    left_footer.appendChild(inno_toolbar_button('sb_rp_close_article','<span class="icon16 icon-cross_big"></span>',null,function(e){
                        if(view_style == 0){
                            toggle_articleview(get_aid());
                        }else if(view_style == 3 || view_style == 4){
                            inno_dialog_close('article_dialog');
                        }
                        $(this).hide();
                    }));

                    // var rightmost_footer = document.getElementById('mf_rightmost_part');
                    // rightmost_footer.innerHTML = '';

                    // rightmost_footer.appendChild(inno_toolbar_button('sb_rp_fullscreen','<span class="icon-loop"></span>',false,function(e){ mobile_fullsceren(); }));

                }
            }

            tools.appendChild(inno_toolbar_button('sb_rp_search','<span class="icon-inside_feed_search"></span>',_js("Search"), function(){ show_local_search_div(); }));
            tools.appendChild(inno_toolbar_button('sb_rp_view_options','<span class="icon-eye-menu"></span>',_js("Reading options"),view_menu,'inno_toolbar_button'));
        }

    }else{
        if(params.filter_type == 'stats'){

        }else if(params.filter_type == 'tags_dashboard' || params.filter_type == 'team_tags_dashboard' || params.filter_type == 'library' || params.filter_type == 'rules' || params.filter_type == 'filters' || params.filter_type == 'highlighters' || params.filter_type == 'new_tag' || params.filter_type == 'new_folder' || params.filter_type == 'add_newsletter'){
            var toolbar_heading = (params.heading) ? '<span class="sb_rp_heading_ellipsis">' + params.heading + '</span>' : '';
            var section_menu_button = inno_toolbar_button('sb_rp_heading',toolbar_heading,'', '', 'inno_toolbar_button inno_toolbar_rp_heading inno_toolbar_button_with_arrow flex');
            toolbar.appendChild(section_menu_button);
        }else if(params.filter_type == 'dashboard'){
            var add_gadgets_label = (dsh_id == 1) ? _js("Create custom dashboard") : _js("Add gadgets");
            if(device_type == 'phone'){
                add_gadgets_label = '<span class="icon-plus"></span>';
            }
            tools.appendChild(inno_toolbar_button('sb_rp_add_gadgets','<span class="inno_toolbar_button_caption bluebutton">' + add_gadgets_label + '</span>','',function(){ dialog('dashboard_gadgets',{}) ;}));
            $('.sb_rp_controls').addClass('dashboard_right_controls');
            $('#sb_rp_ribbon').addClass('dashboard_left_controls');
            var layout_menu = [];
            n = 0;

            if(device_type != 'phone'){
                layout_menu[n++] = {type: 'heading', text: _js("Choose layout")};

                var layout_names = [];
                layout_names[1] = _js("Single column");
                layout_names[2] = _js("Two columns");
                layout_names[3] = _js("Two columns");
                layout_names[4] = _js("Two columns");
                layout_names[5] = _js("Three columns");

                for(var i=1; i<=5; i++){
                    layout_menu[n++] = {type: 'link',  icon: 'icon-dashboard_view_style_' + (i-1) , text: layout_names[i], click: "do_loading();xajax_user_dashboard('set_layout'," + i + ");", class_name: (params.dashboard_layout == i) ? '' : 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_inactive'};
                }
            }

            tools.appendChild(inno_toolbar_button('sb_rp_dashboard_view','<span class="icon-eye-menu"></span>',_js("Dashboard layout"),layout_menu,'inno_toolbar_button'));
        }
    }

    if(tools && tools.innerHTML == ''){
        var eye_menu = get_eye_menu(1);
        if(eye_menu){
            tools.appendChild(inno_toolbar_button('sb_rp_view_options','<span class="icon-eye-menu"></span>',_js("View options"),eye_menu,'inno_toolbar_button'));
        }
    }

    // if(audio_player_playlist.length > 0){
    //     var quick_class = '';
    //     var quick_html = '<span class="icon-play"></span>';
    //     var quick_title = _js("Play current track");
    //     if(audio_player_started_playing){
    //         quick_class = 'inno_toolbar_button quick_player_showed';
    //         if($('#audio_player')[0] && !$('#audio_player')[0].paused){
    //             quick_html = '<span class="icon-pause"></span>';
    //             quick_title = _js("Pause current track");
    //         }
    //     }
    //     tools.appendChild(inno_toolbar_button('sb_rp_audio_player','<span class="icon-player-menu"></span>',_js("Podcast Player"),function(){ if($('#audio_player_dialog')[0]){ inno_dialog_close('audio_player_dialog'); }else{ dialog('audio_player_dialog');} }));
    //     tools.appendChild(inno_toolbar_button('sb_rp_audio_player_quick_play',quick_html,quick_title,function(){ play_pause_current_audio(); }, quick_class));
    // }

    bind_toolbar_events(false);
    resize_toolbar_heading();
    fix_ellipsis_caption('.inno_toolbar_text_node');
    $('.inno_toolbar_button').disableSelection();
    last_toolbar_params = params;

    if($('#topic_progress_wrapper')[0]){
        $('#topic_progress_wrapper').prependTo('#fo_control_buttons').show();
    }

    $('#unread_filter_switcher').find('.inno_toolbar_switcher_button').last().addClass('last-btn');

}catch(e){
    console_log(e);
}
}

function check_bottom(force,from_scroll){
    if(current_xajax_requests.print_articles != null || current_xajax_requests.discover != null){
        stop_loading();
        return;
    }
    var wraper = document.getElementById('reader_pane');
    var hh = (wraper.scrollHeight - wraper.scrollTop) - $('#reader_pane').height();
    var height_distance;
    if(view_style == 0 || view_style == 2){
        var coef = prefetch_list_view / 20;
        height_distance = 500 * coef;
    }else if(view_style == 1){
        var coef = prefetch_expanded_view / 3;
        height_distance = 1200 * coef;
    }else if(view_style == 3){
        var coef = prefetch_tiles_view / 24;
        height_distance = 800 * coef;
    }else if(view_style == 4){
        var coef = prefetch_magazine_view / 20;
        height_distance = 800 * coef;
    }else{
        var coef = prefetch_list_view / 20;
        height_distance = 500 * coef;
    }

    if(hh < height_distance || force == true){
        if($('#next_articles').is('div')){
            print_articles(false,seen_ids);
            if(next_articles_timeout){
                clearTimeout(next_articles_timeout);
            }
            next_articles_timeout = setTimeout(function(){
                $('#next_articles').finish().animate({ opacity: 1.0 }, 300, function(){});
            },1000);
        }else if($('#next_feeds').is('div')){
            clear_racing_xajax_requests();
            xajax_build_searcher_content(discovery_params);
        }else if($('#next_team_activity').is('div')){
            clear_racing_xajax_requests();
            var organization_id = $('#next_team_activity').data('organization-id');
            var params = {};
            params.seen_ids = [];
            params.last_date = 0;
            $('#team_dashboard_activity').find('.team_dashboard_activity_container').each(function(){
                params.seen_ids.push($(this).data('entry-id'));
                params.last_date = $(this).data('entry-date')
            });
            xajax_print_team_dashboard_activity(organization_id, params);
        }

        if(from_scroll && $('#older_articles_hint')[0]){
            if(hh == 0 && !$('#older_articles_hint').is(':animated')){
                var highlight_color = '#FFF9DB';
                if(theme == 2){
                    highlight_color = '#FFF2B3';
                }else if(theme == 3){
                    highlight_color = '#ffd9ab';
                }else if(theme == 4){
                    highlight_color = '#57544B';
                }
                $('#older_articles_hint').effect('highlight',{ color: highlight_color },250);
            }
        }
    }

    if(hh == 0 && articles_moving){
        articles_moving = false;
    }
}


function subscribe_changelog(){
    inno_dialog_close('changelog_dialog');
    add_subscription(application_address + '/stream/system/changelog');
}

function add_subscription(url,force,from_discovery){
    var forced_url = (url) ? true : false;
    if(url == undefined){
        var url = $('#feed_searcher').val();
    }

    if(forced_url && user_is_guest){
        show_dialog('account_dialog',{subscribe_action: 'feed', subscribe_id: url});
        return;
    }

    if(url.length == 0){
        xalert(_js("Please enter an URL or keywords."),1);
        return;
    }

    if(onboard_tour){
        onboard_stop_tour();
    }

    var username = '';
    var password = '';
    var auth_type = '';
    if($('#asoa').is(':checked')){
        if(user_access[access_premium] != 1){
            xalert(_js("Authenticated feeds are only available to Plus and Pro users")+'!<br><br><a class="bluelink ajaxed" href="/upgrade/feature/auth_feeds">'+_js("Upgrade now")+'</a>');
            return;
        }
        username = $('#add_feed_auth_username').val();
        password = $('#add_feed_auth_password').val();
        auth_type = $('#add_feed_auth_auth_type').val();
        if(username == ''){
            xalert(_js("Please enter username."),1,$('#add_feed_auth_username').focus().click());
            return;
        }
        if(password == ''){
            xalert(_js("Please enter password."),1,$('#add_feed_auth_password').focus().click());
            return;
        }
        inno_dialog_close('feed_advanced_add_dialog');
    }

    do_loading(_js('Loading') + '...');
    var folders = [];
    if(add_subscription_more_expanded){
        $('.aif_checkboxes').each(function(){
            if($(this).is(':checked')){
                folders.push($(this).val());
            }
        });
    }

    if(tmp_folders.length > 0){
        for(var i in tmp_folders){
            folders.push(tmp_folders[i]);
        }
    }

    xajax_add_subscription(url,force,from_discovery,folders,username,password,auth_type);
    $('#add_subscription_url').val('');
    if($('#add_subscription_div').css('display') == 'block'){
        show_subscribe_div();
    }

    if($('#feed_advanced_add_dialog')[0]){
        inno_dialog_close('feed_advanced_add_dialog');
    }
    if($('#discovery_feed_' + $.md5(url))[0]){
        $('div[id=discovery_feed_center_icon_' + $.md5(url) + ']').each(function(){
            $(this).find('.icon-plus_small').removeClass('icon-plus_small').addClass('icon-checkmark_big');
            $(this).off('click');
            $(this).addClass('subscribed');
        });
    }
}


var global_autocomplete_ajax = null;
function init_autocomplete(element, callback){
    var min_length = 0;
    var origin = 'smart_search';
    var delay = 50;
    var width = null;
    if(element == '#new_folder_feeds_search'){
        min_length = 1;
        origin = 'create_folder_search';
    }else if(element == '#people_searcher_team'){
        delay = 100;
        width = 410;
        min_length = 0;
        origin = 'people_searcher_team';
    }else if(element == '#people_searcher' || element == '#people_searcher_articles'){
        origin = 'user_search';
        delay = 250;
        width = 450;
        min_length = 2;
    }else if(element == '#bundles_searcher'){
        delay = 250;
        width = 400;
        min_length = 2;
    }else if(element == '#welcome_search'){
        min_length = 1;
        delay = 1;
    }else if(element == '#organization_user_email'){
        min_length = 5;
        delay = 0;
        width = 492;
    }
    if(device_type == 'phone'){
        width = 250;
    }
    var settings = {
        source: function(request, response) {
            request.term = $.trim(request.term);
            request.origin = origin;
            request.filter_type = feed_params.filter_type;
            request.filter_id = feed_params.filter_id;
            if(element == '#bundles_searcher'){
                request.only_bundles = 1;
            }
            if(element == '#people_searcher_team'){
                request.people_searcher_team = 1;
                request.team_id = $('#team_id').val();
                request.team_organization_id = $('#team_organization_id').val();
                request.team_name = $('#team_name').val();
                request.added_members = [];
                $('.edit_team_member').each(function(){
                    request.added_members.push($(this).data('email'));
                });
            }

            if(element == '#new_folder_feeds_search'){
                request.added_feeds = $('#feed_id').val();
            }

            if(global_autocomplete_ajax){
                global_autocomplete_ajax.abort();
            }

            if(element == '#feed_searcher' && $(element).val() == ''){
                var data = build_search_history();
                response(data);
            }else if(element == "#welcome_search"){
                var data = build_welcome_search(request);
                if(data !== false){
                    response(data);
                    $('.inno_autocomplete_wrapper').eq(0).addClass('welcome_search_dropdown');
                }else{
                    $('.inno_autocomplete_wrapper').remove();
                }
            }else if(element == "#organization_user_email"){
                var email = request.term;
                if(!/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/i.test(email)){
                    $('.inno_autocomplete_wrapper').remove();
                }else{
                    var data = build_welcome_search(request);
                    var organization_name = $('#organization_name').val();
                    var data = [{ invite_email: email, label: '<i>' + sprintf(_js("Invite %s to join %s"),email,'<b>' + organization_name + '</b>') + '</i>' }];
                    response(data);

                    $('.inno_autocomplete_wrapper').eq(0).addClass('welcome_search_dropdown');
                }
            }else{
                if(element == '#feed_searcher'){
                    // if(!is_url(request.term)){
                    //     return;
                    // }

                    var data = build_search_quick_autocomplete(request);
                    response(data);
                }
                global_autocomplete_ajax = $.ajax({
                    url: "/autocomplete.php",
                    dataType: "json",
                    data: request,
                    success: function(data){
                        response(data);
                        global_autocomplete_ajax = null;
                    }
                });
            }
        },
        delay: delay,
        width: width,
        minLength: min_length,
        open: function(){

        },
        select: function(event, ui){
          if(typeof callback === 'function') {
            return callback.apply(this, [event, ui])
          }
            if((search_options == 2 && ui.item.type == 'user') || element == '#people_searcher' || element == '#people_searcher_articles'){
                show_dialog('profile_dialog', {user_id: ui.item.id});
            }else if(element == '#organization_user_email'){
                if(ui.item.invite_email){
                    add_new_member_to_organization(ui.item.invite_email);
                }
            }else if(element == '#people_searcher_team'){
                if(ui.item.invite_email){
                    if(ui.item.invite_email == 'alreadyamember'){
                        return;
                    }else{
                        add_new_member_to_team(ui.item.invite_email);
                    }
                }else{
                    add_member_to_team(ui.item,true);
                }
            }else if(element == '#new_folder_feeds_search'){
                if(ui.item.item_type == 'heading'){
                    return;
                }
                $('#feed_id')[0].value += ui.item.id + ',';
                var html = '<label>' + _js("Feeds in folder") + '"</label>';
                html += '<div id="new_folder_feed_' + ui.item.id + '">';
                html += '<div class="new_folder_feed_inner">' + ui.item.img + ' <span>' + ui.item.title + '</span></div>';
                html += '<div class="new_folder_feed_remove" title="'+_js("Remove")+'" onclick="new_folder_remove_subscription(' + ui.item.id + ')"><span class="icon16 icon-cross"></span></div>';
                html += '<div class="clearfix"></div></div>';

                $('#new_folder_feeds_list').append(html);
            }else{
                if(ui.item.type == 'feed'){
                    $('#feed_searcher').val(ui.item.value);
                    if(ui.item.id == -1){
                        add_subscription(ui.item.rss_url);
                        l('Search start', 'From sidebar', 'Autocomplete URL');
                    }else{
                        l('Search start', 'From sidebar', 'Autocomplete feed');
                        view_feed(encodeURIComponent(ui.item.value),true);
                    }
                }else if(ui.item.type == 'bundle'){
                    $('#feed_searcher').val(ui.item.value);
                    view_bundle(ui.item.id);
                }else if(ui.item.type == 'feed_url'){
                    l('Search start', 'From sidebar', 'Autocomplete URL');
                    open_searcher({tab: 'feeds', term: ui.item.value});
                }else if(ui.item.type == 'feed43'){
                    $('#feed_searcher').val(ui.item.value);
                    feed_43_init(ui.item.value);
                }else if(ui.item.type == 'web_page'){
                    $('#feed_searcher').val(ui.item.value);
                    add_clip_exec(ui.item.value);
                    l('Search start', 'From sidebar', 'Autocomplete web page');
                }else if(ui.item.type == 'subscriptions'){
                    $('#feed_searcher').val(ui.item.value);
                    set_search_filter_section('');
                }else if(ui.item.type == 'global'){
                    $('#feed_searcher').val(ui.item.value);
                    set_search_filter_section('public');
                }else if(ui.item.type == 'current'){
                    $('#feed_searcher').val(ui.item.value);
                    feed_params_cache.filter_type = ui.item.filter_type;
                    feed_params_cache.filter_id = ui.item.filter_id;
                    toggle_search_options(3,true);
                }else if(ui.item.type == 'users'){
                    $('#feed_searcher').val(ui.item.value);
                    toggle_search_options(2,true);
                }else if(ui.item.type == 'bundles'){
                    $('#feed_searcher').val(ui.item.value);
                    toggle_search_options(5,true);
                }else if(ui.item.type == 'clear_search_history'){
                    xconfirm(_js("Clear search history?"),'search_history=[];xajax_clear_search_history();');
                }else if(ui.item.type == 'search_history_item'){
                    $('#feed_searcher').val(ui.item.value);
                    search_options = ui.item.search_options;
                    if(ui.item.search_options == 3){
                        set_feed_param('filter_type',ui.item.filter_type);
                        set_feed_param('filter_id',ui.item.filter_id);
                        open_searcher({tab: 'subscriptions', term: ui.item.search_term, search_type: 'local'});
                    }else if(ui.item.search_options == 4){
                        open_searcher({tab: 'global', term: ui.item.search_term});
                    }else{
                        do_search();
                    }
                }else if(ui.item.type == 'twitter'){
                    toolbar_action('twitter');
                    $('#feed_searcher').val(ui.item.value);
                    toggle_search_options(6,true);
                }else if(ui.item.type == 'google_plus'){
                    toolbar_action('google_plus');
                    $('#feed_searcher').val(ui.item.value);
                    toggle_search_options(7,true);
                }else if(ui.item.type == 'google_news'){
                    toolbar_action('google_news');
                    $('#feed_searcher').val(ui.item.value);
                    toggle_search_options(8,true);
                }else if(ui.item.type == 'facebook_pages'){
                    toolbar_action('facebook_pages');
                    $('#feed_searcher').val(ui.item.value);
                    toggle_search_options(9,true);
                }else if(ui.item.type == 'connect_twitter'){
                    connect_service(twitter_network_id);
                }else if(ui.item.type == 'connect_facebook'){
                    connect_service(facebook_network_id);
                }else if(ui.item.type == 'connect_vk'){
                    connect_service(vk_network_id);
                    l('Autocomplete items','Connect VK');
                }else if(ui.item.type == 'page2rss'){
                    // connect_service(vk_network_id);
                    dialog("page2rss_dialog", { url : ui.item.value });
                    l('Autocomplete items','Page2rss');
                }else if(ui.item.type == 'page2rss_track'){
                    // connect_service(vk_network_id);
                    dialog("page2rss_dialog", { url : ui.item.value, track: true });
                    l('Autocomplete items','Page2rss');
                }else if(ui.item.type == 'welcome_feeds'){
                    open_searcher({tab: 'feeds', term: ui.item.value});
                }else if(ui.item.type == 'welcome_google_news'){
                    open_searcher({tab: 'google_news', term: ui.item.value});
                }else if(ui.item.type == 'welcome_facebook_pages'){
                    open_searcher({tab: 'facebook_pages', term: ui.item.value});
                }else if(ui.item.type == 'welcome_twitter'){
                    open_searcher({tab: 'twitter', term: ui.item.value});
                }else if(ui.item.type == 'welcome_reddit'){
                    open_searcher({tab: 'reddit', term: ui.item.value});
                }

            }
            close_search_overlay();
        }
    };
    inno_autocomplete_init(element,settings);
}

function dialog(dialog_type,params){
    var dialog_prefs = {};
    var dialog_success = 1;
    var hook_success = 0;
    var exit_on_not_found = false;

    dialog_prefs.resizable = false; // Whether to set auto overflow of the dialog content and limit the maximum height to the window
    dialog_prefs.modal = true;
    dialog_prefs.open_function = function(){ check_for_dialogs(dialog_type,'open'); };
    dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); };
    dialog_prefs.before_close_function = function(){};
    dialog_prefs.resize_function = function(){ };
    dialog_prefs.before_resize_function = function(){ };
    dialog_prefs.class_name = 'inno_dialog inno_shadow_big';
    dialog_prefs.guest_allow = false;
    dialog_prefs.css = {top: 30};
    dialog_prefs.buttons = null;
    dialog_prefs.ajax = false;
    dialog_prefs.scrollable = true;
    dialog_prefs.width = 640;
    dialog_prefs.height = null;
    dialog_prefs.title = null;
    dialog_prefs.vertical_centered = false;
    dialog_prefs.title_close_button = true;
    dialog_prefs.content = null;
    dialog_prefs.kiosk = false;
    dialog_prefs.draggable = false;
    dialog_prefs.click_outside_close = false;
    dialog_prefs.close_button = true;
    dialog_prefs.overlay_opacity = null; // Leave null for default 0.5
    if(dialog_type == 'xalert' || dialog_type == 'xinfo'){
        dialog_prefs.width = 300;
        dialog_prefs.draggable = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bOK = _js("OK");
        dialog_prefs.buttons[bOK] = function(){inno_dialog_close(dialog_type); if(params.callback != undefined){ eval(params.callback); }};

        dialog_prefs.open_function = function(){ check_for_dialogs(dialog_type,'open'); focus_dialog_button(dialog_type,0); };
        dialog_prefs.class_name += ' inno_dialog_alert';
        dialog_prefs.close_button = false;
    }else if(dialog_type == 'xconfirm'){
        dialog_prefs.close_button = false;
        dialog_prefs.width = (params.width) ? params.width : 300;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.draggable = true;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = _js("Yes");
        var bClose = _js("No");
        dialog_prefs.buttons[bSave] = function(){ if(params.yes_function != undefined){ typeof params.yes_function === "function" ? params.yes_function() : eval(params.yes_function); } inno_dialog_close(dialog_type);};
        dialog_prefs.buttons[bClose] = function(){ if(params.no_function != undefined){ typeof params.no_function === "function" ? params.no_function() : eval(params.no_function); } inno_dialog_close(dialog_type);};

        dialog_prefs.open_function = function(){ check_for_dialogs(dialog_type,'open'); focus_dialog_button(dialog_type,0); };
        dialog_prefs.class_name += ' inno_dialog_alert';
    }else if(dialog_type == 'preferences_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.kiosk = true;
        dialog_prefs.width = null;
        dialog_prefs.height = null;
        dialog_prefs.open_function = function(){ if(!params || !params.set_category){ phash(); } check_for_dialogs(dialog_type,'open'); init_preferences(); };
        dialog_prefs.resize_function = function(){ resize_preferences(); };
        dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); close_preferences(); };
        if(device_type == 'phone'){
            dialog_prefs.css = {top: '0', left: '0', right: '0', bottom: '0'};
        }else{
            dialog_prefs.width = 1040;
        }

        dialog_prefs.buttons = false;

        dialog_prefs.class_name = 'inno_dialog inno_shadow_big inno_shadow_preferences';

        if(params == null){
            var params = {};
        }

        params.subscriptions_list_filter = feed_params.subscriptions_list_filter;
        params.subscriptions_list_list_filter = feed_params.subscriptions_list_list_filter;
        params.subscriptions_list_folder_id = feed_params.subscriptions_list_folder_id;
        params.subscriptions_list_feed_type = feed_params.subscriptions_list_feed_type;
        params.subscriptions_list_limit = feed_params.subscriptions_list_limit;
        params.subscriptions_list_view_urls = feed_params.subscriptions_list_view_urls;
        params.subscriptions_list_order = feed_params.subscriptions_list_order;
        params.subscriptions_list_asc = feed_params.subscriptions_list_asc;

    }else if(dialog_type == 'resend_confirmation_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 460;

        dialog_prefs.buttons = [];
        if(params && params.is_yahoo){
            var bRsend = _js("Confirm");
            var bClose = _js("Close");
            dialog_prefs.buttons[bRsend] = function(){ resend_confirmation_email_yjp();};
            dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type)};
        }else{
            var bRsend = _js("Resend confirmation email");
            var bClose = _js("Close");
            dialog_prefs.buttons[bRsend] = function(){ resend_confirmation_email();};
            dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type)};
        }

    }else if(dialog_type == 'reset_password_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 340;

        dialog_prefs.buttons = [];
        var bRsend = _js("Send Email");
        var bClose = _js("Close");
        dialog_prefs.buttons[bRsend] = function(){ send_password_reset_email()};
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type)};

    }else if(dialog_type == 'feedback_dialog'){
        if(!params){
            params = {};
        }
        params.resolution = screen.width + 'x' + screen.height;
        params.screen_pixel_ratio = window.devicePixelRatio;
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 500;
        dialog_prefs.draggable = true;

        dialog_prefs.buttons = [];
        var bSfeedback= _js("Send");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSfeedback] = function(){ send_feedback();};
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type) };
    }else if(dialog_type == 'folder_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 300;

        dialog_prefs.buttons = [];
        var bSave= _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_folder();};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type) };

        dialog_prefs.vertical_centered = true;
    }else if(dialog_type == 'newsletter_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 430;
        dialog_prefs.css = {top: 60};

        dialog_prefs.buttons = [];
        var bSave= _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_newsletter(document.getElementById('newsletter_form'));};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type) };

    }else if(dialog_type == 'rule_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.kiosk = true;
        dialog_prefs.buttons = false;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 750;
        // if(!params || params.preview_only != true){
        //     dialog_prefs.buttons = [];
        //     var bSave = (params.rule_type == 2) ? _js("Save filter") : _js("Save rule");
        //     var bCancel = _js("Cancel");
        //     dialog_prefs.buttons[bSave] = function(){ save_rule($('#rule_dialog_wrapper form').get(0)); emailrule_templ = {};};
        //     dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type); emailrule_templ = {}; };
        // }

        dialog_prefs.css = {top: 20};
        //dialog_prefs.vertical_centered = true;
    }else if(dialog_type == 'digest_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 460;

        dialog_prefs.buttons = [];
        var bSave = _js("Next");
        // var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ digest_next_handler(params.id, params.context); };
        // dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type); };

        dialog_prefs.css = {top: 20};
    }else if(dialog_type == 'evernote_notebook_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 300;

        dialog_prefs.buttons = [];
        var bSave = _js("Save notebook");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_evernote_notebook();};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type) };

        dialog_prefs.vertical_centered = true;
    }else if(dialog_type == 'instapaper_folder_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 300;

        dialog_prefs.buttons = [];
        var bSave = _js("Save folder");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_instapaper_folder();};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type) };

        dialog_prefs.vertical_centered = true;
    }else if(dialog_type == 'dashboard_dialog'){
        dialog_prefs.width = 300;
        dialog_prefs.content = params.content;
        dialog_prefs.open_function = function(){ check_for_dialogs(dialog_type,'open'); $('#dashboard_name').focus().select(); };

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_dashboard(params);};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type) };

        dialog_prefs.vertical_centered = true;
    }else if(dialog_type == 'beta_thank_you_dialog'){
        dialog_prefs.width = 460;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = 'Switch to stable version';
        var bCancel = 'Stay in Beta';
        dialog_prefs.buttons[bSave] = function(){ go_to_stable(); };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type); createCookie('hidebetathankyounag',1,365) };

        dialog_prefs.vertical_centered = true;
    }else if(dialog_type == 'subscription_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 300;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_subscription();};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type)};

        dialog_prefs.vertical_centered = true;
    }else if(dialog_type == 'send_email_dialog'){
        dialog_prefs.draggable = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 640;
        dialog_prefs.modal = true;

        dialog_prefs.buttons = [];
        var bSend = _js("Send Email");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSend] = function(){ send_share_email();};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type) };
    }else if(dialog_type == 'feed_info_dialog' || dialog_type == 'folder_info_dialog' || dialog_type == 'account_info_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 535;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'changelog_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 900;
        dialog_prefs.height = -30;
        dialog_prefs.css = {top: '30px'};
        if(device_type == 'phone'){
            dialog_prefs.close_button = false;
        }

        dialog_prefs.vertical_centered = true;

        if(user_access[1]){
            dialog_prefs.buttons = [];
            var bPub = _js("Publish");
            var bClose = _js("Close");
            dialog_prefs.buttons[bPub] = function(){ show_dialog('new_changelog_dialog')};
            dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
        }

        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'new_changelog_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 450;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ xajax_post_changelog($('#new_changelog').val());inno_dialog_close(dialog_type); };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type);};
        dialog_prefs.title = 'Publish new changelog';
    }else if(dialog_type == 'about_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 700;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'popularity_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 750;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'profile_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.kiosk = true;
        dialog_prefs.css = {top: '60px'};
        dialog_prefs.guest_allow = true;
        dialog_prefs.buttons = false;
        dialog_prefs.width = 550;
        dialog_prefs.resize_function = function(){ resize_profile_dialog(); };
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'delete_account_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.kiosk = true;
        dialog_prefs.css = {top: '72px'};
        dialog_prefs.guest_allow = false;
        dialog_prefs.buttons = false;
        dialog_prefs.close_button = true;
        dialog_prefs.width = 550;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'change_profile_picture_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.css = {top: '80px'};
        dialog_prefs.width = 500;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.title = _js("Select a profile photo");

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_profile_picture() };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'profile_picture_dialog'){
        dialog_prefs.kiosk = true;
        dialog_prefs.css = {top: '50px'};
        dialog_prefs.buttons = false;
        dialog_prefs.resizable = false;
        dialog_prefs.guest_allow = true;
        dialog_prefs.close_button = false;
        dialog_prefs.width = 500;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.content = '<a title=\"'+_js("Close picture")+'\" href="javascript:void(0);" onclick="inno_dialog_close(\'profile_picture_dialog\')"><img style="display:block;width:500px;height:500px;" src="' + params.picture + '"></a>';
    }else if(dialog_type == 'share_buttons_reorder_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 550;
        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ save_share_buttons_order(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'google_reader_import_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 770;
    }else if(dialog_type == 'feed_log_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 750;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'rule_log_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 535;
    }else if(dialog_type == 'privacy_policy_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 750;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'tos_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 750;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'address_book_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 950;
    }else if(dialog_type == 'audio_player_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.draggable = true;
        dialog_prefs.modal = false;
        dialog_prefs.close_button = false;
        dialog_prefs.width = 450;
        dialog_prefs.css = {top: '40px', right: '0px'};
        dialog_prefs.before_close_function = function(){ embed_audio_player(false); };
        dialog_prefs.open_function = function(){ };
        dialog_prefs.close_function = function(){ };

        dialog_prefs.buttons = [];
        var bMinim = _js("Minimize");
        var bClose = _js("Close");
        dialog_prefs.buttons[bMinim] = function(){ inno_dialog_close(dialog_type);};
        dialog_prefs.buttons[bClose] = function(){
            $('#audio_player')[0].pause();
            currently_playing = null;
            inno_dialog_close(dialog_type);
        };
    }else if(dialog_type == 'deduplicator_hint_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.draggable = false;
        dialog_prefs.modal = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.close_button = true;
        dialog_prefs.width = 340;
        dialog_prefs.css = {top: 'auto', bottom: params.bottom, right: '30px'};
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'catalog_hint_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.draggable = false;
        dialog_prefs.modal = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.close_button = true;
        dialog_prefs.close_on_escape = false;
        dialog_prefs.width = 300;
        dialog_prefs.css = {top: 'auto', bottom: params.bottom, right: '30px'};
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); createCookie('investing_hint_viewed',1,30);};
    }else if(dialog_type == 'articles_bulk_hint_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.draggable = false;
        dialog_prefs.modal = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.close_button = true;
        dialog_prefs.close_on_escape = false;
        dialog_prefs.width = 300;
        dialog_prefs.css = {top: 'auto', bottom: params.bottom, right: '30px'};
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); createCookie('article_bulk_hint_viewed',1,30);};
    }else if(dialog_type == 'kickstart_hint_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.draggable = false;
        dialog_prefs.modal = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.close_button = true;
        dialog_prefs.close_on_escape = false;
        dialog_prefs.width = 340;
        dialog_prefs.css = {top: 'auto', bottom: params.bottom, right: '30px'};
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); createCookie('kickstart_hint_viewed',1,30);};
    }else if(dialog_type == 'start_trial_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.guest_allow = false;
        dialog_prefs.width = 500;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'upgrade_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.guest_allow = false;
        dialog_prefs.width = 900;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.close_on_escape = false;

        // dialog_prefs.buttons = [];

        // var bPP = _js("Upgrade");
        // dialog_prefs.buttons[bPP] = function(){};
        dialog_prefs.buttons = false;

        dialog_prefs.open_function = function(){ disable_dialog_button(dialog_type); };

//        var bPP = "PayPal";
//        var bMore = _js("More payment methods");
//        dialog_prefs.buttons[bPP] = function(){ upgrade_begin('paypal'); };
//        dialog_prefs.buttons[bMore] = function(){ upgrade_begin('other'); };
    }else if(dialog_type == 'user_profile_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 1000;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'keyboard_shortcuts_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 750;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.buttons = [];
        var bClose = _js("Close");
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'account_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 460;
        dialog_prefs.css = {top: '60px'};
        dialog_prefs.buttons = false;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'onboard_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 700;
        if(device_type == 'phone'){
            dialog_prefs.css = {top: '0'};
        }else{
            dialog_prefs.css = {top: '20px'};
        }
        dialog_prefs.buttons = false;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.close_button = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.resize_function = function(){ resize_onboard_dialog('big'); };
        dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); onboard_start_tour('#onboard_tour'); };
    }else if(dialog_type == 'onboard_dialog_mini'){
        dialog_prefs.ajax = true;
        // dialog_prefs.width = 600;
        dialog_prefs.width = 385;
        dialog_prefs.height = 414;
        if(device_type == 'phone'){
            dialog_prefs.css = {top: '0'};
        }else{
            dialog_prefs.css = {top: '20px'};
        }
        dialog_prefs.buttons = false;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.close_button = false;
        dialog_prefs.kiosk = true;
        // dialog_prefs.resize_function = function(){ resize_onboard_dialog('mini'); };
        dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); setTimeout(function(){dialog('onboard_dialog');},100); };
    }else if(dialog_type == 'article_dialog'){
        dialog_prefs.close_button = false;
        dialog_prefs.guest_allow = true;
        dialog_prefs.kiosk = false;
        if(device_type == 'phone'){
            dialog_prefs.css = {top: '0px', left: '0px', right: '0px'};
            dialog_prefs.modal = false;
            dialog_prefs.height = -40;

            if(ino) {
                dialog_prefs.height -= ino.getPlayerOffset();
            }
        }else{
            dialog_prefs.width = 835;
            dialog_prefs.click_outside_close = true;
            dialog_prefs.height = -10;
            dialog_prefs.css = {top: '10px'};
            dialog_prefs.overlay_opacity = 0.9;

            if(ads_permitted && ads_below_article_dialog == 1){
                dialog_prefs.height = -130;
            }
            if(ino) {
                dialog_prefs.height -= ino.getPlayerOffset();
            }
        }

        var article_full_contents_extra_class = '';
        if($('#article_' + params.id).data('type') == 'microblog'){
            article_full_contents_extra_class += ' article_full_contents_microblog';
        }
        dialog_prefs.class_name += ' inno_dialog_overflow';
        dialog_prefs.content = '<div id="article_full_contents_' + params.id + '" class="article_full_contents' + article_full_contents_extra_class + '"><div>';
        dialog_prefs.open_function = function(){ $('#article_dialog').attr('tabindex',0).focus(); };
        dialog_prefs.before_close_function = function(){
            // Topics count progress bar
            topics_progress_bar.remove_rebuild_bar($('#article_dialog_modal_overlay .nums span.topic_current_top').text());
        };
        dialog_prefs.close_function = function(){
            $('#list_menu_article').remove();
            delete_feed_param('opened_article');
            check_for_dialogs(dialog_type,'close');
            if(device_type == 'phone'){
                $('#mf_right_part').html('');
            }
            if(old_location_hash !== null){
                set_location_hash(old_location_hash);
                doc_title = old_location_hash_title;
                set_title(title_num);
                old_location_hash = null;
                old_location_hash_title = null;
            }
            current_article_num = 0;
            if(ads_permitted && $('#article_below_dialog')[0]){
                inno_dialog_close('article_below_dialog');
            }
            inno_dialog_close('article_text_preferences');
        };
        dialog_prefs.buttons = false;
        //dialog_prefs.title = '.';
    }else if(dialog_type == 'article_below_dialog'){
        dialog_prefs.close_button = false;
        dialog_prefs.guest_allow = true;
        dialog_prefs.kiosk = true;
        dialog_prefs.modal = false;
        dialog_prefs.width = 835;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.height = 110;
        dialog_prefs.css = {bottom: '10px', top: 'auto'};
        dialog_prefs.class_name += ' inno_dialog_overflow';
        dialog_prefs.buttons = false;
        dialog_prefs.close_on_escape = false;
        dialog_prefs.before_close_function = function(){
            purge_ads('below_article_ad');
        };
    }else if(dialog_type == 'add_subscription_assign_folders_dialog'){
        dialog_prefs.width = 285;
        dialog_prefs.maxHeight = 400;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ add_subscription_assign_folders_save(params.subscription_id);};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'comments_disclaimer_dialog'){
        dialog_prefs.width = 600;
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = [];
        var bOk = _js("OK");
        dialog_prefs.buttons[bOk] = function(){ inno_dialog_close(dialog_type); $(params.input_element).focus().select();};
    }else if(dialog_type == 'update_interval_notice_dialog'){
        dialog_prefs.width = 460;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = [];
        var bOk = _js("OK");
        dialog_prefs.buttons[bOk] = function(){ inno_dialog_close(dialog_type); $(params.input_element).focus().select();};
    }else if(dialog_type == 'feed_advanced_add_dialog'){
        dialog_prefs.width = 385;
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); };
        dialog_prefs.buttons = [];
        var bAf = _js("Add feed");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bAf] = function(){ add_subscription($('#advanced_add_url').val()); };
        dialog_prefs.buttons[bCancel] =  function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'article_link'){
        dialog_prefs.width = 385;
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
    }else if(dialog_type == 'link_dialog'){
        dialog_prefs.width = 385;
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = false;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'likes_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 494;
        dialog_prefs.click_outside_close = true;
    }else if(dialog_type == 'view_options_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.ajax = true;
        dialog_prefs.modal = false;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 400;
        dialog_prefs.click_outside_close = false;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_view_options(); };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'opml_import_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.width = 520;
        dialog_prefs.click_outside_close = false;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_opml_import(params.id); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'highlighter_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.width = 750;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.css = {top: '50px'};

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ save_highlighter(params.id); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'imported_feeds_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = false;
        dialog_prefs.css = {top: '50px'};
        dialog_prefs.draggable = true;
        dialog_prefs.title = params.title;
        dialog_prefs.width = 450;
        dialog_prefs.click_outside_close = false;
    }else if(dialog_type == 'subscribers_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = false;
        dialog_prefs.css = {top: '50px'};
        dialog_prefs.draggable = true;
        dialog_prefs.title = _js("New subscribers");
        dialog_prefs.width = 442;
        dialog_prefs.click_outside_close = false;
    }else if(dialog_type == 'search_range_dialog'){
        dialog_prefs.width = 260;
        dialog_prefs.content = params.content;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.close_button = false;
        dialog_prefs.close_function = function(){ if(prev_search_range != 6) $('#search_content_filters_search_range').val('' + prev_search_range); check_for_dialogs(dialog_type,'close'); };

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Cancel");

        dialog_prefs.buttons[bSave] = function(){ prev_search_range = 6; set_search_range_from_to(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'broadcast_dialog'){
        dialog_prefs.width = 450;
        dialog_prefs.content = params.content;
        dialog_prefs.vertical_centered = true;
        // dialog_prefs.css = {top: '100px'};
        dialog_prefs.close_button = false;
        dialog_prefs.title = params.title;

        dialog_prefs.buttons = [];
        var bCancel = _js("Cancel");
        var bBroad = _js("Broadcast article");
        dialog_prefs.buttons[bBroad] = function(){ broadcast_article_do(params.article_id,$('#broadcast_note').val(),params.post_id); };
        dialog_prefs.buttons[bCancel] =  function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'article_note_dialog'){
        dialog_prefs.width = 450;
        dialog_prefs.content = params.content;
        dialog_prefs.css = {top: '100px'};
        dialog_prefs.close_button = false;

        dialog_prefs.buttons = [];
        var bBroad = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bBroad] = function(){ save_note(params.id,params.article_id,params.scroll_to_top); };
        dialog_prefs.buttons[bCancel] =  function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'edit_broadcast_note_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.draggable = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.width = 400;
        dialog_prefs.click_outside_close = false;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ save_broadcast_note(params.id); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'edit_bundle_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.draggable = true;
        dialog_prefs.width = null;
        dialog_prefs.height = null;
        if(device_type == 'phone'){
            dialog_prefs.css = {top: '0', left: '0', right: '0', bottom: '0'};
        }else{
            dialog_prefs.width = 1010;
        }
        dialog_prefs.click_outside_close = false;
        //dialog_prefs.css = {top: 20, bottom: 20};
        //dialog_prefs.resize_function = function(){ resize_bundle_dialog(); };

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ save_bundle(params.id, $('#' + dialog_type + ' form').get(0)); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'edit_application_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 500;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.css = {top: 20};

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ save_application(params.id); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'youtube_video_dialog'){
        dialog_prefs.kiosk = true;
        dialog_prefs.buttons = false;
        dialog_prefs.close_button = false;
        dialog_prefs.modal = true;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.width = 800;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.guest_allow = true;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;
        dialog_prefs.before_resize_function = function(){ resize_youtube_dialog(); };
    }else if(dialog_type == 'extension_prompt_dialog'){
        dialog_prefs.kiosk = true;
        dialog_prefs.buttons = false;
        dialog_prefs.close_button = false;
        dialog_prefs.modal = true;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.width = 300;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.guest_allow = true;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'html_clip_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.modal = true;
        dialog_prefs.draggable = false;
        dialog_prefs.content = params.content;
        dialog_prefs.width = 550;
        dialog_prefs.css = {top: 60};
        dialog_prefs.click_outside_close = false;
    }else if(dialog_type == 'admin_edit_xml_dialog'){
        dialog_prefs.width = 500;
        dialog_prefs.draggable = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ xajax_admin_cmd('edit_xml_url', {feed_id: params.feed_id, xml_url: $('#admin_edit_feed_url').val()}); inno_dialog_close(dialog_type); do_loading(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};

        dialog_prefs.close_button = true;
        dialog_prefs.title = 'Edit XML URL';
    }else if(dialog_type == 'admin_edit_html_dialog'){
        dialog_prefs.width = 500;
        dialog_prefs.draggable = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ xajax_admin_cmd('edit_html_url', {feed_id: params.feed_id, html_url: $('#admin_edit_feed_html_url').val()}); inno_dialog_close(dialog_type); do_loading(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};

        dialog_prefs.close_button = true;
        dialog_prefs.title = 'Edit HTML URL';
    }else if(dialog_type == 'admin_edit_title_dialog'){
        dialog_prefs.width = 500;
        dialog_prefs.draggable = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ xajax_admin_cmd('edit_title', {feed_id: params.feed_id, html_url: $('#admin_edit_feed_title').val()}); inno_dialog_close(dialog_type); do_loading(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};

        dialog_prefs.close_button = true;
        dialog_prefs.title = 'Edit title';
    }else if(dialog_type == 'admin_calculate_commission'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 500;
        dialog_prefs.draggable = true;
        dialog_prefs.vertical_centered = true;

        dialog_prefs.buttons = [];
        var bClose = _js("Close");
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};

        dialog_prefs.close_button = true;
    }else if(dialog_type == 'admin_edit_feed_title_dialog'){
        dialog_prefs.width = 500;
        dialog_prefs.draggable = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ xajax_admin_cmd('edit_feed_title', {feed_id: params.feed_id, title: $('#admin_edit_feed_title').val()}); inno_dialog_close(dialog_type); do_loading(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};

        dialog_prefs.close_button = true;
        dialog_prefs.title = 'Edit feed title';
    }else if(dialog_type == 'admin_edit_feed_description_dialog'){
        dialog_prefs.width = 500;
        dialog_prefs.draggable = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ xajax_admin_cmd('edit_feed_description', {feed_id: params.feed_id, description: $('#admin_edit_feed_description').val()}); inno_dialog_close(dialog_type); do_loading(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};

        dialog_prefs.close_button = true;
        dialog_prefs.title = 'Edit feed description';
    }else if(dialog_type == 'stars_assign_tag_dialog'){
        dialog_prefs.width = 300;
        dialog_prefs.draggable = false;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;

        dialog_prefs.buttons = [];
        var bSave = _js("Create tag");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ starred_assign_new_tag(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};

        dialog_prefs.close_button = true;
    }else if(dialog_type == 'friend_finder_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 820;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.css = {top: 20};
        dialog_prefs.title = _js("Find your friends");
    }else if(dialog_type == 'admin_app_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = false;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 820;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.title = params.app_name;
        dialog_prefs.css = {top: 20};

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ xajax_admin_cmd('edit_app_limits', {app_id: params.app_id, limit_zone1: $('#admin_app_limit_zone_1').val(), limit_zone2: $('#admin_app_limit_zone_2').val(), redirect_uri: $('#admin_app_redirect_uri').val()}); inno_dialog_close(dialog_type); do_loading(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'youtube_migration_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = false;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 600;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.css = {top: 20};

        dialog_prefs.buttons = [];
        var bSave = _js("Start");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ start_youtube_migration(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'add_clip_dialog'){
        dialog_prefs.width = 385;
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function(){ check_for_dialogs(dialog_type,'close'); };

        dialog_prefs.buttons = [];
        var bSave = _js("Save web page");
        var bClose = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ add_clip_exec(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'adv_match_info_dialog'){
        dialog_prefs.width = 500;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'get_rss_feed_dialog'){
        dialog_prefs.width = 460;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;
        dialog_prefs.title = params.title;
    }else if(dialog_type == 'view_period_dialog'){
        dialog_prefs.width = 535;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = [];
        var bSave = _js("Filter");
        var bClose = _js("Cancel");
        dialog_prefs.buttons[bSave] = function(){ set_start_from_date(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'edit_team_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.width = 480;
        dialog_prefs.css = {top: 20};

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ save_team(params.team_id); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
        dialog_prefs.close_function = function () {
            check_for_dialogs(dialog_type, 'close');
            setTimeout(function(){
                inno_autocomplete_destroy();
            },10);
        };
    }else if(dialog_type == 'bottom_survey_dialog') {
        dialog_prefs.ajax = false;
        dialog_prefs.modal = false;
        dialog_prefs.draggable = false;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;
        dialog_prefs.width = params.dialog_width;
        dialog_prefs.css = {right: 50, bottom: 50, top: 'auto'};
        dialog_prefs.click_outside_close = false;
        dialog_prefs.class_name = 'inno_dialog inno_shadow_big inno_shadow_surveys';
        dialog_prefs.buttons = false;
        dialog_prefs.open_function = function () {
        };
        dialog_prefs.close_function = function () {
            check_for_dialogs(dialog_type, 'close');
            answer_survey(params.id, 0)
        };
    }else if(dialog_type == 'dashboard_layout_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 610;
    }else if(dialog_type == 'gadget_preview'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = params['width'];

        var bAdd = _js("Add gadget");
        var bClose = _js("Close");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bAdd] = function(){ inno_dialog_close(dialog_type);xajax_user_dashboard('add_gadget',params['gad_id'],params['target']); };
        dialog_prefs.buttons[bClose] = function(){ if(params.no_function != undefined){ eval(params.no_function); } inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'dashboard_gadgets'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 1040;
    }else if(dialog_type == 'discount_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 1100;
    }else if(dialog_type == 'tree_reorder_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 480;

        dialog_prefs.buttons = [];
        var bSave = _js("Save");
        var bClose = _js("Close");
        dialog_prefs.buttons[bSave] = function(){ save_main_tree_order(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'edit_emailrule_settings'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = true;
        dialog_prefs.width = 600;
        dialog_prefs.css = {top: 20};
        params.templ = emailrule_templ[params.guid]; //$('#rule_spliced_email_'+params.guid).data('templ');

        dialog_prefs.buttons = [];
        var bPreview = _js("Preview");
        var bSave = _js("Save");
        var bClose = _js("Cancel");
        dialog_prefs.buttons[bPreview] = function(){
            if(save_emailrule_settings(false)){
                inno_dialog_close("emailrule_constants");
                //var templ = $('#rule_spliced_email_'+params.guid).data('templ');
                dialog("emailrule_preview", emailrule_templ[params.guid]/*templ*/);
            }
        };
        dialog_prefs.buttons[bSave] = function(){
            inno_dialog_close("emailrule_constants");
            save_emailrule_settings();
        };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close("emailrule_constants"); inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'emailrule_constants'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = false;
        dialog_prefs.draggable = true;
        dialog_prefs.width = 250;
        dialog_prefs.height = 350;
        dialog_prefs.open_function = function(){var l = $('#edit_emailrule_settings_wrapper').offset().left - $(window).scrollLeft() + 600 + 30; $('#emailrule_constants_wrapper').css('left', l)};
        dialog_prefs.close_function = function () {caret_area = null;};
        dialog_prefs.buttons = [];
        var bCancel = _js("Close");
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'emailrule_preview'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = false;
        dialog_prefs.draggable = true;
        dialog_prefs.resizable = true;
        dialog_prefs.width = 670;
        dialog_prefs.css = {top: '30px'};
    }else if(dialog_type == 'invoice_html'){
        dialog_prefs.guest_allow = false;
        dialog_prefs.ajax = true;
        dialog_prefs.width = 950;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.buttons = [];
        var bSaveClose = "Save and Close";
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons[bSaveClose] = function(){save_invoice(true)};
        dialog_prefs.buttons[bSave] = function(){save_invoice(false);};
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == adb_id){
        dialog_prefs.close_button = false;
        dialog_prefs.close_on_escape = false;
        dialog_prefs.modal = true;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.width = 460;
        var bUpgrade = sprintf(_js("Purchase %s"),"Supporter plan");
        var bNotNow = _js("Not now (maybe next time)");
        dialog_prefs.buttons = false;
        // dialog_prefs.buttons[bUpgrade] = function(){ show_dialog('upgrade_dialog',{access: access_starter, forced_entry: 'adblock_popup'}) };
        // dialog_prefs.buttons[bNotNow] = function(){ inno_dialog_close(dialog_type); createCookie('aguineapigtrickedme',1,1) };
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'annotations_upgrade_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.width = 640;
        dialog_prefs.height = 348;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.close_button = false;
        dialog_prefs.content = params.content;

        var upgrade = _js("Upgrade");
        var thanks = _js("No Thanks");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[upgrade] = function(){ inno_dialog_close(dialog_type); view_upgrade({feature: 'annotations'}) };
        dialog_prefs.buttons[thanks] = function(){ inno_dialog_close(dialog_type); };

    }else if(dialog_type == 'supporter_bf_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.width = 420;
        dialog_prefs.height = 420;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = false
    }else if(dialog_type == 'dev_popup_dialog'){
        dialog_prefs.kiosk = true;
        dialog_prefs.buttons = false;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.modal = true;
        dialog_prefs.width = 570;
        dialog_prefs.height = 300;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.close_button = false;
        dialog_prefs.close_on_escape = false;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'subscriptions_overlimit'){
        dialog_prefs.kiosk = true;
        dialog_prefs.buttons = false;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.modal = true;
        dialog_prefs.width = 570;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.close_button = true;
        dialog_prefs.close_on_escape = false;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'twitter_all_people_dialog'){
        dialog_prefs.click_outside_close = true;
        dialog_prefs.modal = true;
        dialog_prefs.width = 640;
        dialog_prefs.css = {top: '120px'};
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[_js("Close")] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'limit_reached_dialog'){
        dialog_prefs.modal = true;
        dialog_prefs.width = 460;
        dialog_prefs.vertical_centered = true;
        var bUsage = _js("Check usage");
        var bUpgrade = _js("Upgrade");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bUpgrade] = function(){ inno_dialog_close(dialog_type); inno_dialog_close(dialog_type); view_upgrade({feature: params.feature}); };
        dialog_prefs.buttons[bUsage] = function(){ inno_dialog_close(dialog_type); dialog('preferences_dialog',{set_category:'preferences_billing',ajax:true}) };
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'max_subscriptions_import'){
        dialog_prefs.modal = true;
        dialog_prefs.width = 460;
        dialog_prefs.vertical_centered = true;
        var bContinue = _js("Continue");
        var bUpgrade = _js("Upgrade");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bUpgrade] = function(){ inno_dialog_close(dialog_type); inno_dialog_close(dialog_type); view_upgrade({feature: 'subscriptions'}); };
        dialog_prefs.buttons[bContinue] = function(){ inno_dialog_close(dialog_type); subscriptions_max_reached_import_execute(params.type) };
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'custom_plan_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 640;
        dialog_prefs.buttons = [];
        var bUpgrade = _js("Send request");
        var bClose = _js("Cancel");
        dialog_prefs.buttons[bUpgrade] = function(){ save_custom_plan(); };
        dialog_prefs.buttons[bClose] = function(){ inno_dialog_close(dialog_type);};
    }else if(dialog_type == 'vat_validator_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.modal = false;
        dialog_prefs.draggable = true;
        dialog_prefs.resizable = true;
        dialog_prefs.width = 400;
        dialog_prefs.css = {top: '30px'};
    }else if(dialog_type == 'business_info_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.guest_allow = false;
        dialog_prefs.width = 500;
        dialog_prefs.css = {top: '60px'};
        dialog_prefs.click_outside_close = false;
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bSave] = function(){ save_business_registration_form('business_info_dialog'); };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'special_offer_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.guest_allow = true;
        dialog_prefs.buttons = false;
        dialog_prefs.width = 445;
        dialog_prefs.height = 330;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'promo_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.guest_allow = true;
        dialog_prefs.buttons = false;
        dialog_prefs.width = 360;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function(){
            bind_hotkeys();
            createCookie('consents_promo_dialog',1,3);
        };
    }else if(dialog_type == 'verify_email'){
        dialog_prefs.ajax = false;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.buttons = false;
        dialog_prefs.width = 360;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'redesign_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.buttons = false;
        dialog_prefs.width = 750;
        dialog_prefs.height = 408;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function() {
            createCookie('optin_dismissed_dialog', 1, 30);
        };
    }else if(dialog_type == 'youtube_invite_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.width = 640;
        dialog_prefs.height = 320;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.close_button = false;
        dialog_prefs.content = params.content;

        var give = _js("Give it a try");
        var upgrade = _js("Upgrade");
        var thanks = _js("No Thanks");
        dialog_prefs.buttons = [];
        if(params.show_upgrade){
            dialog_prefs.buttons[upgrade] = function(){ inno_dialog_close(dialog_type); view_upgrade({feature: 'youtube_subscriptions_sync'}) };
        }else{
            dialog_prefs.buttons[give] = function(){ inno_dialog_close(dialog_type); dialog('preferences_dialog',{set_category:'preferences_integration', ajax:true, callback:'blink_youtube_sync_div'}); };
        }
        dialog_prefs.buttons[thanks] = function(){ inno_dialog_close(dialog_type); xajax_set_user_consent_async('youtube_sync'); };
    }else if(dialog_type == 'beta_invite_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.width = 460;
        // dialog_prefs.height = 252;
        dialog_prefs.click_outside_close = true;
        dialog_prefs.close_button = true;
        dialog_prefs.content = params.content;

        var yes = _js("Yes");
        var no = _js("No");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[yes] = function(){ go_to_beta(); };
        dialog_prefs.buttons[no] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'edit_payment_method_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 450;
        dialog_prefs.buttons = [];
        dialog_prefs.open_function = function(){ disable_dialog_button(dialog_type,0); };
        dialog_prefs.buttons[_js("Save")] = function(){ $('#upgrade_button_do').click(); };
        dialog_prefs.buttons[_js("Cancel")] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'page2rss_dialog'){
        dialog_prefs.ajax = true;
        // dialog_prefs.width = 900;
        // dialog_prefs.height = 650;
        dialog_prefs.css = {width: '90%', top: '30px'};
        dialog_prefs.buttons = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.close_function = function() {
            window.postMessage('stop', '*');
        };
        dialog_prefs.open_function = function() {
            $("#" + dialog_type).html('<div style="padding: 3rem; text-align: center;" class="inner-svg"></div>');
            $("#" + dialog_type + " .inner-svg").load('/images/page2rss/convert-feed-' + get_theme_name() + '.svg', function() {
                $(this).find('svg').attr('width', '200px');
            });
        };
        // dialog_prefs.buttons[_js("Save")] = function(){ $('#upgrade_button_do').click(); };
        // dialog_prefs.buttons[_js("Cancel")] = function(){ inno_dialog_close(dialog_type); };

    }else if(dialog_type == 'convert_mail2tag_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 450;
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'readwise_connected_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.width = 460;
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[_js("OK")] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'switch_account_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.width = 300;
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[_js("Sign out")] = function(){ document.location.href='/logout' };
        dialog_prefs.buttons[_js("Cancel")] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'whats_new_dialog'){
        dialog_prefs.close_button = false;
        dialog_prefs.guest_allow = true;
        dialog_prefs.kiosk = true;
        dialog_prefs.width = 800;
        dialog_prefs.height = 422;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.css = {top: '140px'};

        dialog_prefs.class_name += ' inno_dialog_overflow';
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function(){
            bind_hotkeys();
            set_user_visits(16);
            createCookie('goodnewseveryone',1,365);
            check_for_dialogs(dialog_type,'close');
            $(document).off('keydown.left.wn');
            $(document).off('keydown.right.wn');
        };
        dialog_prefs.open_function = function(){
            unbind_hotkeys();
            $(document).on('keydown.left.wn', function(e){
                move_whats_new_card('prev');
                e.preventDefault();
            });
            $(document).on('keydown.right.wn', function(e){
                move_whats_new_card('next');
                e.preventDefault();
            });
        };
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'free_trial_dialog'){
        dialog_prefs.guest_allow = true;
        dialog_prefs.kiosk = true;
        dialog_prefs.width = 500;
        dialog_prefs.vertical_centered = true;

        dialog_prefs.class_name += ' inno_dialog_overflow';
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'subscription_activated'){
        dialog_prefs.guest_allow = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.width = 360;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.close_on_escape = false;

        dialog_prefs.class_name += ' inno_dialog_overflow';
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'subscription_ended'){
        dialog_prefs.guest_allow = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.width = 360;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.close_on_escape = false;

        dialog_prefs.class_name += ' inno_dialog_overflow';
        dialog_prefs.content = params.content;
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'invite_friend_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 535;
        dialog_prefs.buttons = [];
        if(params && params.it){
            dialog_prefs.close_button = false;
            dialog_prefs.close_on_escape = false;
            dialog_prefs.click_outside_close = false;
            dialog_prefs.buttons[_js("Follow")] = function(){ finish_invited_friend(params.it); };
            dialog_prefs.buttons[_js("Reject feeds")] = function(){ skip_invited_friend(params.it); };
        }else{
            dialog_prefs.buttons[_js("Send invitation")] = function(){ start_invite_friend(); };
            dialog_prefs.buttons[_js("Cancel")] = function(){ inno_dialog_close(dialog_type); };
        }
    }else if(dialog_type == 'covid_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.kiosk = true;
        dialog_prefs.width = 432;
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'covid_apps_dialog'){
        dialog_prefs.kiosk = true;
        dialog_prefs.width = 432;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.height = 324;
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'require_upgrade'){
        dialog_prefs.ajax = false;
        dialog_prefs.kiosk = true;
        dialog_prefs.width = 432;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.height = 324;
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'ua_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.width = 640;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'edit_contacts_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 400;
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[_js("Close")] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'article_text_preferences') {
      var topbar = document.getElementById('article_footer_placeholder_middle_' + params.id);
      var css = {top: 0, left: 0}
      if (topbar) {
        var rect = topbar.getBoundingClientRect();
        css = {top: rect.top + 50, left: rect.right - 188}
      }
      if (opened_dialogs.article_text_preferences) {
        css.top = $("#article_text_preferences_wrapper").offset().top;
        css.left = $("#article_text_preferences_wrapper").offset().left;
      }

      dialog_prefs.ajax = false;
      dialog_prefs.modal = false;
      dialog_prefs.buttons = false;
      dialog_prefs.width = 188;
      dialog_prefs.draggable = true;
      dialog_prefs.kiosk = true;
      // dialog_prefs.content = params.content;

      dialog_prefs.open_function = function () {
        $(params.content).children().appendTo("#" + dialog_type);
        $("#" + dialog_type + '_wrapper').css(css)
        $("#" + dialog_type).removeClass('inno_dialog_content_scrollable');
        inno_dialog_resize();
      }
    } else if (dialog_type == 'article_social_connect') {
      dialog_prefs.kiosk = true;
      dialog_prefs.content = params.content;
      dialog_prefs.buttons = false;
        dialog_prefs.width = 380;
    }else if(dialog_type == 'addon_dialog'){
        dialog_prefs.width = 460;
        // dialog_prefs.vertical_centered = true;
        dialog_prefs.css = {top: '100px'};
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
        dialog_prefs.close_function = function(){
            for(var i in added_addon_features){
                delete added_addon_features[i];
                bind_hotkeys();
                check_for_dialogs(dialog_type,'close');
            }
        }
    }else if(dialog_type == 'invitation_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 356;
        dialog_prefs.css = {top: '100px'};
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'manage_organization_members_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 560;
        dialog_prefs.css = {top: '20px'};
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bSave] = function(){ save_organization(); };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'manage_organization_sso_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 560;
        dialog_prefs.css = {top: '20px'};
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bSave] = function(){ save_organization_sso(params.id); };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'organization_folder_members_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 400;
        dialog_prefs.css = {top: '80px'};
        var bSave = _js("Save");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bSave] = function(){ save_organization_folder_members(); };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'cancel_renew_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 500;
        dialog_prefs.kiosk = true;
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'beta_feedback_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.width = 535;
        dialog_prefs.height = 334;
        dialog_prefs.close_button = false;
        dialog_prefs.click_outside_close = false;
        dialog_prefs.close_on_escape = false;
        dialog_prefs.content = params.content;
        var bSave = "Submit feedback";
        var bCancel = "No, thanks";
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bSave] = function(){ beta_feedback_dialog_submit(true); };
        dialog_prefs.buttons[bCancel] = function(){ beta_feedback_dialog_submit(false); };
    }else if(dialog_type == 'legacy_plans_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.width = 450;
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'today_config_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 380;
        dialog_prefs.kiosk = true;
        dialog_prefs.buttons = false;
    }else if(dialog_type == 'create_active_search_dialog'){
        dialog_prefs.width = 535;
        dialog_prefs.vertical_centered = true;
        dialog_prefs.content = params.content;
        var bSave = _js("Create monitoring feed");
        var bCancel = _js("Cancel");
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[bSave] = function(){ create_active_search_execute(); };
        dialog_prefs.buttons[bCancel] = function(){ inno_dialog_close(dialog_type); };
    }else if(dialog_type == 'digest_save_dialog'){
        dialog_prefs.ajax = false;
        dialog_prefs.width = 420;
        dialog_prefs.buttons = false;
        dialog_prefs.content = params.content;
    }else if(dialog_type == 'search_query_builder_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 1010;
        dialog_prefs.buttons = [];
        if(params.id){
            dialog_prefs.buttons[_js('Save search')] = function () { edit_active_search(params.id, 'dialog', params.type); };
            dialog_prefs.buttons[_js('Cancel')] = function () { inno_dialog_close(dialog_type); };
        }else{
            dialog_prefs.buttons[_js('Show results')] = function () { init_query_builder_search(); };
        }
    }else if(dialog_type == 'digest_preview_dialog'){
        dialog_prefs.ajax = true;
        dialog_prefs.width = 860;
        dialog_prefs.buttons = [];
        dialog_prefs.buttons[_js('Close')] = function () { inno_dialog_close(dialog_type); };
    } else if(!params || !params.dialog_prefs) {
        return;
    }

    //dialog_prefs as parameter
    if (params && params.dialog_prefs){
      dialog_prefs = $.extend({}, dialog_prefs, params.dialog_prefs);
      if(params.dialog_prefs.buttons) {
        var keys = Object.keys(params.dialog_prefs.buttons)
        for (var i = 0; i < keys.length; ++i) {
          var cb = params.dialog_prefs.buttons[keys[i]];
          dialog_prefs.buttons[keys[i]] = eval('(' + cb + ')');
        }
      }
      delete params.dialog_prefs;
    }

    if(exit_on_not_found == true && dialog_success == 0){
        xalert(_js("This function is not implemented!"));
        return;
    }

    if(user_is_guest && dialog_prefs.guest_allow == false){
        return guest_alert();
    }

    if(hook_success == 0){
        inno_dialog_create(dialog_type,dialog_prefs,params);
    }
}

function ua_dialog(){
    var html = '<div style="text-align:center;line-height:1.7;font-size:16px;font-family:Merriweather,Georgia,serif;">';
    html += '<p style="padding-bottom:12px;"><img src="/images/Flag_of_Ukraine.svg" style="width:auto;height:96px;"></p>';
    html += '<h2>We support the people of Ukraine</h2>';
    html += '<p>We condemn the Russian invasion of Ukraine! This horrible act of aggression has absolutely no place in today\'s society!</p>';
    html += '<p><b>All Free users in Ukraine* will receive a complimentary <u>Inoreader Pro plan</u></b> at least until April 01, or as much as needed if the situation continues after that. This will allow you to follow unlimited number of feeds, social channels like Telegram and use advanced features like rules and push notifications, and an ad-free experience. We hope that this will help our friends in Ukraine to get better access to vital information. It\'s the least we can do.</p>';
    html += '<p>The Inoreader team</p>';
    html += '<p><img src="/apple-touch-icon.png" style="width:auto;height:64px;border-radius:50%;"></p>';
    html += '<p style="font-size:12px;text-align:left;">* We are using an IP address based geolocation from the last known IP address. Note if using VPN.</p>';
    html += '</div>';
    dialog('ua_dialog', {content: html});
}

function blink_youtube_sync_div(){
    setTimeout(function(){
        $('#preferences_dialog_scroll_overlay').scrollTo('100%', 1000, {axis : 'y', easing:'easeOutQuint', onAfter: function(){ $('#preferences_integration_all').find('.integration_row[data-service-name="YouTube"').effect('highlight',2000); } });
    },500);
}

function show_dialog(dialog_type,params){
    return dialog(dialog_type,params);
}

function share_article(id,network){
    var net = share_buttons[network];
    var media_id = share_buttons[network].id;

    if(net.shorten == 1){
        var url = '/sharer.php?service=' + net.id + '&id=' + encode_article_id(id);
        if(device_type == 'phone'){
            url += '&m=1';
        }
        open_share_window(url,net.width,net.height);
    }else{
        if(net.post == 0){
            var title = get_article_title(id);

            var content = $('#article_contents_inner_' + id).html();
            var link = encodeURIComponent(get_article_url(id));
            var source = application_name;

            var find = ["[URL]", "[TITLE]", "[TITLE_NOENC]", "[SOURCE]", "[CONTENT]", "[ID]"];
            var replace = [link,encodeURIComponent(title),title,source,encodeURIComponent(content),id];
            var url = net.url.replaceArray(find,replace);
            if(url.substring(0, 'javascript:'.length) === 'javascript:') {
              // console.log('new share', url, net, media_id);
              window.location = url
            } else {
              open_share_window(url, net.width, net.height);
            }
        }else{
            var parsed = parse_url(net.url);
            var query_array = {};
            parse_str(parsed.query,query_array);

            var address = parsed.scheme + '://' + parsed.host;
            if(parsed.port){
                address += ':' + parsed.port;
            }
            if(parsed.path){
                address += parsed.path;
            }

            open_share_window(address,net.width,net.height,1,query_array,id);
        }
    }
    xajax_share_hit($('#article_' + id).data('fid'),id,media_id);

    if(mixpanel_enabled){
        mixpanel.track('share', {'Article ID': id ,'Network': net.name});
    }
}

function init_preferences(){
    var content = '';
    content += '<div id="preferences_header"><div id="preferences_header_caption">' + _js('Preferences') + '</div></div>';
    content += '<div id="preferences_main_wrapper" style="height:606px;box-sizing:border-box;" tabindex="-1"><div class="loader"></div></div>';

    $('#preferences_dialog').html(content);

    return;
    var wrapper = create_dom_element('div', {
        id: 'preferences_dialog_scroll_wrapper'
    });
    wrapper.appendChild(document.getElementById('preferences_dialog_wrapper'));
    document.body.appendChild(wrapper);
}

function set_search_range(){
    if(!user_access[access_pro]){
        xalert(_js("This feature is only available to Pro users.")+'<p><a class="bluelink ajaxed" href="/upgrade/feature/search_custom_intervalg">'+_js("Upgrade now")+'</a>',1);
        $('#search_content_filters_search_range').val('4');
        return;
    }

    var disabled = '';

    var params = {};
    params.from = search_range_from;
    params.to = search_range_to;
    params.content  = '<div>';
    params.content += '<table>';
    params.content += '<tr>';
    params.content += '<td><b>'+_js("From:")+'</b></td>';
    params.content += '<td><input type="text" id="search_range_from_input" ' + disabled + '><input type="hidden" id="search_range_from_value"></td>';
    params.content += '</tr>';
    params.content += '<tr>';
    params.content += '<td><b>'+_js("To:")+'</b></td>';
    params.content += '<td><input type="text" id="search_range_to_input" ' + disabled + '><input type="hidden" id="search_range_to_value"></td>';
    params.content += '</tr>';
    params.content += '</table>';
    params.content += '</div>';

    dialog('search_range_dialog',params);

    var opts_start = {changeMonth: true, changeYear: true, duration: '', maxDate: new Date(), dateFormat: 'dd MM yy', altField: '#search_range_from_value', altFormat: '@', hideIfNoPrevNext: true, onClose: function(){ $('#search_range_to_input').datepicker('option', 'minDate', $(this).datepicker('getDate')) }};
    var opts_end = {changeMonth: true, changeYear: true, duration: '', minDate: new Date(search_range_from*1000), dateFormat: 'dd MM yy', maxDate: new Date(), altField: '#search_range_to_value', altFormat: '@', hideIfNoPrevNext: true, onClose: function(){ } };

    $('#search_range_from_input').datepicker(opts_start);
    $('#search_range_to_input').datepicker(opts_end);

    if(search_range_from == 0){
        $('#search_range_from_input').datepicker('setDate','now-30d');
    }else{
        $('#search_range_from_input').datepicker('setDate',new Date(search_range_from*1000));
    }
    if(search_range_to == 0){
        $('#search_range_to_input').datepicker('setDate','now');
    }else{
        $('#search_range_to_input').datepicker('setDate',new Date(search_range_to*1000));
    }
}


function check_ads_eligibility(){
    if(!$('#preference_display_ads').is(':checked') && user_access[access_premium] != 1){
        xalert('Ads are automatically removed for Supporter and Pro users!<br><br><a class="ajaxed bluelink" href="/upgrade/feature/noads">'+_js("Upgrade now")+'</a>');
        $('#preference_display_ads').prop('checked',true);
    }
}

function show_add_options(url,click_auth,auth_type){
    var html = '';
    var credentials_disabled = "";
    if(user_access[access_premium] != 1){
        credentials_disabled = "disabled"
    }
    if(!url){
        url = '';
    }
    html += '<table>';
    html += '   <tr>';
    html += '       <td>'+_js("Feed URL")+':</td>';
    html += '       <td><input type="text" id="advanced_add_url" style="width:200px;" onkeypress=\"if(catch_enter(event))adv_add_subscription();\" value="' + url + '"></td>';
    html += '   </tr>';
    html += '   <tr>';
    html += '       <td>'+_js("Authentication")+':</td>';
    html += '       <td><input type="checkbox" id="asoa" onchange="show_hide_add_userpwd(this.checked);"> <label for="asoa">'+_js("This feed requires authentication")+'</label></td>';
    html += '   </tr>';
    html += '   <tr class="advanced_add_credentials">';
    html += '       <td>'+_js("Username")+':</td>';
    html += '       <td><input type="text" id="add_feed_auth_username" style="width:200px;" ' + credentials_disabled + ' onkeypress=\"if(catch_enter(event))adv_add_subscription();\"></td>';
    html += '   </tr>';
    html += '   <tr class="advanced_add_credentials">';
    html += '       <td>'+_js("Password")+':</td>';
    html += '       <td><input type="password" id="add_feed_auth_password" style="width:200px;" ' + credentials_disabled + ' onkeypress=\"if(catch_enter(event))adv_add_subscription();\"><input type="hidden" id="add_feed_auth_auth_type" value="' + auth_type + '"></td>';
    html += '   </tr>';
    html += '   <tr class="advanced_add_credentials">';
    html += '       <td colspan=2 style="font-size:.9em;padding-top:5px;">'+_js("Basic and Digest HTTP Authentication methods are supported.")+'</td>';
    html += '   </tr>';

    if(user_access[access_premium] != 1){
        html += '   <tr class="advanced_add_credentials">';
        html += '       <td colspan=2><div class="info_state" style="margin-top:10px;text-align:center;">'+_js("This feature is only available to Pro users")+'<br><a class="underlink ajaxed" href="/upgrade/feature/auth_feeds">'+_js("Upgrade now")+'</a></div></td>';
        html += '   </tr>';
    }
    html += '</table>';

    var params = {};
    params.content = html;
    dialog('feed_advanced_add_dialog',params);

    if($('#feed_searcher').val() != ''){
        $('#advanced_add_url').val($('#feed_searcher').val());
    }

    $('#advanced_add_url').focus().select();

    if(click_auth){
        $('#asoa').prop('checked',true);
        show_hide_add_userpwd(true);
    }
}

function emailrule_preview_fix_images(){
    $('#emailrule_preview').find('img').each(function(){
        $(this).css({maxWidth: '520px', height: 'auto', display: 'block'});
    });
}

function get_section_menu(params){
    var menu = [];
    n = 0;
    if(params.filter_type == undefined){
        params.filter_type = '';
        params.filter_id = 0;
    }
    if(params.filter_id == undefined){
        params.filter_id = 0;
    }

    var shield_text = '';
    if(user_access[access_pro] != 1){
        shield_text = ' <span class="icon14 icon-shield icon-yellow" title="' + _js("This feature is only available to Pro users") + '"></span>';
    }

    if(device_type == 'phone'){
        menu[n++] = {type: 'link', icon: '', text: _js("Preferences"), click: "dialog('preferences_dialog');"};
        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'link', icon: '', text: _js("Contact support"), click: "dialog('feedback_dialog')"};
        menu[n++] = {type: 'link', icon: '', text: _js("Lite version"), click: "document.location.href='/m'"};
        // menu[n++] = {type: 'link', icon: '', text: _js("Changelog"), click: "dialog('changelog_dialog')"};
        if(user_access[access_starter] != 1){
            menu[n++] = {type: 'link', icon: '', text: '<b><span class="bluelink">'+_js("Upgrade")+'</span></b>', click: "view_upgrade();"};
        }
        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'link', icon: '', text: _js("Sign out"), click: "document.location.href='/logout'"};
        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'heading', text: _js("Section options")};
    }

    var is_start = (params.filter_type == start_page.filter_type && params.filter_id == start_page.filter_id) ? true : false;
    if(params.filter_type == 'old_search' || params.search_term || params.filter_pinned){
        menu[n++] = {type: 'heading', text: _js("Match type")};
        menu[n++] = {type: 'link', div_id: 'search_matches_check_0', icon: (!search_match || search_match == 0) ? 'icon-checkmark' : '', text: _js("Match all words"), click: "set_search_match(0)"};
        menu[n++] = {type: 'link', div_id: 'search_matches_check_1', icon: (search_match == 1) ? 'icon-checkmark' : '', text: _js("Match any word"), click: "set_search_match(1);"};
        menu[n++] = {type: 'link', div_id: 'search_matches_check_2', icon: (search_match == 2) ? 'icon-checkmark' : '', text: _js("Match full phrase"), click: "set_search_match(2);"};
        menu[n++] = {type: 'link', div_id: 'search_matches_check_3', icon: (search_match == 3) ? 'icon-checkmark' : '', text: _js("Advanced syntax"), click: "set_search_match(3);"};

        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'heading', text: _js("Search filters")};
        menu[n++] = {type: 'link', div_id: 'search_filters_check_1', icon: (!(search_filters & 1)) ? 'icon-checkmark' : '', text: _js("Match titles"), click: "set_search_filter(1);"};
        menu[n++] = {type: 'link', div_id: 'search_filters_check_2', icon: (!(search_filters & 2)) ? 'icon-checkmark' : '', text: _js("Match contents"), click: "set_search_filter(2);"};

        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'heading', text: _js("Results sort")};
        menu[n++] = {type: 'link', div_id: 'search_order_check_0', icon: (!search_order || search_order <= 0) ? 'icon-checkmark' : '', text: _js("Newest results first"), click: "set_search_order(0);"};
        menu[n++] = {type: 'link', div_id: 'search_order_check_1', icon: (search_order == 1) ? 'icon-checkmark' : '', text: _js("Oldest results first"), click: "set_search_order(1);"};
        menu[n++] = {type: 'link', div_id: 'search_order_check_2', icon: (search_order == 2) ? 'icon-checkmark' : '', text: _js("Best matches first"), click: "set_search_order(2);"};

        if(search_options == 4){
            menu[n++] = {type: 'line'};
            menu[n++] = {type: 'heading', text: _js("Site popularity")};
            menu[n++] = {type: 'link', div_id: 'search_feed_popularity_0', icon: (search_feed_popularity == 0) ? 'icon-checkmark' : '', text: _js("All sites"), click: "set_search_feed_popularity(0);"};
            menu[n++] = {type: 'link', div_id: 'search_feed_popularity_1', icon: (search_feed_popularity == 1) ? 'icon-checkmark' : '', text: _js("Popular sites"), click: "set_search_feed_popularity(1);"};
            menu[n++] = {type: 'link', div_id: 'search_feed_popularity_2', icon: (search_feed_popularity == 2) ? 'icon-checkmark' : '', text: _js("Most popular sites"), click: "set_search_feed_popularity(2);"};
        }

        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'heading', text: _js("Article age")};
        menu[n++] = {type: 'link', div_id: 'search_range_check_1', icon: (search_range == 1) ? 'icon-checkmark' : '', text: _js("Today"), click: "set_search_range(1);"};
        menu[n++] = {type: 'link', div_id: 'search_range_check_2', icon: (search_range == 2) ? 'icon-checkmark' : '', text: _js("This week"), click: "set_search_range(2);"};
        menu[n++] = {type: 'link', div_id: 'search_range_check_3', icon: (search_range == 3) ? 'icon-checkmark' : '', text: _js("This month"), click: "set_search_range(3);"};
        menu[n++] = {type: 'link', div_id: 'search_range_check_4', icon: (search_range == 4) ? 'icon-checkmark' : '', text: _js("This year"), click: "set_search_range(4);"};
        menu[n++] = {type: 'link', div_id: 'search_range_check_5', icon: (!search_range || search_range == 5) ? 'icon-checkmark' : '', text: _js("All time"), click: "set_search_range(5);"};
        menu[n++] = {type: 'link', div_id: 'search_range_check_6', icon: (search_range == 6) ? 'icon-checkmark' : '', text: _js("Custom interval"), click: "set_search_range(6);"};
    }else if(params.filter_type == 'subscription'){
        if(params.remote_user_id > 0){
            menu[n++] = {type: 'link', text: _js("View profile"), click: "show_dialog('profile_dialog',{user_id: " + params.remote_user_id + "});"};
            menu[n++] = {type: 'link', text: _js("Unfollow"), click: "user_subscribe_unsubscribe(" + params.remote_user_id + ",0);"};
            menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\');'};
        }else if(params.team_id){
            // menu[n++] = {type: 'link', text: _js("View team"), click: "view_tree_element('subscription'," + params.filter_id + ");"};
            if($('#linkdiv_1_' + params.filter_id).data('teama') == 1){
                menu[n++] = {type: 'link', text: _js("Edit channel"), click: "edit_team(" + params.team_id + ");"};
                menu[n++] = {type: 'link', text: _js("Delete channel"), click: "delete_team(" + params.team_id + ");"};
            }
            menu[n++] = {type: 'link', text: _js("Get RSS feed") + shield_text, click: "get_rss_feed('team'," + params.team_id + ",0);"};
            // menu[n++] = {type: 'link', text: _js("Get HTML clip"), click: "get_rss_feed('team'," + params.team_id + ",1);"};
            menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\');'};
        }else{
            var subscription_caption = 'feed';
            if($(params.heading)[0]){
                subscription_caption = $('<div>' + params.heading + '</div>').text().replace(/\'/,'\\\'');
            }

            menu[n++] = {type: 'link', text: _js("Feed properties"), click: "show_dialog('feed_info_dialog',{subscription_id: " + params.filter_id + "});"};

            if(!params.organization_id){
                menu[n++] = {type: 'link', text: _js("Rename feed"), click: "edit_subscription(" + params.filter_id + ",'feed_menu');"};
                menu[n++] = {type: 'link', text: _js("Unfollow"), click: "delete_subscription(" + params.filter_id + ");"};
            }

            if(params.feed_type == 'keyword'){
                menu[n++] = {type: 'link', text: _js('Edit search query'), click: "dialog('search_query_builder_dialog',{id: " + params.filter_id + ", type: 'subscription'});"};
            }

            menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_id:0, filter_type: " + ((params.filter_type == 'subscription') ? 2 : 1) + ", filter_id: " + params.filter_id + ", rule_type: 1});"};
            menu[n++] = {type: 'link', text: _js("Filter feed") + shield_text, click: "add_rule({filter_type: " + ((params.filter_type == 'subscription') ? 2 : 1) + ", filter_id: " + params.filter_id + ", context: 'context_menu'});"};
            menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\');'};

            if(!params.organization_id && params.feed_type != 'google_plus' && params.feed_type != 'vk' && params.feed_type != 'user_newsletter'){
                menu[n++] = {type: 'link', text: _js("Add to bundle")+' <span class="icon-arrow_right_small inno_toolbar_button_submenu_opener_icon"></span>', click: 'show_add_to_bundle(' + params.filter_id + ',this);l(\'Stream menu\',\'Add to bundle\');', dont_close_menu: true};

                menu[n++] = {type: 'link', text: _js("More like this")+' <span class="icon-arrow_right_small inno_toolbar_button_submenu_opener_icon"></span>', click: 'show_feed_suggestions(' + params.filter_id + ',this,\'subscription\');l(\'Stream menu\',\'More like this\');', dont_close_menu: true};
            }

            if(joined_organization_id){
                menu[n++] = {type: 'link', text: _js("Add to Team folder")+' <span class="icon-arrow_right_small inno_toolbar_button_submenu_opener_icon"></span>', click: 'show_add_to_team_folder(' + params.filter_id + ',this);l(\'Stream menu\',\'Add to team folder\');', dont_close_menu: true};
            }

            // if(params.articles_order != undefined){
            //     menu[n++] = {type: 'line'};
            //     // menu[n++] = {type: 'more'};
            //     menu[n++] = {type: 'heading', text: _js("Feed sort")};
            //     menu[n++] = {type: 'link', icon: (params.articles_order == -1) ? 'icon-checkmark' : '', text: _js("Default"), click: "set_articles_order_from_tree(-1,'subscription'," + params.filter_id + ");"};
            //     menu[n++] = {type: 'link', icon: (params.articles_order == 0) ? 'icon-checkmark' : '', text: _js("Newest first"), click: "set_articles_order_from_tree(0,'subscription'," + params.filter_id + ");"};
            //     menu[n++] = {type: 'link', icon: (params.articles_order == 1) ? 'icon-checkmark' : '', text: _js("Oldest first"), click: "set_articles_order_from_tree(1,'subscription'," + params.filter_id + ");"};
            //     if(sort_by_magic_enabled == 1){
            //         var shield_text = '';
            //         if(user_access[access_pro] != 1){
            //             shield_text = ' <span class="icon14 icon-shield icon-yellow" title="' + _js("This feature is only available to Pro users") + '"></span>';
            //         }

            //         menu[n++] = {type: 'link', icon: (params.articles_order == 2) ? 'icon-checkmark' : '', text: _js("Magic") + shield_text, click: "set_articles_order_from_tree(2,'subscription'," + params.filter_id + ");"};
            //     }
            //     menu[n++] = {type: 'line'};
            // }else{
            //     menu[n++] = {type: 'line'};
            //     // menu[n++] = {type: 'more'};
            // }

            if(!params.organization_id){
                menu[n++] = {type: 'line'};

                menu[n++] = {type: 'heading', text: _js("Folders")};

                var folders = get_folders_from_tree(false,true);

                if(Object.size(folders) > menu_filters_threshold){
                    menu[n++] = {type: 'filter', placeholder: _js("Filter folders..."), value: null };
                }

                menu[n++] = {type: 'link', text: _js("Assign to new folder"), click: "add_folder(" + params.filter_id + ",null,false,true);", class_name: 'inno_toolbar_button_menu_item do_not_filter'};

                for(var i in folders){
                    if(folders[i].organization_id){
                        continue;
                    }
                    var checked = false;
                    if(subscriptions_cnt['1_' + params.filter_id]){
                        for(var p in subscriptions_cnt['1_' + params.filter_id].parents){
                            var parent = subscriptions_cnt['1_' + params.filter_id].parents[p].replace('0_','');
                            if(parent == folders[i].id){
                                checked = true;
                                break;
                            }
                        }
                    }

                    menu[n++] = {type: 'link', div_id: 'sb_button_menu_assign_folder_' + params.filter_id + '_' + folders[i].id, icon: (checked == false) ? '' : 'icon-checkmark', text: htmlentities(folders[i].name), click: "assign_folder(" + params.filter_id + "," + folders[i].id + "," + ((checked == false) ? 1 : 0) + ");", dont_close_menu: true};
                }

                menu[n++] = {type: 'line'};
                menu[n++] = {type: 'link', text: _js("Manage feeds"), click: "dialog('preferences_dialog',{focus_tab:2});"};
            }
        }
    }else if(params.filter_type == 'feed'){
        menu[n++] = {type: 'link', text: _js("Follow"), click: "add_subscription('" + params.rss_url + "');"};
        menu[n++] = {type: 'link', text: _js("Feed properties"), click: "show_dialog('feed_info_dialog',{feed_id: " + params.filter_id + "});"};
        menu[n++] = {type: 'link', text: _js("More like this")+' <span class="icon-arrow_right_small inno_toolbar_button_submenu_opener_icon"></span>', click: 'show_feed_suggestions(' + params.filter_id + ',this,false);l(\'Stream menu\',\'More like this\');', dont_close_menu: true};
    }else if(params.filter_type == 'starred'){
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\');'};
        menu[n++] = {div_id: 'starred_counter_checkmark', type: 'link', icon:  (starred_counter == 1) ? 'icon-checkmark' : '', text: _js("Counter in tree pane"), click: 'toggle_starred_counter();l(\'Stream menu\',\'Counter in tree pane\');'};

        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'link', text: _js("Get RSS feed") + shield_text, click: "get_rss_feed('special',favorites_tag_id,0);"};
        menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_id:0, filter_type: 5, filter_id: 0, rule_type: 1})"};
        menu[n++] = {type: 'link', text: _js("Create email digest") + shield_text, click: "edit_digest(0,'',{filter_type: 5, filter_id: 0})"};


        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'heading', text: _js("Apply tag to all stars")};

        var tags = get_folders_from_tree(true);

        menu[n++] = {type: 'link', text: _js("New tag"), click: "starred_assign_tag();"};

        if(Object.size(tags) > menu_filters_threshold){
            menu[n++] = {type: 'filter', placeholder: _js("Filter tags..."), value: null };
        }

        for(var i in tags){
            menu[n++] = {type: 'link', text: fix_tag_name(tags[i].name), click: "starred_assign_tag(" + tags[i].id + ");"};
        }

        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'link', text: _js("Clear all starred articles"), click: "unstar_all_articles();"};

    }else if(params.filter_type == 'today'){
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\');'};
    }else if(params.filter_type == 'bundle'){
        menu[n++] = {type: 'link', text: _js("Follow"), click: "bundle_subscribe('" + params.filter_id + "','preview');"};
    }else if(params.filter_type == 'folder'){
        var is_active_search = false;
        var digest_type = 3;
        if(params.is_tag === false){
            var rename_txt = _js("Rename folder");
            var delete_txt = _js("Delete folder");
            var info_txt = _js("Folder properties");
        }else if(params.is_tag === true){
            var rename_txt = _js("Rename tag");
            var delete_txt = _js("Delete tag");
            var info_txt = _js("Tag properties");
            digest_type = 1;
        }else{
            is_active_search = true;
            var rename_txt = _js("Rename search");
            var delete_txt = _js("Delete search");
            var info_txt = _js("Keyword properties");
            digest_type = 4;
        }
        menu[n++] = {type: 'link', text: info_txt, click: "show_dialog('folder_info_dialog',{folder_id: " + params.filter_id + "});"};
        
        if(params.organization_id){
            if(params.master_folder_id && !params.is_tag){
                menu[n++] = {type: 'link', text: _js("Manage team members") + shield_text, click: "dialog('organization_folder_members_dialog', {user_folder_id: " + params.filter_id + ", organization_id: " + params.organization_id + ", context: 'sidebar'})"};
                menu[n++] = {type: 'link', text: _js("Unfollow Team folder") + shield_text, click: "unfollow_team_folder_prompt(" + params.master_folder_id + ", " + params.organization_id + ", 'sidebar');"};
            }
            menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_id:0, filter_type: 1, filter_id: " + params.filter_id + ", rule_type: 1});"};
        }else{
            if(is_active_search === true){
                menu[n++] = {type: 'link', text: _js('Edit search query'), click: "dialog('search_query_builder_dialog',{id: " + params.filter_id + "});"};
            }else{
                menu[n++] = {type: 'link', text: rename_txt, click: "edit_folder(" + params.filter_id + ",'feed_menu');"};
            }
            menu[n++] = {type: 'link', text: delete_txt, click: "delete_folder(" + params.filter_id + ");"};

            if(params.is_tag === false){
                if(joined_teams){
                    menu[n++] = {type: 'link', text: _js('Create Team folder'), click: "create_team_folder_from_personal_folder(" + params.filter_id + ");"};
                }
                menu[n++] = {type: 'link', text: _js("Unfollow all"), click: "delete_subscription(" + params.filter_id + ",'folder');"};
                menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_id:0, filter_type: 1, filter_id: " + params.filter_id + ", rule_type: 1});"};
            }
        }

        if(is_active_search === true){
            menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_id:0, filter_type: 3, filter_id: " + params.filter_id + ", rule_type: 1});"};
            menu[n++] = {type: 'link', text: _js("Filter keyword") + shield_text, click: "add_rule({filter_type: 3, filter_id: " + params.filter_id + ", rule_name: 'Filtered Folder', context: 'context_menu'});"};
        }else if(params.is_tag === false){
            menu[n++] = {type: 'link', text: _js("Filter folder") + shield_text, click: "add_rule({filter_type: 1, filter_id: " + params.filter_id + ", rule_name: 'Filtered Folder', context: 'context_menu'});"};
        }

        menu[n++] = {type: 'link', text: _js("Create email digest") + shield_text, click: "edit_digest(0,'',{filter_type: " + digest_type + ", filter_id: " + params.filter_id + "})"};

        menu[n++] = {type: 'link', text: _js("Get RSS feed") + shield_text, click: "get_rss_feed('" + params.filter_type + "','" + params.filter_id + "',0);"};
        // menu[n++] = {type: 'link', text: _js("Get HTML clip"), click: "get_rss_feed('" + params.filter_type + "','" + params.filter_id + "',1);"};

        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\');'};

    }else if(!params.filter_type){
        menu[n++] = {type: 'link', text: _js("Feed properties"), click: "show_dialog('account_info_dialog');"};
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\');'};
        menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_id:0, rule_type: 1});"};
        menu[n++] = {type: 'link', text: _js("Filter feed") + shield_text, click: "add_rule({filter_type: 0, filter_id: 0, rule_name: 'Filtered " + htmlentities(subscription_caption) + "', context: 'context_menu'});"};

        menu[n++] = {type: 'link', text: _js("Get RSS feed") + shield_text, click: "get_rss_feed('special',all_articles_tag_id,0);"};
        // menu[n++] = {type: 'link', text: _js("Get HTML clip"), click: "get_rss_feed('special',all_articles_tag_id,1);"};

    }else if(params.filter_type == 'trending'){
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\');'};

    }else if(params.filter_type == 'evernote' || params.filter_type == 'pocket' || params.filter_type == 'onenote' || params.filter_type == 'instapaper'){
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\')'};
        menu[n++] = {type: 'link', text: _js("Manage integrations"), click: "dialog('preferences_dialog',{focus_tab:5})"};
    }else if(params.filter_type == 'channel'){
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\')'};
        menu[n++] = {type: 'link', text: _js("Manage connections"), click: "dialog('preferences_dialog',{focus_tab:7})"};
    }else if(params.filter_type == 'teams'){
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\')'};
        // menu[n++] = {type: 'link', text: _js("Create channel"), click: "edit_team(0);"};
    }else if(params.filter_type == 'liked'){
        menu[n++] = {type: 'link', text: _js("Get RSS feed") + shield_text, click: "get_rss_feed('special',liked_tag_id,0)"};
        menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_id:0, filter_type: 6, filter_id: 0, rule_type: 1})"};
        menu[n++] = {type: 'link', text: _js("Create email digest") + shield_text, click: "edit_digest(0,'',{filter_type: 6, filter_id: 0})"};
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\')'};
    }else if(params.filter_type == 'tags'){
        menu[n++] = {type: 'link', text: _js("Add tag"), click: "add_folder(0,'',true);"};
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\')'};
    }else if(params.filter_type == 'web_pages'){
        menu[n++] = {type: 'link', text: _js("Add web page"), click: "add_clip();"};
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\')'};

        menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_id:0, filter_type: 8, filter_id: 0, rule_type: 1})"};
        menu[n++] = {type: 'link', text: _js("Create email digest") + shield_text, click: "edit_digest(0,'',{filter_type: 8, filter_id: 0})"};

        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'link', text: _js("Get RSS feed") + shield_text, click: "get_rss_feed('special',web_pages_tag_id,0)"};
        // menu[n++] = {type: 'link', text: _js("Get HTML clip"), click: "get_rss_feed('special',web_pages_tag_id,1)"};
    }else if(params.filter_type == 'recent'){
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\')'};
        menu[n++] = {type: 'line'};
        menu[n++] = {type: 'link', text: _js("Clear all"), click: "clear_recently_read();"};
    }else if(params.filter_type == 'rules'){
        menu[n++] = {type: 'link', text: _js("Create rule") + shield_text, click: "add_rule({rule_type: 1})"};
    }else if(params.filter_type == 'filters'){
        menu[n++] = {type: 'link', text: _js("Create filter") + shield_text, click: "add_rule()"};
    }else if(params.filter_type == 'highlighters'){
        menu[n++] = {type: 'link', text: _js("Create highlighter") + shield_text, click: "edit_highlighter(0)"};
    }else{
        menu[n++] = {type: 'link', icon:  (is_start) ? 'icon-checkmark' : '', text: _js("Set as start page"), click: 'set_start_page(\'' + params.filter_type + '\',' + params.filter_id + ');l(\'Stream menu\',\'Set as start page\')'};
    }

    return menu;
}

function save_bundle(id, form){
  var formData = new FormData(form);

  // var list = [];
  // // we prefer ordered list
  // $('#bundle_feeds_inside_table>tr').each(function(){
  //     list.push($(this).attr('id'));
  // });

  // var params = {};
  // params.name = $('#bundle_name').val();
  // params.description = $('#bundle_description').val();
  // params.organization_id = $('#bundle_organization_id').val();````
  // params.adult_content = ($('#bundle_adult_content').is(':checked')) ? 1 : 0;
  // params.subscribers_notifications = ($('#bundle_subscribers_notifications').is(':checked')) ? 1 : 0;
  // if(user_access[1]){
  //     params.staff_pick = ($('#bundle_staff_pick').is(':checked')) ? 1 : 0;
  // }
  // params.feed_list = list;
  // params.image = $('#bundle_uploaded_image').val();
  // params.cover_image = $('#bundle_cover_uploaded_image').val();
  if(formData.get('name') == ''){
      xalert(_js("Please give this bundle a name!"),1,'$("#bundle_name").focus().select();');
      return;
  }
  if(formData.get('feed_list').length == 0){
      xalert(_js("Please add at least one feed to this bundle!"));
      return;
  }

  disable_dialog_button('edit_bundle_dialog',0);
  do_loading();
  // xajax_save_bundle(id,params);
  xajax_multipart('/api/bundles/', formData);
  return false;
}

function view_html_clip(url,id,public,context){
    last_clip_url = url;
    var to_reset_url = url;
    var content = '';
    url += '?cs=m';
    var iframe = '<iframe width="' + parseInt(parseInt(clip_defaults.w) + 20) + '" height="800" src="' + url + '" frameborder="0" tabindex="-1"></iframe>';

    var disabled = '';
    // if(user_access[access_premium] != 1){
    //     disabled = ' disabled';
    // }
    var ta_sel = {};
    var cs_sel = {};
    var sb_sel = {};
    var af_sel = {} ;

    var checkbox = '';
    var checked = (public) ? 'checked' : '';
    if(id){
        checkbox = _js("Enabled") + ': <div class="apple-switch-wrapper"><input type="checkbox" class="apple-switch" value="1" ' + checked + ' onchange="change_folder_visibility(' + id + ', this.checked, \'' + context + '\',true)"></div>';
    }

    content += '<div style="width:100%">';
    content += '<div class="flex"><div class="dialog_input_caption" style=" word-break: break-all; margin-right: 20px;">'+_js("Link:")+'<br><a id="clip_url" target="_blank" class="bluelink underlink" href="' + url + '">' + url + '</a></div>' +
      '<div class="dialog_input_caption">' + checkbox + '</div></div>';
    content += '<div class="dialog_input_caption" style="margin-top: 8px;">'+_js("Use this code in your website or blog:")+'</div>';
    content += '<div class="dialog_input"><textarea readonly onclick="this.focus();this.select()" class="graylink" style="resize:none;width:100%;height:64px; padding: 8px; box-sizing: border-box;" id="clip_iframe_template">' + iframe + '</textarea></div>';
    content += '<div style="font-size:13px;font-weight:bold;padding:10px 0 10px 0;">'+_js("Customize:")+'</div>';


    // if(user_access[access_premium] != 1){
    //     content += '<tr><td colspan="4"><div class="info_state" style="margin-bottom:10px;">'+sprintf(_js("%s to be able to fully customize your HTML Clip"),"<a class=\"underlink ajaxed\" href=\"/upgrade/feature/custom_clips\" onclick=\"l(\'Upgrade links\',\'Link (HTML Clips)\');\">"+_js("Upgrade now")+"</a>")+'<br></div></td></tr>';
    // }
    content += '<div class="dialog_input_caption">'+_js("Page title:")+'</div>' +
              '<div class="dialog_input">' +
                '<input' + disabled + ' onchange="rebuild_clip();" onkeyup="rebuild_clip();" style="width:100%; box-sizing: border-box;" type="text" name="clip_inputs" id="clip_input_t" placeholder="'+_js("Leave blank to use the default title")+'">' +
              '</div>';
    content += '<div class="dialog_input_caption">'+_js("Logo URL:")+'</div>' +
              '<div class="dialog_input">' +
                '<input' + disabled + ' onchange="rebuild_clip();" onkeyup="rebuild_clip();" style="width:100%; box-sizing: border-box;" type="text" name="clip_inputs" id="clip_input_l" placeholder="'+_js("Leave blank to use the default logo")+'">' +
              '</div>';
    content += '<div class="flex" style="justify-content: space-between;align-items:flex-start;"><div style="width: 49%;">' +'<div class="dialog_input_caption">'+_js("Logo width:")+'</div>' +
                  '<div class="dialog_input flex">' +
                  '<input' + disabled + ' onchange="rebuild_clip();" onkeyup="rebuild_clip();" style="width:100%; margin-right: 8px;" type="number" name="clip_inputs" id="clip_input_lw" pattern="\\d*" min="0" step="1" placeholder="Auto"> px' +
                  '</div>' +
                  '<div class="dialog_input_caption">'+_js("Choose layout:")+'</div>' +
                  '<div class="dialog_input">' +
                    '<select onchange="rebuild_clip();" style="width:100%;" name="clip_inputs" id="clip_input_cs" >' +
                        '<option ' + cs_sel.m + ' value="m">'+_js("Magazine view")+'</option>' +
                        '<option ' + cs_sel.e + ' value="e">'+_js("Expanded view")+'</option>' +
                    '</select>' +
                  '</div>'+
                  '<div class="dialog_input_caption">'+_js("Text align:")+'</div>' +
                  '<div class="dialog_input">' +
                  '<select' + disabled + ' onchange="rebuild_clip();" style="width:100%;" name="clip_inputs" id="clip_input_ta">' +
                  '<option ' + ta_sel.l + ' value="l">'+_js("Left")+'</option>' +
                  '<option ' + ta_sel.r + ' value="r">'+_js("Right")+'</option>' +
                  '<option ' + ta_sel.c + ' value="c">'+_js("Center")+'</option>' +
                  '<option ' + ta_sel.j + ' value="j">'+_js("Justify")+'</option>' +
                  '</select>' +
                  '</div>' +
                  '<div class="dialog_input_caption">'+_js("Text color:")+'</div>' +
                  '<div class="dialog_input flex">' +
                    '<input' + disabled + ' onchange="rebuild_clip();" onkeyup="rebuild_clip();" style="width:100%; margin-right: 8px;" type="text" name="clip_inputs" id="clip_input_c" value=' + clip_defaults.c + '> ' +
                    '<div class="clip_val_td_wrapper">' +
                        '<input type="text" class="clip_color_check" id="clip_color_check_c" disabled>' +
                        '<div onclick="show_picker(this);" class="clip_val_td_clicker"></div>' +
                    '</div>' +
                  '</div>' +
                  '<div class="dialog_input_caption">'+_js("Background:")+'</div>' +
                  '<div class="dialog_input flex">' +
                    '<input' + disabled + ' onchange="rebuild_clip();" onkeyup="rebuild_clip();" style="width:100%; margin-right: 8px;" type="text" name="clip_inputs" id="clip_input_bc" value=' + clip_defaults.bc + '> ' +
                    '<div class="clip_val_td_wrapper">' +
                        '<input type="text" class="clip_color_check" id="clip_color_check_bc" disabled>' +
                        '<div onclick="show_picker(this);" class="clip_val_td_clicker"></div>' +
                    '</div>' +
                  '</div>' +
                '</div>';
    content += '<div style="width: 49%; margin-left: 10%;">' +
                  '<div class="dialog_input_caption">'+_js("Logo height:")+'</div>' +
                  '<div class="dialog_input flex">' +
                  '<input' + disabled + ' onchange="rebuild_clip();" onkeyup="rebuild_clip();" style="width:100%; margin-right: 8px;" type="number" name="clip_inputs" id="clip_input_lh" pattern="\\d*" min="0" step="1"  placeholder="Auto"> px' +
                  '</div>' +
                  // '<div class="dialog_input_caption">'+_js("Article Font:")+'</div>'+
                    // '<div class="dialog_input">' +
                  // '<select onchange="rebuild_clip();" style="width:100%;" name="clip_inputs" id="clip_input_af">' +
                  // '<option ' + af_sel.m + ' value="m">Merriweather</option>' +
                  // '<option ' + af_sel.r + ' value="r">Roboto</option>' +
                  // '</select>' +
                  // '</div>' +
                  '<div class="dialog_input_caption">'+_js("Items per page:")+'</div>' +
                  '<div class="dialog_input">' +
                  '<input onchange="rebuild_clip();" onkeyup="rebuild_clip();" style="width:100%; box-sizing: border-box;" type="number" name="clip_inputs" id="clip_input_n" pattern="\\d*" min="1" step="1" required value=' + clip_defaults.n + '>' +
                  '</div>' +
                  '<div class="dialog_input_caption">'+_js("Link color:")+'</div>' +
                  '<div class="dialog_input flex">' +
                    '<input' + disabled + ' onchange="rebuild_clip();" style="width:100%; margin-right: 8px;" type="text" name="clip_inputs" id="clip_input_lc" value=' + clip_defaults.lc + '> ' +
                    '<div class="clip_val_td_wrapper">' +
                        '<input type="text" class="clip_color_check" id="clip_color_check_lc" disabled>' +
                        '<div onclick="show_picker(this);" class="clip_val_td_clicker"></div>' +
                    '</div>' +
                  '</div>' +
                  '<div class="dialog_input_caption">'+_js("Divider color:")+'</div>' +
                  '<div class="dialog_input flex">' +
                    '<input' + disabled + ' onchange="rebuild_clip();" onkeyup="rebuild_clip();" style="width:100%; margin-right: 8px;" type="text" name="clip_inputs" id="clip_input_dc" value=' + clip_defaults.dc + '> ' +
                    '<div class="clip_val_td_wrapper">' +
                        '<input type="text" class="clip_color_check" id="clip_color_check_dc" disabled>' +
                        '<div onclick="show_picker(this);" class="clip_val_td_clicker"></div>' +
                    '</div>' +
                  '</div>' +
                  '<div class="dialog_input_caption">'+_js("Share buttons:")+'</div>' +
                  '<div class="dialog_input">' +
                  '<select' + disabled + ' onchange="rebuild_clip();" style="width:100%;" name="clip_inputs" id="clip_input_sb">' +
                  '<option ' + sb_sel.n + ' value="n">'+_js("No")+'</option>' +
                  '<option ' + sb_sel.y + ' value="y">'+_js("Yes")+'</option>' +
                  '</select>' +
                  '</div>' +
              '</div></div>';
    content += '<div>' +
                  '<div style="padding-top:20px;" colspan="4" class="clip_link_td">' +
                    '<a id="clip_url" class="bluelink underlink" href="javascript:void(0);" onclick="reset_html_clip(\'' + to_reset_url + '\');">'+_js("Reset customizations")+'</a>' +
                  '</div>' +
               '</div>';
    content += '</div>';

    dialog('html_clip_dialog',{content: content, url: url});
    check_clip_controls();
}

function show_picker(el){
    if(user_access[access_premium] != 1){
        return;
    }
    if(close_picker(el)){
        return;
    }
    picker_prev_el = el;

    var init_color = $(el).parent().parent().children().eq(0).val();

    if(init_color.charAt(0) != '#'){
        var color = colorFromProbe(init_color);
        init_color = color;
    }

    var picker = document.createElement('div');
    picker.id = 'cpicker_wrapper';
    picker.className = 'cp-normal';
    picker.innerHTML = '<div id="cpicker_outer"><div id="cpicker"></div><div id="cpicker_indicator"></div></div><div id="cslider_outer"><div id="cslider"></div><div id="cslider_indicator"></div></div><div class="clearfix"></div>';
    var pos = $(el).parent().offset();
    picker.style.left = pos.left + 'px';
    picker.style.top = (pos.top + $(el).parent().height() + 1) + 'px';

    document.body.appendChild(picker);

    $('#cpicker, #cslider').on("dragstart", function() {
        return false;
    });

    ColorPicker.fixIndicators(document.getElementById('cslider_indicator'),document.getElementById('cpicker_indicator'));

    var cp = ColorPicker(document.getElementById('cslider'),document.getElementById('cpicker'),function(hex, hsv, rgb, pickerCoordinate, sliderCoordinate){
        ColorPicker.positionIndicators(
            document.getElementById('cslider_indicator'),
            document.getElementById('cpicker_indicator'),
            sliderCoordinate, pickerCoordinate
        );
        $(el).parent().parent().children().eq(0).val(hex.toUpperCase());
        rebuild_clip();
    });

    cp.setHex(init_color);
}


function tts_article(id){
    if(tts_enalbed == 0){
        return;
    }
    if('speechSynthesis' in window){
        tts_current_article_id = id;

        var title = get_article_title(id);
        var content = $('#article_contents_inner_' + id).text();

        tts_msg.volume = 1;
        tts_msg.rate = 1;
        tts_msg.pitch = 1;
        tts_msg.text = title + ': \n' + content;
        // tts_msg.lang = 'en-US';
        tts_set_lang(tts_last_used_voice);
        speechSynthesis.speak(tts_msg);
    }
}

function show_exp_view_warning(){
    var string = "<b>" + sprintf(_js("Default %s mode"),application_name) + "</b>: <ul><li>" + _js("Unread/Unseen stripes on the left") + "</li><li>" + _js("<b>Unread</b> button is checked until article is marked as read") + "</li><li>" + _js("article titles are black") + "</li></ul><b>" + _js("Classic Google Reader mode") + "</b>: <ul><li>" + _js("No colorful stripes</li><li><b>Unread</b> button is unchecked for all articles if scroll tracking is turned off") + "</li><li>" + _js("unread articles titles are always blue") + "</li></ul>";
    xalert(string);
}

function show_sort_by_magic_warning(){
    var string = _js('This setting affects how much your reading habits affect the Sort by Magic feature.') + '<br>';
    string += sprintf(_js('%s tracks the feeds you read most and will try to rank their articles higher.'),application_name);
    string += '<p>' + sprintf(_js("If you simply prefer to see what's trending on %s, you can turn this option off."),application_name) + '</p>';
    xalert(string);
}

function show_keep_unread_warning(){
    if($('#keep_unread_disclaimer_row').is(':visible')){
        $('#keep_unread_disclaimer_row').hide();
    }else{
        $('#keep_unread_disclaimer_row').css('display','table-row');
    }
}

function set_max_unread(val){
    max_unread = val;
}

function activate_side_ad_timer(initial){
    if(initial){
        ads_static_refresh_count = 0;
    }

    if(ads_static_refresh_count >= ads_static_refresh_max_count){
        return;
    }

    if(window_focus == true && initial != true){
        purge_ads('side_sinner');
        activate_side_ad();
        ads_static_refresh_count++;
    }

    if(ads_static_refresh_timer){
        clearTimeout(ads_static_refresh_timer);
        ads_static_refresh_timer = null;
    }

    if(ads_static_refresh_rate > 0){
        ads_static_refresh_timer = setTimeout(function(){
            activate_side_ad_timer(false);
        },Math.round(ads_static_refresh_rate * 1000 + ((Math.random() * (10 - -10) + -10) * 1000)));
    }
}

function activate_3way_ad(){
    if(!ads_enabled){
        return false;
    }

    var div_id = uniqid('column_ad-');

    var ad_unit = '<div id="' + div_id + '" class="ad_everything_read ad_size_large_rectangle sinner inner_sinner"></div>';
    if(is_adult_section == 1){
        var script = ads_large_rectangle_script_noarticle_1;
    }else if(is_adult_section == 2){
        var script = ads_large_rectangle_script_noarticle_2;
    }else{
        var script = ads_large_rectangle_script_noarticle_0;
    }

    var ad_html = '<div><div class="graylink ad_title"><a href="/upgrade/feature/noads" class="ajaxed" onclick="l(\'Upgrade links\',\'Inner article ads\');\">'+_js("Advertisement")+':</a></div>';
    ad_html += '<div class="sinner_inner">' + ad_unit + '</div>';
    ad_html += '<div class="ad_footer_remove"><a href="javascript:void(0)" onclick="dialog(\'upgrade_dialog\', {access: ' + access_pro + ', forced_entry: \'remove_ads\'});" class="graylink underlink">'+_js("Remove ads")+'</a></div>';
    ad_html += '</div>';

    $('#no_article_selected').append(ad_html);

    postscribe($('#' + div_id),script);

    check_reader_pane_message();
}

function activate_side_ad(){
    // if(geoip && geoip.country_code == "RU"){
    //     if(ads_static_refresh_timer){
    //         clearTimeout(ads_static_refresh_timer);
    //         ads_static_refresh_timer = null;
    //     }
    //     return false;
    // }

    if(feed_params.search_term){
        return false;
    }

    if(ads_everything_read && $('#all_read_message')[0]){
        return false;
    }


    $('#sinner_container').html('').show();
    var div_id = uniqid('side_ad-');
    var width = $('#reader_pane').width();
    if(width < 730){
        $('#sinner_container').hide();
        return;
    }
    if(ads_half_page && width >= 1900){
        $('#reader_pane').addClass('reader_pane_sinner_wide').removeClass('reader_pane_sinner');
        var ad_unit = '<div id="' + div_id + '" class="ad_size_half_page sinner side_sinner border_sinner"></div>';
        if(is_adult_section == 1){
            var script = ads_half_page_script_outer_articles_script_1;
        }else if(is_adult_section == 2){
            var script = ads_half_page_script_outer_articles_script_2;
        }else{
            var script = ads_half_page_script_outer_articles_script_0;
        }
    }else{
        $('#reader_pane').addClass('reader_pane_sinner').removeClass('reader_pane_sinner_wide');
        var ad_unit = '<div id="' + div_id + '" class="ad_size_wide_skyscraper sinner side_sinner border_sinner"></div>';
        if(is_adult_section == 1){
            var script = ads_wide_skyscraper_script_outer_articles_script_1;
        }else if(is_adult_section == 2){
            var script = ads_wide_skyscraper_script_outer_articles_script_2;
        }else{
            var script = ads_wide_skyscraper_script_outer_articles_script_0;
        }
    }

    var ad_html = '<div class="graylink ad_title ad_title_centered"><a href="/upgrade/feature/noads" class="ajaxed" onclick="l(\'Upgrade links\',\'Side ad\');\">'+_js("Advertisement")+':</a></div>';
    ad_html += '<div>' + ad_unit + '</div>';
    ad_html += '<div class="ad_title_centered ad_footer_remove ad_footer_remove_side_bar"><a href="javascript:void(0)" onclick="dialog(\'upgrade_dialog\', {access: ' + access_pro + ', forced_entry: \'remove_ads\'});" class="graylink underlink">'+_js("Remove ads")+'</a></div>';

    var scrollbar_width = get_scrollbar_width();
    $('#sinner_container').html(ad_html).css(float_right,get_scrollbar_width);
    postscribe($('#' + div_id),script);
    resize();
}

function activate_inner_ads(id){
    if(!ads_permitted){
        return;
    }
    var ad_timeout = 1;

    // Aviasales
    if(device_type != 'phone' && ads_aviasales_enabled == 1){
        var text = $('#article_title_link_' + id).text() + ' ' + $('#article_contents_inner_' + id).text();
        if(text){
            text = $.trim(text).replace(/(\r\n|\n|\r|\t)/gm,' ');
            var inverse_keywords_regex = /(crash)[\s.,\-]|(dead)[\s.,\-]|(deaths?)[\s.,\-]|(crash)[\s.,\-]|(collisions?)[\s.,\-]|(colided?)[\s.,\-]|(investigations?)[\s.,\-]|(investigated?)[\s.,\-]|(investigators?)[\s.,\-]|(germanwings?)[\s.,\-]/i;
            if(!inverse_keywords_regex.test(text)){
                var keywords_regex = /(flights?)[\s.,\-]|(airfares?)[\s.,\-]|(hotels?)[\s.,\-]|(travel)[\s.,\-]|(attractions?)[\s.,\-]|(sightseeings?)[\s.,\-]|(trips?)[\s.,\-]|(vacations?)[\s.,\-]|(tickets)[\s.,\-]|(journey)[\s.,\-]|(touring)[\s.,\-]|(voyage)[\s.,\-]|(авиабилеты)[\s.,\-]|(отели)[\s.,\-]|(авиабилет)[\s.,\-]|(отель)[\s.,\-]|(гостиница)[\s.,\-]|(хостел)[\s.,\-]|(хостелы)[\s.,\-]|(апартаменты)[\s.,\-]|(гестхаус)[\s.,\-]|(гестхауз)[\s.,\-]|(гостиницы)[\s.,\-]|(проживание)[\s.,\-]|(перелёт)[\s.,\-]|(билет)[\s.,\-]|(самолет)[\s.,\-]|(самолёт)[\s.,\-]|(путешествие)[\s.,\-]|(путешествия)[\s.,\-]|(путешественник)[\s.,\-]|(готель)[\s.,\-]|(пансионат)[\s.,\-]|(пансион)[\s.,\-]|(мотель)[\s.,\-]/i; // add g modifier if you want to track keywords

                if(keywords_regex.test(text)){
                    var widget_locale = (locale == 'ru_RU') ? 'ru' : 'en';
                    var widget_theme = (theme_is_dark) ? 'dark' : 'light';
                    text = text.substring(0,500);

                    var iframe = '<iframe class="avs_iframe" src="//www.travelpayouts.com/inoreader_widget/?locale=' + widget_locale + '&theme=' + widget_theme + '&text=' + encodeURIComponent(text) + '"></iframe>';

                    $('#article_contents_inner_' + id).append(iframe);
                    log_ga_event('Aviasales','Widget showed','Language: ' + widget_locale);
                    return;
                }
            }
        }
    }

    if(feed_params.view_style == 1){
        return;
    }

    if(ads_article_leaderboard != 1){
        return;
    }

    // if($('#sinner_container').is(':visible')){
    //     return;
    // }

    current_article_num++;
    if(timer13){
        current_article_num--;
        clearTimeout(timer13);
        timer13 = null;
    }

    if(ads_inside_skip_articles == -1){
        if(current_article_num > 1){
            return;
        }
        if(!$('#article_dialog')[0]){
            // return;
        }
    }else{
        if(ads_inside_skip_articles!= 1 && current_article_num % ads_inside_skip_articles != 0){
            return;
        }
    }

    var div_id = uniqid('inner_ad-');
    var height = $('#article_contents_inner_' + id).height();
    var width = $('#reader_pane').width();

    if(ads_only_rectangles_in_articles === 1){
        var ad_unit = '<div id="' + div_id + '" class="inner_ad ad_size_medium_rectangle sinner inner_sinner"></div>';
        if(is_adult_section == 1){
            var script = ads_medium_rectangle_script_articles_1;
        }else if(is_adult_section == 2){
            var script = ads_medium_rectangle_script_articles_2;
        }else{
            var script = ads_medium_rectangle_script_articles_0;
        }

        var ad_html = '<div class="sinner_under_footer"><div class="graylink ad_title"><a href="/upgrade/feature/noads" class="ajaxed" onclick="l(\'Upgrade links\',\'Inner article ads\');\">'+_js("Advertisement")+':</a></div>';
        ad_html += '<div class="sinner_inner">' + ad_unit + '</div>';
        ad_html += '<div class="ad_footer_remove"><a href="javascript:void(0)" onclick="dialog(\'upgrade_dialog\', {access: ' + access_pro + ', forced_entry: \'remove_ads\'});" class="graylink underlink">'+_js("Remove ads")+'</a></div>';
        ad_html += '</div>';

        $('#article_full_contents_' + id).append(ad_html);
    // }else if(device_type != 'phone'){
    }else{
        if(ads_article_skyscrapers == 1 && feed_params.view_style == 0 && height >= 400 && width >= 940 && full_width == 0){
            ad_timeout = 10;
            if(ads_half_page && width >= 1100){
                var ad_unit = '<div id="' + div_id + '" class="inner_ad ad_size_half_page sinner inner_sinner"></div>';
                if(is_adult_section == 1){
                    var script = ads_half_page_script_articles_1;
                }else if(is_adult_section == 2){
                    var script = ads_half_page_script_articles_2;
                }else{
                    var script = ads_half_page_script_articles_0;
                }
            }else{
                var ad_unit = '<div id="' + div_id + '" class="inner_ad ad_size_wide_skyscraper sinner inner_sinner"></div>';
                if(is_adult_section == 1){
                    var script = ads_wide_skyscraper_script_articles_1;
                }else if(is_adult_section == 2){
                    var script = ads_wide_skyscraper_script_articles_2;
                }else{
                    var script = ads_wide_skyscraper_script_articles_0;
                }
            }

            var ad_html = '<div class="pull_left ad_inline" id="ad_inline_' + id + '"><div class="graylink ad_title ad_title_centered"><a href="/upgrade/feature/noads" class="ajaxed" onclick="l(\'Upgrade links\',\'Inner article ads\');\">'+_js("Advertisement")+':</a></div>';
            ad_html += '<div>' + ad_unit + '</div>';
            ad_html += '<div class="ad_title_centered ad_footer_remove"><a href="javascript:void(0)" onclick="dialog(\'upgrade_dialog\', {access: ' + access_pro + ', forced_entry: \'remove_ads\'});" class="graylink underlink">'+_js("Remove ads")+'</a></div>';
            ad_html += '</div>';
            $('#article_contents_inner_' + id).after(ad_html).css({float: float_left});
            sanitize_article(id,true);
            build_article_annotations(id);
        }else{
            var ad_unit = false;
            if(ads_inner_ad_postion == 'second_paragraph'){
                // var ad_unit = '<div id="' + div_id + '" class="inner_ad sinner inner_sinner"><div class="loader"></div></div>';
                var ad_unit = '<div id="' + div_id + '" class="inner_ad sinner inner_sinner"></div>';
                if(is_adult_section == 0){
                    if(theme == 1){
                        var script = ads_inarticle_script_0_a;
                    }else if(theme == 2){
                        var script = ads_inarticle_script_0_b;
                    }else if(theme == 4){
                        var script = ads_inarticle_script_0_c;
                    }
                }else if(is_adult_section == 1){
                    return; // This unit doesn't support adult ads
                    if(theme == 1){
                        var script = ads_inarticle_script_1_a;
                    }else if(theme == 2){
                        var script = ads_inarticle_script_1_b;
                    }else if(theme == 4){
                        var script = ads_inarticle_script_1_c;
                    }
                }else if(is_adult_section == 2){
                    return; // This unit doesn't support adult ads
                    if(theme == 1){
                        var script = ads_inarticle_script_2_a;
                    }else if(theme == 2){
                        var script = ads_inarticle_script_2_b;
                    }else if(theme == 4){
                        var script = ads_inarticle_script_2_c;
                    }
                }

                // WORDPRESS HACK
                script = ads_inarticle_wordpress;
                var text = $('#article_title_link_' + id).text() + ' ' + $('#article_contents_inner_' + id).text();
                if(text){
                    text = $.trim(text).replace(/(\r\n|\n|\r|\t)/gm,' ');
                    var keywords_regex = /(wordpress)|(siteground)/i;
                    if(!keywords_regex.test(text)){
                        // Do not show non-targeted ads.
                        return;
                    }
                }
            }else{
                if(feed_params.view_style == 2){
                    if(ad_unit == false){
                        var ad_unit = '<div id="' + div_id + '" class="inner_ad ad_size_medium_rectangle sinner inner_sinner"></div>';
                    }
                    if(is_adult_section == 1){
                        var script = ads_medium_rectangle_script_articles_1;
                    }else if(is_adult_section == 2){
                        var script = ads_medium_rectangle_script_articles_2;
                    }else{
                        var script = ads_medium_rectangle_script_articles_0;
                    }
                }else if(feed_params.view_style == 3 || feed_params.view_style == 4){
                    if(ad_unit == false){
                        var ad_unit = '<div id="' + div_id + '" class="inner_ad ad_size_leaderboard sinner inner_sinner"></div>';
                    }
                    if(is_adult_section == 1){
                        var script = ads_leaderboard_script_inner_articles_1;
                    }else if(is_adult_section == 2){
                        var script = ads_leaderboard_script_inner_articles_2;
                    }else{
                        var script = ads_leaderboard_script_inner_articles_0;
                    }
                }else{
                    if(width >= 800){
                        if(ad_unit == false){
                            var ad_unit = '<div id="' + div_id + '" class="inner_ad ad_size_leaderboard sinner inner_sinner"></div>';
                        }
                        if(is_adult_section == 1){
                            var script = ads_leaderboard_script_inner_articles_1;
                        }else if(is_adult_section == 2){
                            var script = ads_leaderboard_script_inner_articles_2;
                        }else{
                            var script = ads_leaderboard_script_inner_articles_0;
                        }
                    }else{
                        if(ad_unit == false){
                            var ad_unit = '<div id="' + div_id + '" class="inner_ad ad_size_mobile_leaderboard sinner inner_sinner"></div>';
                        }
                        if(is_adult_section == 1){
                            var script = ads_mobile_leaderboard_script_inner_articles_1;
                        }else if(is_adult_section == 2){
                            var script = ads_mobile_leaderboard_script_inner_articles_2;
                        }else{
                            var script = ads_mobile_leaderboard_script_inner_articles_0;
                        }
                    }
                }
            }

            if(ads_inner_ad_postion == 'under_footer'){
                var ad_html = '<div class="sinner_under_footer"><div class="graylink ad_title"><a href="/upgrade/feature/noads" class="ajaxed" onclick="l(\'Upgrade links\',\'Inner article ads\');\">'+_js("Advertisement")+':</a></div>';
                ad_html += '<div class="sinner_inner">' + ad_unit + '</div>';
                ad_html += '<div class="ad_footer_remove"><a href="javascript:void(0)" onclick="dialog(\'upgrade_dialog\', {access: ' + access_pro + ', forced_entry: \'remove_ads\'});" class="graylink underlink">'+_js("Remove ads")+'</a></div>';
                ad_html += '</div>';

                $('#article_full_contents_' + id).append(ad_html);
            }else if(ads_inner_ad_postion == 'second_paragraph'){
                var ad_html = '<div class="graylink ad_title"><a href="/upgrade/feature/noads" class="ajaxed" onclick="l(\'Upgrade links\',\'Inner article ads\');\">'+_js("Advertisement")+':</a>';
                ad_html += '<div class="sinner_inner">' + ad_unit + '</div>';
                ad_html += '<div class="ad_footer_remove"><a href="javascript:void(0)" onclick="dialog(\'upgrade_dialog\', {access: ' + access_pro + ', forced_entry: \'remove_ads\'});" class="graylink underlink">'+_js("Remove ads")+'</a></div>';
                ad_html += '</div>';

                var $paragraph = $('#article_contents_inner_' + id).find('p + p');
                if($paragraph[0]){
                   $paragraph.eq(0).after(ad_html);
                }else{
                    $('#article_contents_inner_' + id).append(ad_html);
                }

            }else{
                var ad_html = '<div class="graylink ad_title"><a href="/upgrade/feature/noads" class="ajaxed" onclick="l(\'Upgrade links\',\'Inner article ads\');\">'+_js("Advertisement")+':</a>';
                ad_html += '<div class="sinner_inner">' + ad_unit + '</div>';
                ad_html += '<div class="ad_footer_remove"><a href="javascript:void(0)" onclick="dialog(\'upgrade_dialog\', {access: ' + access_pro + ', forced_entry: \'remove_ads\'});" class="graylink underlink">'+_js("Remove ads")+'</a></div>';
                ad_html += '</div>';

                $('#article_contents_inner_' + id).append(ad_html);
            }
        }
    }

    timer13 = setTimeout(function(){
        if($('#' + div_id)[0]){
            $('#' + div_id).html('');
            postscribe($('#' + div_id),script);
        }
        timer13 = null;
    },ad_timeout);
}

function requestUserPermission() {
    try {
        var checkboxUserPermission = document.getElementById('preference_notifications');
        if(checkboxUserPermission.checked) {
            enable_notifications = true;
            if (checkUserPermission()) return;
            if (typeof Notification != "undefined") {
                Notification.requestPermission(function(){check_notif();});
            }
        }
    } catch(e) { checkboxUserPermission.checked = false; }
}

function checkUserPermission() {
    if(typeof window["webkitNotifications"] === "object") {
        try {
            return (webkitNotifications.checkPermission() == 0);
        } catch(e) { return false; }

    }

    if (!("Notification" in window)) {
        return false;
    }

    // Let's check if the user is okay to get some notification
    else if (Notification.permission === "granted") {
        // If it's okay let's create a notification
        return true;
    }

    // Otherwise, we need to ask the user for permission
    // Note, Chrome does not implement the permission static property
    // So we have to check for NOT 'denied' instead of 'default'
    else if (Notification.permission !== 'denied') {
        Notification.requestPermission(function (permission) {

            // Whatever the user answers, we make sure Chrome stores the information
            if(!('permission' in Notification)) {
                Notification.permission = permission;
            }

            // If the user is okay, let's create a notification
            if (permission === "granted") {
                return true;
            }
        });
    }

    return false;
}

function check_notif(){
    var checkboxUserPermission = document.getElementById('preference_notifications');
    if(window.Notification) {
        if(enable_notifications && checkUserPermission()){

        }else{
            checkboxUserPermission.checked = false;
        }
    }else{
        checkboxUserPermission.checked = false;
        checkboxUserPermission.disabled = true;
        $('#preference_notifications_td').css('color','silver');
    }
}

function popup_notification(article_id,encoded_article_id,icon,title,message,dir,autoclose){
    if(window.Notification){
        if(checkUserPermission()){
            var opts = {dir: dir, body: message, icon: icon};
            notifications[article_id] = new Notification(title,opts);
            if(autoclose){
                notifications[article_id].ondisplay = function() {window.setTimeout(function(){; notifications[article_id].close();}, 10000);}
            }
            notifications[article_id].onclick = function(event) {
                window.focus();
                apop(article_id,encoded_article_id,event);
            };
            notifications[article_id].show();
        }
    }
}

soundManager.setup({
    url: '/include/soundmanager/swf/',
    'useHTML5Audio': true,
    preferFlash: false
});

function play_sound(id){
    soundManager.createSound({id: id,url: '/audio/'+id+'.mp3'});
    soundManager.setVolume(id,sound_volume);
    soundManager.play(id);
}

function play_pause_current_audio() {
    var playing = !$('#audio_player')[0].paused;
    if (playing) {
        $('#sb_rp_audio_player_quick_play').html('<span class="icon-play"></span>').attr('title', _js("Play current track"));
        $('#audio_player')[0].pause();
        create_bottom_notification(_js("Player paused"), 'info', true);
    } else {
        $('#sb_rp_audio_player_quick_play').html('<span class="icon-pause"></span>').attr('title', _js("Pause current track"));
        $('#audio_player')[0].play();
        create_bottom_notification(_js("Player resumed"), 'info', true);
    }
}

function play_podcast(url,hash,force){
    audio_player_started_playing = true;
    if($('#ae_' + hash).html() != ''){
        $('#ae_' + hash).html('');
    }

    if($('#podcast_new_' + hash)){
        $('#podcast_new_' + hash).fadeOut('fast');
        xajax_mark_podcast_read(hash);
    }

    if(currently_playing){
        $('#autr_' + currently_playing).removeClass('now_playing_tr');
        $('#sb_rp_audio_player_quick_play').html('<span class="icon-play"></span>').attr('title',_js("Play current track"));
    }
    if(currently_playing == hash && force != true){
        $('#audio_player')[0].pause();
        currently_playing = null;
        return;
    }
    currently_playing = hash;
    $('#autr_' + currently_playing).addClass('now_playing_tr');

    $('#audio_player').attr('src',url);

    $('#audio_player').mediaelementplayer({audioWidth: '100%', pauseOtherPlayers: true, pluginPath: 'include/mejs/', flashName: 'flashmediaelement.swf', startVolume: audio_player_volume});
    $('#audio_player')[0].volume = audio_player_volume;

    $('#audio_player').off('pause').on('pause',function(){
        $('#sb_rp_audio_player_quick_play').show().html('<span class="icon-play"></span>').attr('title',_js("Play current track"));
    });
    $('#audio_player').off('play').on('play',function(){
        $('#sb_rp_audio_player_quick_play').show().html('<span class="icon-pause"></span>').attr('title',_js("Pause current track"));
    });
    $('#audio_player').off('volumechange').on('volumechange',function(){
        var vol = $('#audio_player')[0].volume;
        audio_player_volume = vol;
        createCookie('audio_player_volume',vol,31);
    });
    $('#audio_player').off('ended').on('ended',function(){
        var next_item = {};
        var this_force = false;
        if(audio_player_repeat == 1){
            if(audio_player_shuffle){
                for(var i = 1; i <= 1000; i++){
                    next_item = audio_player_playlist[Math.floor(Math.random() * audio_player_playlist.length)];
                    if(next_item.hash != currently_playing){
                        break;
                    }
                }
            }else{
                if(audio_player_playlist[audio_player_playlist.length-1].hash == currently_playing){
                    next_item = audio_player_playlist[0];
                }else{
                    for(var i in audio_player_playlist){
                        i = parseInt(i);
                        if(audio_player_playlist[i].hash == currently_playing){
                            next_item = audio_player_playlist[i+1];
                            break;
                        }
                    }
                }
            }
        }else if(audio_player_repeat == 2){
            for(var i in audio_player_playlist){
                i = parseInt(i);
                if(audio_player_playlist[i].hash == currently_playing){
                    next_item = audio_player_playlist[i];
                    break;
                }
            }
            this_force = true;

        }else{
            $('#sb_rp_audio_player_quick_play').show().html('<span class="icon-play"></span>').attr('title',_js("Play current track"));
        }
        if(next_item.url){
            create_bottom_notification(_js("Now playing:")+' ' + next_item.title,'info',true);
            play_podcast(next_item.url,next_item.hash,this_force);
        }
    });

    $('#audio_player')[0].play();
    if(!$('#audio_player_wraper').is(':visible')){
        $('#audio_player_wraper').fadeIn();
    }
}

function clone_object(o) {
    if(!o || 'object' !== typeof o)  {
        return o;
    }
    var c = 'function' === typeof o.pop ? [] : {};
    var p, v;
    for(p in o) {
        if(o.hasOwnProperty(p)) {
            v = o[p];
            if(v && 'object' === typeof v) {
                c[p] = clone_object(v);
            }else{
                c[p] = v;
            }
        }
    }
    return c;
}

function unbind_reader_pane_scroll(){
    $('#reader_pane').off('scroll');
}

// var reader_pane_class_added = false;
// var reader_pane_class_long_added = false;
// var reader_pane_scrolling_timer = 0;
function bind_reader_pane_scroll(){
    $('#reader_pane').scroll(function(){
        if(scroll_cooldown){
            clearTimeout(scroll_cooldown);
        }

        // if(!reader_pane_class_added){
        //  reader_pane_class_added = true;
        //  $('#reader_pane').addClass('scrolling');
        //  if(!reader_pane_scrolling_timer){
        //      reader_pane_scrolling_timer = new Date().getTime();
        //  }
        // }

        // if(reader_pane_class_added && !reader_pane_class_long_added && new Date().getTime() - reader_pane_scrolling_timer > 200){
        //  reader_pane_class_long_added = true;
        //  $('#reader_pane').addClass('scrolling_long');
        // }

        var $reader_pane = $('#reader_pane');
        var current_scroll_pos = $reader_pane.scrollTop();
        if(!$('#older_articles_hint').hasClass('oah_unread')){
            if(older_articles_hint_showed == true && current_scroll_pos > 10){
                $('#older_articles_hint').finish().animate({opacity: 0 }, 300, function(){ $(this).css('pointer-events', 'none'); });
                older_articles_hint_showed = false;
            }else if(older_articles_hint_showed == false && current_scroll_pos <= 10){
                $('#older_articles_hint').finish().animate({opacity: 1 }, 300, function(){ $(this).css('pointer-events', 'auto'); });
                older_articles_hint_showed = true;
            }
        }

        scroll_cooldown = setTimeout(function(){
            // reader_pane_class_added = false;
            // reader_pane_class_long_added = false;
            // reader_pane_scrolling_timer = 0;

            var reader_pane_height = $reader_pane.height();
            var topic_curr = null;

            $reader_pane.removeClass('scrolling').removeClass('scrolling_long');

            if(current_scroll_pos < prev_scroll_pos){
                var scroll_direction = 'up';
            }else{
                var scroll_direction = 'down';
            }
            prev_scroll_pos = current_scroll_pos;
            if(scroll_direction == 'down'){
                check_bottom(false,true);
            }

            if(feed_params.filter_type != 'hub'){
                var total_topics = parseInt($reader_pane.attr('data-topicall'));
                var topic_to_show = (feed_params.view_unread == 0 && total_topics > 0 && article_progressbar === 1 && !$('#article_dialog')[0] && (feed_params.view_unread === 0 || parseInt($('#total_unread_cnt').text()) > 0) && $('#footer').is(':visible'));
                var height_offset = $('#subscriptions_buttons').outerHeight();
                var $top_notifications = $('#sitecontent').find('>.top_notification');
                if($top_notifications[0]){
                    $top_notifications.each(function(){
                        height_offset += $(this).outerHeight();
                    });
                }

                var index = 0;
                $('#reader_pane').find('.ar').each(function(){
                    var $this = $(this);
                    var $height = $this.outerHeight();
                    var position_top = $this.offset().top - height_offset;

                    if(articles_moving == false && check_scroll_tracking()){
                        var has_unread_nothidden = ($this.hasClass('article_unreaded') && !$this.hasClass('hidden'));


                        if(has_unread_nothidden){
                            if(view_style == 0 || view_style == 2 || view_style == 3 || view_style == 4){
                                var top = position_top;
                                var bottom = (top + $height);
                            }else{
                                var top = position_top;
                                var bottom = reader_pane_height - (position_top + $height);
                            }

                            if((view_style == 1 && top < 0 && bottom > 0) || ((view_style == 0 || view_style == 2 || view_style == 3 || view_style == 4) && bottom <= 1)){
                                var this_id = $this.data('aid');
                                if($('#article_' + this_id).data('init') == 1){
                                    $('#article_' + this_id).data('init',0);
                                }
                                if(keep_unread[this_id] != true){
                                    mark_read(this_id,false,true);
                                }
                                if(!$('#article_dialog')[0]){
                                    check_star_icon(this_id);
                                    check_tags_icon(this_id);
                                    check_broadcast_icon(this_id);
                                }
                            }
                        }
                    }

                    if(view_style == 1) {
                        var tid = $this.data('aid');
                        if(expanded_view_content_blanking == 1) {
                            // content blanking
                            var top_height = position_top + $height;
                            if(top_height < -2000 && $this.data('blanked') == 0) {
                                var ah = $this.height();
                                $this.data('blanked', 1).css('height', ah + 'px').css('min-height', ah + 'px');
                                blanked_cache[tid] = $this.html();
                                $this.html('');
                                clear_article_annotations(tid);
                            }else if(top_height >= -2000 && $this.data('blanked') == 1) {
                                $this.html(blanked_cache[tid]).data('blanked', 0);
                                sanitize_article(tid);
                                build_article_annotations(tid);
                                setTimeout(function () {
                                    $this.css('height', 'auto').css('min-height', 'auto');
                                }, 250);
                                delete blanked_cache[tid];
                            }
                        }

                        if($this.data('blanked') == 1) {
                            return true;
                        }

                        if(use_stripes == 0 && tid && $this.data('read') == 1 && !$this.hasClass('article_current')){
                            $('#article_title_link_' + tid).removeClass('bluelink');
                            $('#article_feed_info_link_' + tid).removeClass('bluelink');
                        }

                        if(view_style == 1){
                            var top = position_top - reader_pane_height / 2;
                            var this_bottom = (top + $height);
                            this_bottom += 24; // margin offset
                            if(articles_moving_click == false && top < 0 && this_bottom > 0){
                                if(articles_moving == false) {
                                    if(mark_current_timer) {
                                        clearTimeout(mark_current_timer);
                                    }

                                    mark_current_timer = setTimeout(function (){
                                        set_feed_param('opened_article', $this.data('aid'));
                                        $reader_pane.find('.article_current').removeClass('article_current');
                                        $('#article_' + $this.data('aid')).addClass('article_current');

                                        if(use_stripes == 0){
                                            $reader_pane.find('.article_title_link').removeClass('bluelink');
                                            $reader_pane.find('.article_feed_info_link').removeClass('bluelink');
                                            $('#article_title_link_' + $this.data('aid')).addClass('bluelink');
                                            $('#article_feed_info_link_' + $this.data('aid')).addClass('bluelink');
                                        }

                                        if(device_type == 'phone'){
                                            build_share_buttons($this.data('aid'));
                                        }
                                    }, 100);
                                }

                                check_article_comments($this.data('aid'));
                            }
                        }

                    }



                    // Topics count progress bar
                    var has_topiccount = $this.attr('data-topiccount');
                    if(typeof has_topiccount !== 'undefined' && has_topiccount !== false && topic_to_show){
                        if($this.hasClass('hidden')){
                            topic_curr = 1;
                        }else{
                            var init_first_top = 0;
                            if(index == 0){
                                init_first_top = position_top;
                            }
                            var top_topic = position_top - init_first_top;
                            if(top_topic <= 0){
                                topic_curr = $this.data('topiccount');
                            }
                        }
                    }
                    index++;
                });
                if(topic_curr !== null && topic_to_show){
                    var topic_wrapper_width = parseInt($('#topic_progress_wrapper').width());
                    if(topic_curr <= total_topics){
                        var progress_width = (topic_curr * topic_wrapper_width) / total_topics;
                        $('#topic_current_top').html(topic_curr);
                        $('#topic_current_top_inner').html(topic_curr);
                        $("#topic_progress").find(".nums").css("width", progress_width);
                    }
                }
            }

            if($('#no_more_press_space')[0] && device_type != 'phone'){
                var wraper = document.getElementById('reader_pane');
                var hh = (wraper.scrollHeight - current_scroll_pos) - reader_pane_height;
                var hh_check = 30;
                if(hh < hh_check && $reader_pane.find('.article_unreaded').length == 0){
                    $('#no_more_press_space').css('visibility','visible');
                    // $('#no_more_core').hide();
                }else{
                    $('#no_more_press_space').css('visibility','hidden');
                    // $('#no_more_core').show();
                }
            }
        },50);

    });
}

function check_scroll_tracking(){
    if(scroll_tracking_view_style_0 && view_style == 0){
        return true;
    }else if(scroll_tracking_view_style_1 && view_style == 1){
        return true;
    }else if(scroll_tracking_view_style_2 && view_style == 2){
        return true;
    }else if(scroll_tracking_view_style_3 && view_style == 3){
        return true;
    }else if(scroll_tracking_view_style_4 && view_style == 4){
        return true;
    }
    return false;
}

function init_window_focus_events(){
    $(window).focus(function() {
        if(window_focus != true){
            window_focus = true;
            checksum(false);
            gadget_check_queue();
            fix_relative_dates();
        }
    }).blur(function() {
        if(timer11) clearTimeout(timer11);
        timer11 = setTimeout(function(){
            window_focus = false;
        },250);
        flush_score_queue();
    });
}

function init_hashchange_events(){
    if(history.pushState){
        History.Adapter.bind(window,'statechange',function(){
            var state = History.getState();
            process_hashchange(state.hash.substring(1));
            set_title(title_num);
        });
    }

    $(window).hashchange(function(){
        if(phash_disabled){
            phash_disabled = false;
            return;
        }
        process_phashchange();
    });
}

function process_hashchange(hash){
    if(hash_disabled){
        hash_disabled = false;
        return;
    }

    var hash_handled = true;

    process_phashchange();

    var close_article_dialog = true;
    disable_set_loc = true;
    if(hash == 'all_articles'){
        view_all_items();
    }else if(hash == 'all_articles_team'){
        view_all_items_team();
    }else if(hash == 'discovery'){
        open_searcher();
    }else if(hash == 'new_folder'){
      new_folder();
    }else if(hash == 'new_tag'){
      new_tag();
    }else if(hash == 'new_covid19_alert'){
      new_covid19_alert();
    }else if(hash == 'add_newsletter'){
      add_newsletter_inline();
    }else if(hash == 'catalog'){
        open_searcher();
    }else if(hash == 'welcome'){
        view_welcome();
    }else if(hash == 'library'){
        view_library();
    }else if(hash == 'team_tags'){
        view_team_tags();
    }else if(hash == 'tags_dashboard'){
        view_tags_dashboard();
    }else if(hash == 'team_tags_dashboard'){
        view_team_tags_dashboard({organization_id: joined_organization_id});
    }else if(hash == 'rules'){
        view_rules();
    }else if(hash == 'monitored_keywords'){
        view_monitored_keywords();
    }else if(hash == 'filters'){
        view_filters();
    }else if(hash == 'highlighters'){
        view_highlighters();
    }else if(hash == 'dashboard'){
        view_dashboard();
    }else if(hash == 'upgrade_teams'){
        view_upgrade_teams();
    }else if(hash == 'favourites'){
        view_favourite_items();
    }else if(hash == 'starred'){
        view_favourite_items();
    }else if(hash == 'today'){
        view_today();
    }else if(hash == 'trending'){
        view_trending();
    }else if(hash == 'liked'){
        view_liked();
    }else if(hash == 'recent'){
        view_recent();
    }else if(hash == 'annotated'){
        view_annotated();
    }else if(hash == 'web_pages'){
        view_web_pages();
    }else if(hash == 'tags'){
        view_tags();
    }else if(hash == 'active_searches'){
        view_active_searches();
    }else if(hash == 'commented'){
        view_commented();
    }else if(hash == 'stats'){
        view_stats();
    }else if(hash == 'channel'){
        view_channel();
    }else if(hash == 'my_channel'){
        view_my_channel();
    }else if(hash == 'changelog'){
        print_changelog();
    }else if(hash == 'hub'){
        view_hub();
    }else if(hash == 'teams'){
        view_teams();
    }else if(hash == 'friend_finder'){
        view_friend_finder();
    }else if(hash == 'upgrade'){
        view_upgrade();
    }else if(hash == 'pricing'){
        view_upgrade();
    }else if(hash == 'apps'){
        view_apps();
    }else if(hash == 'keyboard_shortcuts'){
        view_keyboard_shortcuts();
    }else if(hash == 'search'){
        open_searcher();
    }else if(hash == 'contact'){
        view_library();
        setTimeout(function(){set_loc();},10);
        dialog('feedback_dialog');
    }else if(hash == 'discover'){
        open_searcher();
        hash = '/search/feeds';
        set_location_hash(hash);
    }else if(hash && hash.indexOf('admin_') === 0){
        var hash_split = hash.split(/\_/);
        hash_split.shift();
        build_admin_tabs(hash_split.join('_'));
    }else if(hash == 'pocket' || hash == 'evernote' || hash == 'onenote' || hash == 'instapaper'){
        view_ril(hash);
    }else{
        var hash_split = hash.split(/\//);
        if(hash_split.length == 1){
            hash_handled = false; // 404
        }else if(hash_split.length >= 2){
            if(hash_split[0] == 'search'){
                if(hash_split[1] == 'articles'){
                    hash_split[1] = 'subscriptions';
                }

                var params = { section_id: 0, sub_section_id: 0, tab: hash_split[1], term: (hash_split[2] ? decodeURIComponent(hash_split[2]) : '') };

                if(hash_split[2] && hash_split[2] == 'category'){
                    for(var i in catalogs){
                        if(encodeURIComponent(catalogs[i].title).toLowerCase() == hash_split[3]){
                            params = { section_id: catalogs[i].id, tab: hash_split[1] };
                            break;
                        }
                    }
                }

                open_searcher(params);
            }else if(hash_split[0] == 'discovery'){
                if(hash_split[1] == 'search'){
                    var params = { section_id: 0, sub_section_id: 0, tab: 'subscriptions', term: decodeURIComponent(hash_split[2]) };
                    open_searcher(params);
                }else if(hash_split[1] == 'category'){
                    open_searcher();
                }else{
                    open_searcher();
                }
                set_location_hash(hash);
            }else if(hash_split[0] == 'discover'){
                if(hash_split[1] == 'topic'){
                    var section_id = 0;
                    var sub_section_id = 0;

                    if(hash_split[2]){
                        for(var i in catalogs){
                            if(catalogs[i].url_slug == hash_split[2]){
                                section_id = parseInt(catalogs[i].id);
                                if(hash_split[3]){
                                    for(var c in catalogs[i].sub_catalogs){
                                        if(catalogs[i].sub_catalogs[c].url_slug == hash_split[3]){
                                            sub_section_id = parseInt(catalogs[i].sub_catalogs[c].id);
                                        }
                                    }
                                }
                            }
                        }
                    }

                    var params = { section_id: section_id, sub_section_id: sub_section_id, tab: 'feeds', term: '' };
                    open_searcher(params);
                    build_searcher_feeds(params);
                }else{
                    open_searcher();
                }
                hash = '/search/feeds';
                set_location_hash(hash);
            }else if(hash_split[0] == 'article'){
                var comment_id = 0;
                var unsubscribe = 0;
                if(hash_split[2] == 'comment'){
                    comment_id = hash_split[3];
                }
                if(hash_split[4] == 'unsubscribe'){
                    unsubscribe = 1;
                }

                if(hash_split[1].indexOf('-') !== -1){
                    hash_split[1] = hash_split[1].substring(0,hash_split[1].indexOf('-'));
                }

                var found_article_in_dom = false;
                if(comment_id == 0 && unsubscribe == 0){
                    $('#reader_pane').find('.ar').each(function(){
                        var $this = $(this);
                        if($this.data('oid') == hash_split[1]){
                            found_article_in_dom = $this.data('aid');
                            return false;
                        }
                    });
                }

                if(found_article_in_dom){
                    if(view_style == 3 || view_style == 4){
                        close_article_dialog = false;
                    }
                    toggle_articleview(found_article_in_dom);
                }else{
                    view_article(hash_split[1],comment_id,unsubscribe);
                }
            }else if(hash_split[0] == 'comment'){
                view_commented(hash_split[1]);
            }else if(hash_split[0] == 'profile'){
                view_profile(hash_split[1]);
            }else if(hash_split[0] == 'trending'){
                view_trending(hash_split[1]);
            }else if(hash_split[0] == 'today'){
                view_today(hash_split[1]);
            }else if(hash_split[0] == 'u'){
                var params = {};
                if(hash_split[2]){
                    params.tab = hash_split[2];
                }
                view_profile(hash_split[1],params);
            }else if(hash_split[0] == 'catalog'){
                open_searcher();
            }else if(hash_split[0] == 'bundle'){
                view_bundle(hash_split[1]);
            }else if(hash_split[0] == 'upgrade' || hash_split[0] == 'pricing'){
                if(hash_split[1] == 'renew'){
                    view_upgrade({renew: true});
                }else if(hash_split[1] == 'migrate_braintree'){
                    view_upgrade({migrate_braintree: true});
                }else if(hash_split[1] == 'starter'){
                    view_upgrade({plan: 'starter'});
                }else if(hash_split[1] == 'plus'){
                    view_upgrade({plan: 'plus'});
                }else if(hash_split[1] == 'pro'){
                    view_upgrade({plan: 'pro'});
                }else if(hash_split[1] == 'feature'){
                    view_upgrade({feature: hash_split[2]});
                }else if(hash_split[1] == 'teams'){
                    view_upgrade_teams();
                }else if(hash_split[1] == 'enterprise'){
                    view_upgrade_teams();
                }else{
                    view_upgrade();
                }
                set_location_hash(hash);
            }else if(hash_split[0] == 'upgrade_teams'){
                view_upgrade_teams();
            }else if(hash_split[0] == 'team'){
                var found_subscription_id = false;
                if(joined_teams){
                    for(var i in joined_teams){
                        if(joined_teams[i].id == hash_split[1].split(/-/)[0]){
                            view_tree_element('subscription',joined_teams[i].subscription_id);
                            set_location_hash(hash);
                            found_subscription_id = true;
                            break;
                        }
                    }
                }
                if(found_subscription_id == false){
                    view_dashboard();
                }
            }else if(hash_split[0] == 'teams'){
                if(hash_split[2] && hash_split[2] == 'edit'){
                    edit_organization(hash_split[1]);
                }else{
                    view_teams();
                }
            }else if(hash_split[0] == 'folder' || hash_split[0] == 'feed' || hash_split[0] == 'subscription' || hash_split[0] == 'team_folder'){
                var filter_type = hash_split[0];
                if(hash_split.length > 2){
                    hash_split.shift();
                    var filter_id = hash_split.join('/');
                }else{
                    if(hash_split[0] == 'folder'){
                        var filter_id = decodeURIComponent(hash_split[1]);
                    }else{
                        var filter_id = hash_split[1];
                    }
                }

                view_tree_element(filter_type,filter_id,false,false,null,true);
                set_location_hash(hash);
            }else{
                hash_handled = false;
            }
        }
    }

    if(close_article_dialog === true && $('#article_dialog')[0]){
        inno_dialog_close('article_dialog');
    }
    disable_set_loc = false;

    if(!hash_handled){
        view_404();
    }
}

function view_404(params){
    inno_dialog_close_all();
    hide_add_options();
    seen_ids_hash = '';
    $('#reader_pane').removeClass();
    clear_article_divs();
    clear_view_styles();
    clear_racing_xajax_requests();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','404');
    remove_article_classes();
    upgrade_params = params;
    close_search_overlay();

    var html = '<div class="reader_pane_message">';
    html += '<div class="all_read_message_h1">' + _js('Page not found') + '</div>';
    html += '<div class="all_read_message_p graylink_darker" style="max-width:550px;">';
    html += _js("Oops!") + ' ' + _js("We can't find the page you're looking for.");
    html += '<br>' + sprintf(_js('Head back to the %s homepage to find your way.'), application_name);
    html += ' ' + _js("If you think you received this message by mistake, give us a shout, and we'll get in touch.");
    html += '</div>';
    html += '<button class="bluebutton" onclick="go_to_home();" style="min-width:165px;">' + _js('Go home') + '</button>';
    html += '<p><button class="graybutton graybutton_outline" onclick="dialog(\'feedback_dialog\');" style="min-width:165px;">' + _js('Contact support') + '</button></p>';

    $('#reader_pane').html(html);

    check_reader_pane_message();
}

function go_to_home(){
    if(init_page_details && init_page_details.filter_type){
        init_page(init_page_details.filter_type, init_page_details.filter_id, true);
    }else{
        view_dashboard();
    }
}

function process_phashchange(){
    var oldhash = location.hash.substring(1);
    if(oldhash){
        oldhash_split = oldhash.split('-');
        if(oldhash_split[0] == 'preferences'){
            var dialog_params = {};
            if(oldhash_split[1]){
                dialog_params.set_category = 'preferences_' + oldhash_split[1];
                if(oldhash_split[2]){
                    dialog_params.set_tab = oldhash_split[2];
                }
            }
            if($('#preferences_dialog')[0]){
                if(dialog_params.set_category){
                    if($('#' + dialog_params.set_category)[0] && $('#' + dialog_params.set_category).hasClass('inno_tabs_wrapper') && $('#' + dialog_params.set_category).is(':visible')){
                        inno_tabs_switch_tab('#' + dialog_params.set_category + '_' + dialog_params.set_tab);
                    }else{
                        set_preferences_category(dialog_params.set_category,false,{},dialog_params.set_tab);
                    }
                }else{
                    set_preferences_main_category();
                }
            }else{
                setTimeout(function(){
                    dialog('preferences_dialog', dialog_params)
                },0);
            }
            return true;
        }
    }else{
        if($('#preferences_dialog')[0]){
            inno_dialog_close('preferences_dialog');
        }
    }

    return false;
}

// Function <Interval>

function fix_relative_dates(){
    if(show_absolute_dates){
        return;
    }
    $('#reader_pane').find('.ar').each(function(){
        var $this = $(this);
        var article_id = $this.data('aid');
        var date = ($this.data('date_rel')) ? $this.data('date_rel') : $this.data('date_usec') / 1000000;
        var rel_date = time2str(date);
        if(rel_date){
            var $hd = $('#header_date_' + article_id);
            if($hd.html() != rel_date){
                $hd.html(rel_date);
            }
            if(view_style == 3){
                var $hdt = $('#header_date_tile_' + article_id);
                if($hdt.html() != rel_date){
                    $hdt.html(rel_date);
                }
            }
        }
    });
}

function check_article_comments(id){
    if(disable_social == 0 || forced_team_social_features){
        if($('#user_comments_' + id).hasClass('user_comments_unloaded') && $('#article_' + id).data('comments') > 0){
            $('#user_comments_' + id).removeClass('user_comments_unloaded');
            xajax_print_comments($('#article_' + id).data('aid'),1);
        }
    }
}

function get_eye_menu(bitmask){
    if(!bitmask){
        return null;
    }
    var view_menu = null;
    // if(bitmask & 1){
    //     var view_menu = [];
    //     var n = 0;
    //     view_menu[n++] = {type: 'heading', text: _js("Themes")};

    //     for(var tm in themes_order){
    //         var t = themes_order[tm];
    //         view_menu[n++] = {type: 'link', icon: global_themes[t].icon, text: global_themes[t].name, title: _js("Hotkey")+': ' + global_themes[t].hotkey, click: "set_theme(" + t + ")", class_name: (theme == t) ? '' : 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_inactive'};
    //     }

    //     // view_menu[n++] = {type: 'link', icon: (high_contrast == 1) ? 'icon-checkmark' : '', text: _js("Contrast mode"), click: "toggle_high_contrast()"};
    // }

    // if(bitmask & 2 && device_type != 'phone'){
    //     view_menu[n++] = {type: 'more'};

    //     view_menu[n++] = {type: 'heading', text: _js("Density")};

    //     view_menu[n++] = {div_id: 'display_density_0', type: 'link', icon: (display_density == 0) ? 'icon-checkmark' : '', text: _js("Comfortable"), click: "set_display_density(0)", dont_close_menu: true};
    //     view_menu[n++] = {div_id: 'display_density_1', type: 'link', icon: (display_density == 1) ? 'icon-checkmark' : '', text: _js("Dense"), click: "set_display_density(1)", dont_close_menu: true};
    //     view_menu[n++] = {div_id: 'display_density_2', type: 'link', icon: (display_density == 2) ? 'icon-checkmark' : '', text: _js("Compact"), click: "set_display_density(2)", dont_close_menu: true};
    //     view_menu[n++] = {div_id: 'display_density_3', type: 'link', icon: (display_density == 3) ? 'icon-checkmark' : '', text: _js("Ultra"), click: "set_display_density(3)", dont_close_menu: true};

    //     view_menu[n++] = {type: 'line'};

    //     view_menu[n++] = {type: 'link', icon: (show_footer == 1) ? 'icon-checkmark' : '', text: _js("Show footer"), click: "toggle_footer()"};
    // }

    return view_menu;
}

function add_content_from_tree(){
    toolbar_action('add',true);
    search_action = 0;
}

function toolbar_action(action,blink,params){
    if(action == 'add'){
        $('#feed_searcher').val('');
    }
    $('#feed_searcher').focus().select();
    if(blink){
        $('#feed_searcher').effect('highlight',{color:'lightblue'});
    }
}

function start_footer(){
    var footer_menu_themes_container = document.createElement("div");
    footer_menu_themes_container.id = "footer_menu_themes_container";
    document.getElementById('fo_tp_buttons_inner').appendChild(footer_menu_themes_container);
    document.getElementById('footer_menu_themes_container').appendChild(inno_toolbar_button('fo_tp_theme_1','<div class="footer_menu_theme_circle" data-theme="1"></div>',_js("Aqua theme"),function(){ set_theme(1); },""));
    document.getElementById('footer_menu_themes_container').appendChild(inno_toolbar_button('fo_tp_theme_2','<div class="footer_menu_theme_circle" data-theme="2"></div>',_js("Light theme"),function(){ set_theme(2); },""));
    document.getElementById('footer_menu_themes_container').appendChild(inno_toolbar_button('fo_tp_theme_3','<div class="footer_menu_theme_circle" data-theme="3"></div>',_js("Sepia theme"),function(){ set_theme(3); },""));
    document.getElementById('footer_menu_themes_container').appendChild(inno_toolbar_button('fo_tp_theme_4','<div class="footer_menu_theme_circle" data-theme="4"></div>',_js("Dark theme"),function(){ set_theme(4); },""));
    // document.getElementById('fo_tp_buttons_inner').appendChild(inno_toolbar_button('fo_tp_shortcuts','<span class="inno_toolbar_button_caption">'+_js("Shortcuts")+'</span>',_js("View a list of keyboard shortcuts")+' ('+_js("Hotkey")+': H)',function(){ dialog('keyboard_shortcuts_dialog') },"inno_toolbar_button inno_toolbar_button_short inno_toolbar_button_dark_caption"));
    // document.getElementById('fo_tp_buttons_inner').appendChild(inno_toolbar_button('fo_tp_plans','<span class="inno_toolbar_button_caption">'+_js("Plans")+'</span>',_js("Upgrade for even more smart features."),function(){ view_upgrade('upgrade/feature/footer_button'); },"inno_toolbar_button inno_toolbar_button_short inno_toolbar_button_dark_caption"));
    $('#fo_tp_theme_' + theme).addClass('current_theme');
}

function get_current_hamburger_icon(docked){
    var icon = '';

    if(user_is_guest){
        icon += 'anon_';
    }

    icon += 'tree_logo_';

    if(docked === undefined){
        docked = tree_docked;
    }

    if(!user_is_guest){
        if(docked == 1){
            icon += 'collapsed_';
        }else{
            icon += 'expanded_';
        }
    }

    if(theme == 1){
        icon += 'aqua';
    }else if(theme == 2){
        icon += 'light';
    }else if(theme == 3){
        icon += 'sepia';
    }else if(theme == 4){
        icon += 'dark';
    }

    if(direction == 'rtl'){
        icon += '_rtl';
    }

    icon += '.png';

    return icon;
}

function get_theme_name(){
    if(theme == 2){
        return 'light';
    }else if(theme == 3){
        return 'sepia';
    }else if(theme == 4){
        return 'dark';
    }
    return 'aqua';
}

function get_anon_tree_discovery_hint_icon(){
    var icon = 'anon_tree_discovery_hint_icon_';

    if(theme == 1){
        icon += 'aqua';
    }else if(theme == 2){
        icon += 'light';
    }else if(theme == 3){
        icon += 'sepia';
    }else if(theme == 4){
        icon += 'dark';
    }

    if(direction == 'rtl'){
        icon += '_rtl';
    }

    icon += '.png';

    return icon;
}

function update_tree_hint_icon(){
    if(!user_is_guest){
        return;
    }
    var icon = get_anon_tree_discovery_hint_icon();
    $('#anon_tree_discovery_hint_icon').attr('src','/images/' + icon);
}

function update_tree_icon_main(){
    var icon = get_current_hamburger_icon(0);
    $('#hamburger_icon_main').attr('src','/images/' + icon);
}

function update_tree_icon_docked(){
    var icon = get_current_hamburger_icon(1);
    $('#hamburger_icon_docked').attr('src','/images/' + icon);
}

function start_toolbar(){
    var hamburger_icon = '<span class="icon-three_stripes_big"></span>';

    document.getElementById('sb_menu_icon').appendChild(inno_toolbar_button('sb_tp_dock',hamburger_icon, _js("Toggle tree pane")+' ('+_js("Hotkey")+': D)',function(){ dock_undock_tree_pane() }));

    if(!user_is_guest){
        var notifications_menu = [];
        notifications_menu[0] = {type: 'link', icon: '', text: _js("No notifications"), click: "no_notifications_popup()", class_name: 'inno_toolbar_button_menu_item notification_no'};

        document.getElementById('sb_rp_notifications').appendChild(inno_toolbar_button('sb_rp_notifications_button','<span class="icon-notifications-menu"></span><div id="global_notifications_badge" class="notifications_badge"></div>', _js("Notifications"), notifications_menu, ""));
    }


    var menu_profile_picture_big = '';
    var menu_profile_email_class = '';
    var menu_profile_email_title = '';

    if(user_confirmed == 0) {
        menu_profile_email_class = 'redlink'
        menu_profile_email_title = 'Email not verified';
        user_email = 'Email not verified<br>' + user_email;
        menu_profile_picture_big = '<i class="icon16 icon-user_unknown graylink" title="Email not verified" style="font-size: 56px; border-radius: 50%; line-height: 46px;"></i>';
    }else {
        menu_profile_email_class = 'graylink_darker'
        user_email = user_email;
        menu_profile_picture_big = '<img src="' + profile_picture.replace(/s=128/,'s=112'); + '">';
    }

    if(user_plan_expire > 0){
        var user_plan_expire_object = new Date(user_plan_expire).toLocaleDateString('en-us', { year:"numeric", month:"short", day:"numeric"})
        user_plan_name_text = sprintf('%s until %s',user_plan_name,user_plan_expire_object);
    }else{
        user_plan_name_text = user_plan_name;
    }

    var html = '<div id="profile_menu_wrapper" class="flex">' +
                    '<div class="profile_menu_user_info_text">' +
                        '<div class="profile_menu_realname">' + user_realname + '</div>' +
                        '<div class="flex"><div class="profile_menu_email ' + menu_profile_email_class + '" title="' + menu_profile_email_title + '">' + user_email + '</div>' +
                        '<div id="profile_menu_notifications" class="notifications_badge notifications_badge_inline"></div></div>' +
                        '<div class="profile_menu_plan_badge graylink_darker">' + user_plan_name_text + '</div>' +
                     '</div>' +
                    '<div class="profile_menu_big_picture ml-3">' +
                        menu_profile_picture_big +
                    '</div>' +
                '</div>' +
            '</div>';

    var menu = [];
    n = 0;

    menu[n++] = {type: 'html', icon: '', content: html};
    menu[n++] = {type: 'line'};
    // menu[n++] = {type: 'link', icon: 'icon-new', text: _js("See what's new"), click: "start_whats_new(1)", class_name: 'inno_toolbar_button_menu_item whatsnew_link'};
    // menu[n++] = {type: 'link', icon: 'icon-covid-icon', text: 'Get local COVID-19 alerts', click: "dialog('covid_dialog')", class_name: 'inno_toolbar_button_menu_item whatsnew_link'};
    menu[n++] = {type: 'link', icon: 'icon-preferences-menu', text: _js("Preferences"), click: "dialog('preferences_dialog');"};
    menu[n++] = {type: 'link', icon: 'icon-plans', text: _js("Plans"), click: "view_upgrade({feature: 'from_menu'})"};
    menu[n++] = {type: 'link', icon: 'icon-mobile-apps', text: _js("Mobile apps"), click: "view_apps();"};
    menu[n++] = {type: 'link', icon: 'icon-contact-support', text: _js("Contact support"), click: "dialog('feedback_dialog');"};

    if(user_confirmed == 1){
        menu[n++] = {type: 'link', icon: 'icon-invite-friend-profile-menu', text: _js("Invite friends"), click: "dialog('invite_friend_dialog');"};
    }

    menu[n++] = {type: 'link', icon: 'icon-logout', text: _js("Sign out"), click: "l('Gear menu','Sign out');document.location.href='/logout'"};

    html = '';
    var html = '<div id="profile_menu_themes_wrapper">';
    html += '<div class="profile_menu_themes_heading">' + _js('Themes') + '</div>';

    if(window.matchMedia){
        html += '<div class="profile_menu_theme_auto" id="profile_menu_auto_dark_theme"><div id="profile_menu_auto_dark_theme_label" data-tippy-content="' + _js('Automatically switch to dark theme based on your current OS theme.') + '">' + _js('Auto dark theme') + '</div><div class="apple-switch-wrapper" id="profile_menu_auto_dark_theme_checkbox_wrapper" data-tippy-content="' + _js('Automatically switch to dark theme based on your current OS theme.') + '"><input id="profile_menu_auto_dark_theme_checkbox" type="checkbox" class="apple-switch" onchange="toggle_auto_dark_theme()"></div></div>';
    }
    html += '<div id="profile_menu_themes_container_wrapper">';
    html += '<div class="profile_menu_themes_container" id="profile_menu_themes_container">';
    html += '<div class="profile_menu_theme" id="profile_menu_theme_1"><div class="profile_menu_theme_circle" data-theme="1"></div><div class="profile_menu_theme_caption">' + _js('Aqua') + '</div></div>';
    html += '<div class="profile_menu_theme" id="profile_menu_theme_2"><div class="profile_menu_theme_circle" data-theme="2"></div><div class="profile_menu_theme_caption">' + _js('Light') + '</div></div>';
    html += '<div class="profile_menu_theme" id="profile_menu_theme_3"><div class="profile_menu_theme_circle" data-theme="3"></div><div class="profile_menu_theme_caption">' + _js('Sepia') + '</div></div>';
    html += '<div class="profile_menu_theme" id="profile_menu_theme_4"><div class="profile_menu_theme_circle" data-theme="4"></div><div class="profile_menu_theme_caption">' + _js('Dark') + '</div></div>';
    html += '</div>';
    html += '</div>';

    menu[n++] = {type: 'html', icon: '', content: html};
    var menu_profile_picture = '';
    if(user_confirmed == 0) {
        menu_profile_picture = '<i class="icon16 icon-user_unknown graylink" title="Email not verified" style="font-size: 28px; border-radius: 50%; line-height: 46px;"></i>';
    }else {
        menu_profile_picture = '<img src="' + profile_picture.replace(/s=128/,'s=48') + '">';
    }
    document.getElementById('sb_rp_gear').appendChild(inno_toolbar_button('sb_rp_settings',menu_profile_picture,_js("Preferences menu"),menu));

    $('#profile_menu_wrapper').on('click',function(){ dialog('preferences_dialog', {set_category: 'preferences_profile'}) });

    $('#sb_rp_gear').append('<div id="sb_rp_gear_notifications" class="notifications_badge"></div>');
    $('.inno_toolbar_button').disableSelection();

    $('#sb_rp_gear_notifications').on('mouseup', function(){ $('#sb_rp_settings').click(); });

    $('#subscriptions_buttons').mousewheel(function(e,delta){
        delta *= e.deltaFactor;
        if($(e.target).parents('.inno_toolbar_button_menu').length){
            return;
        }
        if(view_style == 2){
            var container = $('#three_way_contents');
        }else{
            var container = $('#reader_pane');
        }
        if(delta > 0){
            $(container).finish().scrollTo('-=' + delta + 'px', 250, {axis : 'y', easing:'easeOutQuint' });
        }else{
            delta = delta*-1;
            $(container).finish().scrollTo('+=' + delta + 'px', 250, {axis : 'y', easing:'easeOutQuint' });
        }
    });

    // $('#sb_tp_search_overlay_options').on('mousedown',function(){
    //     search_options_clicked = true;
    // });

    // Begin static section in tree pane

    var tree_sections = [];
    n = 0;
    tree_sections[n++] = {hash: 'today', filter_type: 'today', filter_id: 0};
    tree_sections[n++] = {hash: 'dashboard', filter_type: 'dashboard', filter_id: 0};
    tree_sections[n++] = {hash: 'all_articles', filter_type: '', filter_id: 0};
    tree_sections[n++] = {hash: 'channel', filter_type: 'channel', filter_id: 0};
    tree_sections[n++] = {hash: 'tags', filter_type: 'tags', filter_id: 0};
    tree_sections[n++] = {hash: 'team_tags', filter_type: 'team_tags', filter_id: 0};
    tree_sections[n++] = {hash: 'all_team_tags', filter_type: 'tags', filter_id: 0};
    tree_sections[n++] = {hash: 'tags_dashboard', filter_type: 'tags_dashboard', filter_id: 0};
    tree_sections[n++] = {hash: 'starred', filter_type: 'starred', filter_id: 0};
    tree_sections[n++] = {hash: 'evernote', filter_type: 'evernote', filter_id: 0};
    tree_sections[n++] = {hash: 'onenote', filter_type: 'onenote', filter_id: 0};
    tree_sections[n++] = {hash: 'pocket', filter_type: 'pocket', filter_id: 0};
    tree_sections[n++] = {hash: 'instapaper', filter_type: 'instapaper', filter_id: 0};
    tree_sections[n++] = {hash: 'trending', filter_type: 'trending', filter_id: 0};
    tree_sections[n++] = {hash: 'liked', filter_type: 'liked', filter_id: 0};
    tree_sections[n++] = {hash: 'commented', filter_type: 'commented', filter_id: 0};
    tree_sections[n++] = {hash: 'recent', filter_type: 'recent', filter_id: 0};
    tree_sections[n++] = {hash: 'annotated', filter_type: 'annotated', filter_id: 0};
    tree_sections[n++] = {hash: 'web_pages', filter_type: 'web_pages', filter_id: 0};
    tree_sections[n++] = {hash: 'teams', filter_type: 'teams', filter_id: 0};
    tree_sections[n++] = {hash: 'rules', filter_type: 'rules', filter_id: 0};
    tree_sections[n++] = {hash: 'filters', filter_type: 'filters', filter_id: 0};
    tree_sections[n++] = {hash: 'highlighters', filter_type: 'highlighters', filter_id: 0};
    tree_sections[n++] = {hash: 'library', filter_type: 'library', filter_id: 0};

    for(var i in tree_sections){
        try{
            bind_right_click(tree_sections[i]);
        }catch(e){}
    }

    if(device_type == 'phone'){
        $('#feed_searcher').appendTo('#mobile_search_placeholder').addClass('feed_searcher_phone');
    }

    $('#profile_menu_themes_wrapper').find('.profile_menu_theme_circle').on('click mousedown', function(e){
        set_theme($(this).data('theme'));
        e.stopPropagation();
    });

    $('#fo_tp_buttons_inner').find('.footer_menu_theme_circle').on('click mousedown', function(e){
        set_theme($(this).data('theme'));
        e.stopPropagation();
    });

    profile_menu_select_current_theme();

    tippy_auto_dark_theme_checkbox = tippy('#profile_menu_auto_dark_theme_checkbox_wrapper');
    tippy('#profile_menu_auto_dark_theme_label');
}

function rebuild_toolbar(){
    if(last_toolbar_params == null){
        return;
    }
    build_toolbar(last_toolbar_params);
}

function is_article_section(params){
    if(params == undefined){
        params = feed_params;
    }
    var articles_section = false;
    for(var i in sections_with_articles){
        if(sections_with_articles[i] == params.filter_type){
            return true;
        }
    }
    return false;
}

// Function build_toolbar

function mobile_fullsceren(){
    window.scrollTo(0,1);
}

function tree_menu_mouse_enter(e){
    if(tree_slide_timeout){
        clearTimeout(tree_slide_timeout);
    }
    if(tree_docked == 1){
        if($($('#tree_pane')).is(':animated')){
            $('#tree_pane').stop();
        }
        if(float_left == 'left'){
            $('#tree_pane').animate({left: '0px' }, 250, function(){});
        }else{
            $('#tree_pane').animate({right: '0px' }, 250, function(){});
        }
    }
    if(device_type == 'phone'){
        $('#reader_pane').on('click',function(){
            slide_tree();
        });
    }
}

function slide_tree(){
    if(tree_slide_timeout){
        clearTimeout(tree_slide_timeout);
    }
    var $tree_pane = $('#tree_pane');
    if(tree_docked == 1){
        tree_slide_timeout = setTimeout(function(){
            if($($tree_pane).is(':animated')){
                $tree_pane.stop();
            }
            var tree_width = $tree_pane.outerWidth() + 10; // 10 pixels for the shadow
            if(float_left == 'left'){
                $tree_pane.animate({left: (tree_width *-1) + 'px' }, 250, function(){});
            }else{
                $tree_pane.animate({right: (tree_width *-1) + 'px' }, 250, function(){});
            }
        },50);
    }
    if(device_type == 'phone'){
        $('#reader_pane').off('click');
    }

    if($tree_pane.hasClass('has_been_peeked')){
        $tree_pane.removeClass('has_been_peeked');
        $tree_pane.find('.parent_div_should_be_hidden').each(function(){
            $(this).removeClass('parent_div_should_be_hidden').addClass('parent_div_hidden');
        });
    }
}

function get_selection_offset(element) {
    var start = 0;
    var end = 0;
    var doc = element.ownerDocument || element.document;
    var win = doc.defaultView || doc.parentWindow;
    var sel;
    if (typeof win.getSelection != "undefined") {
        sel = win.getSelection();
        if (sel.rangeCount > 0) {
            var range = win.getSelection().getRangeAt(0);
            var preCaretRange = range.cloneRange();
            preCaretRange.selectNodeContents(element);
            preCaretRange.setEnd(range.startContainer, range.startOffset);
            start = preCaretRange.toString().length;
            preCaretRange.setEnd(range.endContainer, range.endOffset);
            end = preCaretRange.toString().length;
        }
    } else if ( (sel = doc.selection) && sel.type != "Control") {
        var textRange = sel.createRange();
        var preCaretTextRange = doc.body.createTextRange();
        preCaretTextRange.moveToElementText(element);
        preCaretTextRange.setEndPoint("EndToStart", textRange);
        start = preCaretTextRange.text.length;
        preCaretTextRange.setEndPoint("EndToEnd", textRange);
        end = preCaretTextRange.text.length;
    }
    return { start: start, end: end };
}

function set_selection_offset(containerEl, savedSel) {
    var doc = containerEl.ownerDocument, win = doc.defaultView;
    var charIndex = 0, range = doc.createRange();
    range.setStart(containerEl, 0);
    range.collapse(true);
    var nodeStack = [containerEl], node, foundStart = false, stop = false;

    while (!stop && (node = nodeStack.pop())) {
        if (node.nodeType == 3) {
            var nextCharIndex = charIndex + node.length;
            if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {
                range.setStart(node, savedSel.start - charIndex);
                foundStart = true;
            }
            if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {
                range.setEnd(node, savedSel.end - charIndex);
                stop = true;
            }
            charIndex = nextCharIndex;
        } else {
            var i = node.childNodes.length;
            while (i--) {
                nodeStack.push(node.childNodes[i]);
            }
        }
    }

    var sel = win.getSelection();
    sel.removeAllRanges();
    sel.addRange(range);
}

function bind_toolbar_events(init){
    if(init == true){
        // $('#sb_logo').on('click',function(){
        //  focusit('all_articles');
        //  view_all_items();
        // });



        // $('#subscriptions_buttons').on('mouseenter',function(){
        //  if(tree_slide_timeout){
        //      clearTimeout(tree_slide_timeout);
        //  }
        // });

        $(document).on('mousedown',function(e){
            if(article_selection_menu){
                // if(is_article_section() && ($(e.target).parents('#reader_pane')[0] || $(e.target).parents('#article_dialog_wrapper')[0] || $(e.target).parents('#three_way_contents')[0])){
                //if($(e.target).parents('.article_content')[0]){
                if($(e.target).parents('.article_content')[0] || $(e.target).hasClass('article_content')){
                    click_in_article_content = true;
                }else{
                    click_in_article_content = false;
                }
            }

            var loc = get_location_hash();
            if(loc != 'discovery'){
                if(picker_prev_el){
                    if(!$(e.target).parents('#cpicker_wrapper')[0]){
                        close_picker();
                    }
                }
                return;
            }else{
                if($(e.target).parents('#discovery_overlay')[0] || $(e.target).parents('#sb_tp_search_overlay')[0] || $(e.target).parents('#sb_tp_add')[0] || $(e.target).parents('#profile_dialog_wrapper')[0] || $(e.target).attr('id') == 'profile_dialog_modal_overlay' || $(e.target).attr('id') == 'discovery_overlay'){
                    discovery_clicked = true;
                    setTimeout(function(){
                        discovery_clicked = false;
                    },100);
                }else{
                    hide_discovery_overlay(true);
                }
            }
        });

        if(device_type != 'phone'){
            $('#sb_tp_dock').on('mouseenter',function(e){
                tree_menu_mouse_enter(e);
            });

            if(tree_right_click){
                $('#tree_pane').on('contextmenu',function(event){
                    close_opened_menu();
                    $('#tree_pane_menu').show();
                    opened_menu = 'tree_pane';

                    if(direction == 'ltr'){
                        $('#tree_pane_menu').css('top',event.clientY).css('left',(event.clientX + 2) + 'px').css(float_right,'auto').show();
                    }else{
                        $('#tree_pane_menu').css('top',event.clientY).css('right',($(window).width() - event.clientX + 2) + 'px').css(float_right,'auto').show();
                    }
                    fix_menu_position('#tree_pane_menu','right_click');
                    return false;
                });
            }

            $(document).on('mouseup',function(event){
                // remove_feeds_add_menu();
                if(article_selection_menu == 0){
                    return;
                }
                if(click_in_article_content == false){
                    return;
                }
                var article_id = get_aid();

                if(!article_id){
                    return;
                }

                var selection = get_text_selection();
                var selection_lowercase_html = selection.html.toLowerCase();
                if(selection && selection.text != '' && selection.html != '' && $.trim(selection.html) != '' && $.trim(selection.html).length > 1
                   // &&
                   // selection_lowercase_html.indexOf('<img') === -1 &&
                   // selection_lowercase_html.indexOf('<iframe') === -1 &&
                   // selection_lowercase_html.indexOf('<table') === -1 &&
                   // selection_lowercase_html.indexOf('<tr') === -1 &&
                   // selection_lowercase_html.indexOf('<td') === -1
                   ){
                    selection.text = $.trim(selection.text).replace(/(\r\n|\n|\r|\t)/gm,' ');

                    if(typeof selection_cache != 'undefined' && selection.text == selection_cache){
                        selection_cache = null;
                        return;
                    }

                    selection_cache = selection.text;

                    selection.html = $.trim(selection.html).replace(/(\r\n|\n|\r|\t)/gm,' ');
                    close_opened_menu();

                    if($('#list_menu')[0]){
                        $('#list_menu').remove();
                    }

                    setTimeout(function(){
                        var shield_icon = '';
                        if(!user_access[access_pro]){
                            shield_icon = ' <span class="icon14 icon-shield icon-yellow" title="' + _js('This feature is only available to Pro users') + '"></span>';
                        }

                        var menu = [];
                        var n = 0;
                        var article_url = get_article_url(article_id);
                        var article_title = $('#article_title_link_' + article_id).text();
                        var translate_locale = (locale == 'zh_CN') ? 'zh-CN' : locale.substr(0,2);

                        menu[n++] = {type: 'heading', text: htmlentities(selection.text)};

                        // if(!$('#article_contents_inner_' + article_id).hasClass('translated') && !$('#article_contents_inner_' + article_id).hasClass('mobilized')){
                        //     menu[n++] = {type: 'link', text: _js("Annotate selection") + shield_icon, click: "new_annotation(" + article_id + ");close_opened_menu();", click_is_mousedown: true};
                        // }else{
                        //     menu[n++] = {type: 'link', text: _js("Annotate selection") + shield_icon, click: '', click_is_mousedown: true, class_name: 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_disabled', title: _js('Cannot annotate mobilized or translated articles.')};
                        // }

                        menu[n++] = {type: 'link', text: _js("Annotate selection") + shield_icon, click: "new_annotation(" + article_id + ");close_opened_menu();", click_is_mousedown: true};
                        menu[n++] = {type: 'link', text: _js("Create highlighter"), click: "edit_highlighter(0,'" + selection.text.replace(/'/g, "\\'") + "');"};

                        if($('#article_' + article_id).hasClass('article_subscribed')){
                            menu[n++] = {type: 'link', text: _js("Create rule") + shield_icon, click: "add_rule({rule_id:0, filter_type: 2, filter_id: " + $('#article_' + article_id).data('suid') + ", rule_conditions: [{match_field: 1, match_type: 0, match_text:'" + htmlentities(selection.text) + "'}], rule_type: 1})"};
                        }

                        menu[n++] = {type: 'line'};
                        menu[n++] = {type: 'link', text: sprintf(_js("Search in %s"),application_name), click: "do_search_from_selection('" + selection.text.replace(/'/g, "\\'") + "');"};
                        menu[n++] = {type: 'link', text: sprintf(_js("Search in %s"),"Google") + ' <span class="icon14 icon-new_tab icon_gray" style="top:2px;"></span>', click: "window.open('https://www.google.com/search?q=" + encodeURIComponent(selection.text).replace(/'/g, "%27").replace(/%20/g, '+') + "');"};
                        menu[n++] = {type: 'link', text: _js("Tweet selection"), click: "open_share_window('https://twitter.com/intent/tweet?original_referer=http%3A%2F%2Fwww.inoreader.com%2F&related=inoreader&text=" + encodeURIComponent(selection.text).replace(/'/g, "%27") + "&via=Inoreader&url=" + encodeURIComponent(article_url).replace(/'/g, "%27") + "',550,260);"};
                        menu[n++] = {type: 'link', text: _js("Evernote selection"), click: "evernote_selection('" + htmlentities(selection.html) + "','" + htmlentities(article_title) + "','" + article_url + "')"};

                        menu[n++] = {type: 'line'};
                        menu[n++] = {type: 'link', text: _js("Disable this menu"), click: "disable_article_selection_menu();"};

                        document.body.appendChild(inno_toolbar_button(false,false,'',menu));
                        if(direction == 'ltr'){
                            $('#list_menu').css('top',event.clientY).css('left',(event.clientX + 2) + 'px').css(float_right,'auto').show();
                        }else{
                            $('#list_menu').css('top',event.clientY).css('right',($(window).width() - event.clientX + 2) + 'px').css(float_right,'auto').show();
                        }
                        opened_menu = 'list';
                        fix_menu_position('#list_menu');
                        $('#list_menu').on('click',function(){
                            selection_cache = null;
                        });
                    },20);
                }
            });
        }else{
            $('#sb_rp_show').on('click',function(){
                if($('#tree_pane').is(':animated')){
                    $('#tree_pane').stop();
                }

                var sidebar_is_hidden = false;
                if(float_left == 'left'){
                    sidebar_is_hidden = $('#tree_pane').position().left < 0;
                }else{
                    sidebar_is_hidden = $('#tree_pane').position().left > $(document).width() - $('#tree_pane').width();
                }

                if(sidebar_is_hidden){
                    tree_menu_mouse_enter();
                }else{
                    slide_tree();
                }
            });

            $('#tree_pane').on('click','.parent_div_link',function(event){
                slide_tree();
            });
        }

        $('#feed_searcher').on('blur',function(){
            $(this).attr('placeholder',_js("Search"));
        });

        $('#feed_searcher').on('focus',function(){
            search_action = 1;
            $(this).attr('placeholder',_js("Start typing or paste URL ..."));
        });


        // $('#feed_searcher').on('keydown',function(event){
        //     setTimeout(function(){
        //         var term = $.trim($('#feed_searcher').val());
        //         if(!term){
        //             return;
        //         }

        //         if(!is_url(term)){
        //             open_searcher({tab: 'subscriptions'});
        //             $('#searcher_input').val(term).focus().click();
        //         }
        //     },0);
        // });


        // $('#subscription_options_tick').on('mouseup contextmenu',function(event){
        //     setTimeout(function(){
        //        open_subscriptions_options_menu();
        //    },0);
        // });

        if($('#subscription_options_peek')[0]){
            $('#subscription_options_peek').on('click',function(event){
                hidden_sections_peek();
            });
        }

        // $('#subscription_options_add').on('click',function(event){
        //     toggle_subscriptions_add_menu();
        // });

        // This is to work around mouse up/down events toggling the menu
        // $('#subscription_options_add').on('mousedown',function(event){
        //     if($('#subscriptions_add_menu').hasClass('subscriptions_add_menu_showed')){
        //         $('#subscription_options_add').addClass('subscription_options_add_menu_removed');
        //     }
        // });

        // if(!check_user_visit(2)){
        //     $('#subscription_options_add').addClass('not_visited');
        //     document.getElementById('subscription_options_add').appendChild(create_dom_element('span', {
        //         id: 'tp_visit_dot_add',
        //         className: 'visit_dot',
        //         dataset: {tippyContent: _js('Add content from here') },
        //         onclick: function(){ toggle_subscriptions_add_menu(); set_user_visits(2); $('#tp_visit_dot_add').remove(); }
        //     }));
        //     tippy('#tp_visit_dot_add', { theme: 'add-menu', /*hideOnClick: false,*/ placement: 'right', arrow: false, animation: 'slide-' + float_right });
        // }
    }
}

function edit_note(id,article_id,scroll_to_top){
    var params = {};
    params.id = id;
    params.article_id = article_id;
    params.scroll_to_top = scroll_to_top;
    params.content = '';
    if(id){
        var annotations = $('#article_' + article_id).data('annotations');
        for(var i in annotations){
            if(annotations[i].id == id){
                if(annotations[i].readwise_book_id != 0){
                    params.content += '<div class="graylink_darker edit_annotation_hint readwise_hint">';
                    params.content += sprintf(_js('View in %s'),'Readwise.io') + ': <a target="_blank" class="underlink" href="https://readwise.io/bookreview/' + annotations[i].readwise_book_id + '">readwise.io/bookreview/' + annotations[i].readwise_book_id + '</a>';
                    params.content += '</div>';
                }
                if(annotations[i].text){
                    params.content += '<div class="article_annotation_text"><mark class="article_annotation_inline">' + annotations[i].text + '</mark></div>';
                }
            }
        }
    }

    params.content += '<textarea id="annotation_note" placeholder="'+_js("Save your thoughts...")+'"></textarea>';

    if(id == 0){
        params.content += '<div class="graylink_darker edit_annotation_hint">';
        params.content += _js("You can also select a section of the article to annotate it.");
        params.content += '</div>';
    }

    params.content += '<div class="graylink_darker edit_annotation_private_hint">';
    params.content += '<span class="icon14 icon-rule-locked icon_gray"></span> ' + _js('Your notes are private.');
    params.content += '</div>';

    dialog('article_note_dialog',params);

    if(id){
        $('#article_note_dialog_buttonbar').prepend('<div class="flex_vertical_center"><div><button onclick="delete_annotation(' + id + ')" class="redbutton redbutton_outline">' + _js('Delete') + '</button></div></div>');
        for(var i in annotations){
            if(annotations[i].id == id){
                $('#annotation_note').val(annotations[i].note);
            }
        }
    }

    $('#annotation_note').focus().select();
}

function save_note(id, article_id,scroll_to_top){
    var note = $('#annotation_note').val();
    if(!note){
        if(id){
            var annotations = $('#article_' + article_id).data('annotations');
            for(var i in annotations){
                if(annotations[i].id == id){
                    if(!annotations[i].text){
                        return;
                    }
                }
            }
        }else{
            return;
        }
    }

    do_loading();
    inno_dialog_close('article_note_dialog');
    if(id){
        xajax_edit_annotation(id, note);
    }else{
        xajax_new_annotation(article_id, 0, 0, '', note, scroll_to_top);
    }
}

function new_annotation(article_id){
    if(!user_access[access_pro]){
        show_annotations_upgrade_dialog();
        return;
    }
    var selection_offsets = get_selection_offset(document.getElementById('article_contents_inner_' + article_id));
    var text = $.trim(rangy.getSelection().toString().replace(/(\r\n|\n|\r|\t)/gm,' '));
    if(!text){
        return;
    }
    var highlighter = rangy.createHighlighter();
    highlighter.addClassApplier(rangy.createClassApplier('article_annotation_inline', {
        elementTagName: 'mark',
        tagNames: ['*']
    }));

    highlighter.highlightSelection('article_annotation_inline');
    rangy.getSelection().removeAllRanges();

    xajax_new_annotation(article_id, selection_offsets.start, selection_offsets.end, text);
}

function annotations_change_callback(article_id, annotations, scroll_to_top){
    $('#article_' + article_id).data('annotations', annotations);
    build_article_annotations(article_id);
    apply_annotations_preview(article_id,true);

    if(scroll_to_top){
        if(view_style == 2){
            $('#three_way_contents').scrollTo('0px', 250, {easing:'easeOutQuint'});
        }else if(view_style == 3 || view_style == 4){
            $('#article_dialog').scrollTo('0px', 250, {easing:'easeOutQuint'});
        }else{
            scroll_to_article(article_id,false,true);
        }
    }
}

function show_annotations_upgrade_dialog(){
    var content = '';
    content += '<div class="annotations_upgrade_h1">' + _js('Become an active reader with Annotations') + '</div>';
    content += '<div class="annotations_upgrade_h2 graylink_darker">' + _js('Highlight essential sections in your articles, add your own notes and quickly revisit them later.') + '</div>';
    content += '<img class="annotations_upgrade_pic" src="/images/annotations_upgrade-' + get_theme_name() + '.png">';
    dialog('annotations_upgrade_dialog',{content: content});

    $('#annotations_upgrade_dialog_buttonbar').prepend('<div class="flex_vertical_center"><div class="annotations_upgrade_dialog_hint">' + _js('This feature is only available to Pro users.') + '</div></div>');

    $('#annotations_upgrade_dialog_buttonbar_container').find('.inno_dialog_buttonbar_button').eq(0).addClass('greenbutton').focus();
}

function get_line_height(el) {
    var temp = document.createElement(el.nodeName), ret;
    temp.setAttribute("style", "margin:0; padding:0; "
        + "font-family:" + (el.style.fontFamily || "inherit") + "; "
        + "font-size:" + (el.style.fontSize || "inherit"));
    temp.innerHTML = "A";

    el.parentNode.appendChild(temp);
    ret = temp.clientHeight;
    temp.parentNode.removeChild(temp);

    return ret;
}

function clear_article_annotations(id){
    $('#article_annotations_' + id).html('').hide();
    $('#article_annotations_markers_' + id).html('');
    clear_article_inline_annotations(id);
}

function clear_article_inline_annotations(id){
    $('#article_contents_inner_' + id).find('.article_annotation_inline').each(function(){
        $(this)[0].outerHTML = $(this).html();
    });
}

function build_article_annotations(id){
    if(!id){
        id = get_aid();
    }
    if(!id){
        return;
    }

    var bar = document.getElementById('article_annotations_' + id);
    if(!bar){
        return;
    }

    bar.innerHTML = '';
    bar.style.display = 'block';

    var markers_div = document.getElementById('article_annotations_markers_' + id);
    markers_div.innerHTML = '';

    var annotations = $('#article_' + id).data('annotations');
    if(!annotations || annotations.length == 0){
        clear_article_annotations(id);
        return;
    }

    var $article_contents_inner = $('#article_contents_inner_' + id);
    // if($article_contents_inner.hasClass('mobilized') || $article_contents_inner.hasClass('translated')){
    //     clear_article_annotations(id);
    //     return;
    // }

    clear_article_inline_annotations(id);

    var floating_buttons_shown = false;
    var article_line_height = parseInt($article_contents_inner.css('line-height'));

    bar.appendChild(create_dom_element('div',
    {
        className: 'article_annotation_header',
        innerHTML: '<div class="flex_grow article_annotation_header_text">' + _js('Notes & annotations') + '</div><div><a href="javascript:void(0);" onclick="edit_note(0,' + id + ')" class="article_annotations_create_note_link bluelink">' + _js('Create note') + '</a></div>'
    }));

    var parent_offset = $('#article_annotations_markers_' + id).offset().top;
    var taken_coords = [];

    for(var i in annotations){
        var a = annotations[i];
        // Build highlight
        if((a.start > 0 || a.end > 0) && user_access[access_pro]){
            set_selection_offset(document.getElementById('article_contents_inner_' + id), {start: a.start, end: a.end});

            var highlighter = rangy.createHighlighter();
            highlighter.addClassApplier(rangy.createClassApplier('article_annotation_inline', {
                elementTagName: 'mark',
                tagNames: ['*'],
                elementProperties: {
                    className: 'article_annotation_highlight_' + a.id
                }
            }));
            highlighter.highlightSelection('article_annotation_inline');
            rangy.getSelection().removeAllRanges();

            // Build floating marker
            if(resize_observer && device_type != 'phone'){
                floating_buttons_shown = true;
                var $first_mark = $article_contents_inner.find('.article_annotation_highlight_' + a.id).eq(0);
                var mark_top = Math.floor($first_mark.offset().top - parent_offset);

                for(var c in taken_coords){
                    if(taken_coords[c] == mark_top){
                        mark_top += article_line_height;
                    }
                }

                taken_coords.push(mark_top);

                var marker_wrapper = create_dom_element('div',
                {
                    id: 'article_annotation_marker_' + a.id,
                    className: 'article_annotation_marker_wrapper',
                    innerHTML: '<span class="icon16 icon_gray icon-annotation"></span>',
                    style: {top: mark_top + 'px'},
                    dataset: {id: a.id},
                    onclick: function(){ edit_note(this.dataset.id, id) },
                    onmouseover: function(){ $article_contents_inner.find('.article_annotation_highlight_' + this.dataset.id).addClass('article_annotation_inline_highlighted'); },
                    onmouseout: function(){ $article_contents_inner.find('.article_annotation_highlight_' + this.dataset.id).removeClass('article_annotation_inline_highlighted'); }
                });

                markers_div.appendChild(marker_wrapper);

                if(a.note){
                    var tippy_content = '<div class="annotation_tipy_upper">';
                    tippy_content += '<div class="article_annotation_author_picture"><img src="' + a.user_profile_picture + '"></div>';
                    tippy_content += a.note;
                    tippy_content += '</div>';
                    tippy_content += '<div class="annotation_tipy_lower graylink"><a class="underlink_hover" href="javascript:void(0);" onclick="edit_note(' + a.id + ', ' + id + ')">' + _js('Edit') + '</a> &nbsp;&bull;&nbsp; <a class="underlink_hover" href="javascript:void(0);" onclick="delete_annotation(' + a.id + ')">' + _js('Delete') + '</a></div>';
                    tippy(marker_wrapper, { theme: 'annotation-tippy', placement: float_left, arrow: true, animation: 'slide-' + float_right, content: tippy_content, interactive: true });
                }else{
                    tippy(marker_wrapper, { theme: 'annotation-tippy-basic', placement: float_left, arrow: true, animation: 'slide-' + float_right, content: _js('Click to add a note') });
                }
            }
        }

        // Build note

        var note_wrapper = create_dom_element('div',
        {
            id: 'article_annotation_' + a.id,
            className: 'article_annotation_wrapper',
            dataset: {id: a.id}
        });

        note_wrapper.appendChild(create_dom_element('div',
        {
            className: 'article_annotation_author_picture',
            innerHTML: '<a href="javascript:void(0);" onclick="show_dialog(\'profile_dialog\',{user_id: ' + a.user_id + '});" title="' + a.user_name + '"><img src="' + a.user_profile_picture + '"></a>'
        }));

        note_wrapper.appendChild(create_dom_element('div',
        {
            className: 'article_annotation_author_name',
            innerHTML: '<a href="javascript:void(0);" onclick="show_dialog(\'profile_dialog\',{user_id: ' + a.user_id + '});" title="' + a.user_name + '">' + a.user_name + '</a>'
        }));

        if(a.note){
            note_wrapper.appendChild(create_dom_element('div',
            {
                className: 'article_annotation_note',
                innerHTML: tolink(nl2br(a.note))
            }));
        }

        if(a.text){
            note_wrapper.appendChild(create_dom_element('div',
            {
                className: 'article_annotation_text',
                innerHTML: '<a href="javascript:void(0);" onclick="scroll_to_annotation(' + a.id + ',' + id + ')"><mark class="article_annotation_inline">' + tolink(a.text) + '</mark></a>'
            }));
        }

        var edit_action = (a.note == '') ? _js('Add note') : _js('Edit');
        var scroll_link = (a.text == '') ? '' : ' &nbsp;&bull;&nbsp; <a class="underlink_hover" href="javascript:void(0);" onclick="scroll_to_annotation(' + a.id + ', ' + id + ')">' + _js('Scroll to highlight') + '</a>';

        var readwise_link = (a.readwise_book_id == 0) ? '' : ' &nbsp;&bull;&nbsp; <a target="_blank" class="underlink_hover" href="https://readwise.io/bookreview/' + a.readwise_book_id + '">' + sprintf(_js('View in %s'),'Readwise.io') + '</a>';

        note_wrapper.appendChild(create_dom_element('div',
            {
                className: 'article_annotation_controls graylink',
                innerHTML: '<span>' + a.added_on_text + '<span> &nbsp;&bull;&nbsp; <a class="underlink_hover" href="javascript:void(0);" onclick="edit_note(' + a.id + ', ' + id + ')">' + edit_action + '</a> &nbsp;&bull;&nbsp; <a class="underlink_hover" href="javascript:void(0);" onclick="delete_annotation(' + a.id + ')">' + _js('Delete') + '</a>' + scroll_link + readwise_link
            }));

        bar.appendChild(note_wrapper);
    }

    if(floating_buttons_shown){
        resize_observer.observe(document.getElementById('article_contents_inner_' + id));
    }
}

function scroll_to_annotation(id,article_id){
    var $first_mark = $('#article_contents_inner_' + article_id).find('.article_annotation_highlight_' + id).eq(0);
    if($first_mark){
        var top_offset = 0;
        if($('#article_footer_placeholder_middle_' + article_id).hasClass('article_footer_placeholder_middle_sticky')){
            top_offset -= $('#article_footer_placeholder_middle_' + article_id).outerHeight();
        }else if($('#article_footer_placeholder_top_' + article_id).hasClass('footerized')){
            top_offset -= $('#article_footer_placeholder_top_' + article_id).outerHeight();
        }

        if(view_style == 2){
            var $container = $('#three_way_contents');
        }else if(view_style == 3 || view_style == 4){
            var $container = $('#article_dialog');
        }else{
            var $container = $('#reader_pane');
        }

        $container.scrollTo($first_mark, 250, {axis : 'y', offset: {top: top_offset, left: 0}, easing:'easeOutQuint' });
    }
}

function highlight_annotation(id,article_id){
    $('#article_contents_inner_' + article_id).find('.article_annotation_highlight_' + id).each(function(){
        $(this).animate({outline: 3});
    });
}

function check_annotations_markers(id){
    var annotations = $('#article_' + id).data('annotations');
    if(!annotations || annotations.length == 0){
        return;
    }

    if(device_type == 'phone'){
        return;
    }

    if($('#article_contents_inner_' + id).hasClass('mobilized') || $('#article_contents_inner_' + id).hasClass('translated')){
        return;
    }

    var article_line_height = parseInt($('#article_contents_inner_' + id).css('line-height'));

    var parent_offset = $('#article_annotations_markers_' + id).offset().top;
    var taken_coords = [];
    for(var i in annotations){
        var a = annotations[i];
        if(a.start > 0 || a.end > 0){
            var $marker = $('#article_annotation_marker_' + a.id);
            if($marker){
                var $first_mark = $('#article_contents_inner_' + id).find('.article_annotation_highlight_' + a.id).eq(0);
                var mark_top = Math.floor($first_mark.offset().top - parent_offset);
                for(var c in taken_coords){
                    if(taken_coords[c] == mark_top){
                        mark_top += article_line_height;
                    }
                }

                if(mark_top != parseInt($marker.css('top'))){
                    $marker.css({top: mark_top + 'px'});
                }

                taken_coords.push(mark_top);
            }
        }
    }
}

function delete_annotation(id){
    xconfirm(_js("Are you sure?"),'delete_annotation_do(' + id + ');');
}

function delete_annotation_do(id){
    inno_dialog_close('article_note_dialog');
    xajax_delete_annotation(id);
}

function apply_annotations_preview(id,full){
    var found = false;
    var annotations = $('#article_' + id).data('annotations');
    if(annotations){
        for(var i in annotations){
            if(annotations[i].text){
                var $ar = $('#article_short_contents_' + id);
                var html = '<span class="annotations_preview_icon_wrapper"><span class="icon10 icon_gray icon-annotation"></span></span> &nbsp;<span class="annotations_preview_text ">' + annotations[i].text + '</span>';
                if(!$ar.data('og')){
                    $ar.data('og', $ar.html());
                }
                $ar.html(html);
                found = true;
                break;
            }else if(annotations[i].note){
                var $ar = $('#article_short_contents_' + id);
                var html = '<span class="annotations_preview_image_wrapper"><img src="' + annotations[i].user_profile_picture + '"></span> &nbsp;<span class="annotations_preview_text">' + annotations[i].note + '</span>';
                if(!$ar.data('og')){
                    $ar.data('og', $ar.html());
                }
                $ar.html(html);
                found = true;
                break;
            }
        }
    }

    if(full && !found){
        var $ar = $('#article_short_contents_' + id);
        if($ar.data('og')){
            $ar.html($ar.data('og').toString());
        }
    }

    if(found){
        $('#article_' + id).addClass('article_has_visible_annotations');
    }else{
        $('#article_' + id).removeClass('article_has_visible_annotations');
    }
}

function tolink(text) {
    return text.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig, '<a target="_blank" rel="noopener" class="bluelink underlink" href="$1">$1</a>');
}

function remove_feeds_add_menu(){
    $('#add_content_simulated_button').removeClass('expanded');
    $('#add_content_simulated_button_menu').hide();
    $('#add_content_simulated_button').find('.icon-expand-arrow').show();
    $('#add_content_simulated_button').find('.icon-collapse-arrow').hide();
}

function toggle_feeds_add_menu(){
    if(!$('#add_content_simulated_button').hasClass('expanded')){
        $('#add_content_simulated_button').addClass('expanded');
        $('#add_content_simulated_button').find('.icon-expand-arrow').hide();
        $('#add_content_simulated_button').find('.icon-collapse-arrow').show();
        $('#add_content_simulated_button_menu').show();

        scroll_to_add_menu();
    }else{
        $('#add_content_simulated_button').removeClass('expanded');
        $('#add_content_simulated_button_menu').hide();
        $('#add_content_simulated_button').find('.icon-expand-arrow').show();
        $('#add_content_simulated_button').find('.icon-collapse-arrow').hide();
    }
}

function scroll_to_add_menu(){
    var el = '#add_content_simulated_button_bottom_anchor';
    var bottom = $(el).position().top - $('#tree_pane').height() + $('#subscriptions_nav').outerHeight();
    var height = $('#tree_pane')[0].scrollTop;
    var top = $(el).position().top - height;
    if(bottom > height || top < 0){
        $('#tree_pane').scrollTo(bottom + 20, 500, {axis : 'y' });
    }
}

function toggle_subscriptions_add_menu(){
    if($('#subscription_options_add').hasClass('subscription_options_add_menu_removed')){
        $('#subscription_options_add').removeClass('subscription_options_add_menu_removed');
        return;
    }

    l('Sidebar add content','plus circle');
    if(!$('#subscriptions_add_menu')[0]){
        var menu = document.createElement('div');
        menu.id = 'subscriptions_add_menu';

        var line_feed = document.createElement('div');
        line_feed.className = 'subscriptions_add_menu_item';
        line_feed.title = _js('Add Feed');
        var line_feed_icon = document.createElement('span');
        line_feed_icon.className = 'subscriptions_add_menu_item_icon icon19 icon-add-menu-feed';
        line_feed.appendChild(line_feed_icon);
        line_feed.onmousedown = function(){ remove_feeds_add_menu(); open_searcher({tab: 'feeds', term: ''}); l('Add content menu','Add feed'); }

        var line_newsletter = document.createElement('div');
        line_newsletter.className = 'subscriptions_add_menu_item';
        line_newsletter.title = _js('Add Newsletter');
        var line_newsletter_icon = document.createElement('span');
        line_newsletter_icon.className = 'subscriptions_add_menu_item_icon icon19 icon-add-menu-newsletter';
        line_newsletter.appendChild(line_newsletter_icon);
        line_newsletter.onmousedown = function(){ remove_feeds_add_menu(); add_newsletter_inline(); l('Add content menu','Add newsletter'); }

        var line_tag = document.createElement('div');
        line_tag.className = 'subscriptions_add_menu_item';
        line_tag.title = _js('Add Tag');
        var line_tag_icon = document.createElement('span');
        line_tag_icon.className = 'subscriptions_add_menu_item_icon icon19 icon-add-menu-tag';
        line_tag.appendChild(line_tag_icon);
        line_tag.onmousedown = function(){ remove_feeds_add_menu(); add_folder(0,'',true); l('Add content menu','Add tag'); }

        var line_folder = document.createElement('div');
        line_folder.className = 'subscriptions_add_menu_item';
        line_folder.title = _js('Add Folder');
        var line_folder_icon = document.createElement('span');
        line_folder_icon.className = 'subscriptions_add_menu_item_icon icon19 icon-add-menu-folder';
        line_folder.appendChild(line_folder_icon);
        line_folder.onmousedown = function(){ remove_feeds_add_menu(); add_folder(0,'',false); l('Add content menu','Add folder'); }

        var line_rule = document.createElement('div');
        line_rule.className = 'subscriptions_add_menu_item';
        line_rule.title = _js('Add Rule');
        var line_rule_icon = document.createElement('span');
        line_rule_icon.className = 'subscriptions_add_menu_item_icon icon19 icon-create-rule';
        line_rule.appendChild(line_rule_icon);
        line_rule.onmousedown = function(){ remove_feeds_add_menu(); add_rule({ rule_type: 1 }); l('Add content menu','Add rule'); }

        var line_corona = document.createElement('div');
        line_corona.className = 'subscriptions_add_menu_item';
        line_corona.title = 'Add COVID-19 Alert';
        var line_corona_icon = document.createElement('span');
        line_corona_icon.className = 'subscriptions_add_menu_item_icon icon19 icon-covid-icon';
        line_corona.appendChild(line_corona_icon);
        line_corona.onmousedown = function(){ remove_feeds_add_menu(); dialog('covid_dialog'); l('Add content menu','Add covid-19 alert'); }


        menu.appendChild(line_feed);
        menu.appendChild(line_newsletter);
        menu.appendChild(line_tag);
        menu.appendChild(line_folder);
        menu.appendChild(line_corona);
        // menu.appendChild(line_rule);

        var menu_arrow = document.createElement('div');
        menu_arrow.id = 'subscriptions_add_menu_triangle' + rtl_suffix;

        document.body.appendChild(menu);
        document.body.appendChild(menu_arrow);

        var get_item_title = function(reference){
            var title = reference.getAttribute('title');
            reference.removeAttribute('title');
            return title;
        }

        tippy('#subscriptions_add_menu .subscriptions_add_menu_item', { theme: 'add-menu', placement: 'right', arrow: false, animation: 'slide-' + float_right, content: get_item_title });

        $("#subscriptions_add_menu").on('transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd', function(){
            if(!($(this).hasClass('subscriptions_add_menu_showed'))){
                $(this).hide();
                $('#subscriptions_add_menu_triangle' + rtl_suffix).hide();
            }
        });
    }

    if(!$('#subscriptions_add_menu').hasClass('subscriptions_add_menu_showed')){
        fix_subscriptions_options_add_menu_position();
        $('#subscription_options_add').addClass('subscription_options_add_open');
        $('#subscriptions_add_menu').show().addClass('subscriptions_add_menu_showed');
        $('#subscriptions_add_menu_triangle' + rtl_suffix).show().addClass('subscriptions_add_menu_triangle_showed');
    }
}

var prev_top_offset_triangle = 0;

function fix_subscriptions_options_add_menu_position(){
    var triangle_top_cutoff = 22;
    var pos = $('#subscription_options_add').offset();
    var top_offset = pos.top - ($('#subscriptions_add_menu').height()/2);
    var top_offset_triangle = pos.top - 3;

    if(direction == 'rtl'){
        var left_offset = pos.left - $('#subscriptions_add_menu').width() - 10;
        var left_offset_triangle = pos.left - 10;
    }else{
        var left_offset = pos.left + 27 + 10;
        var left_offset_triangle = pos.left + 27;
    }


    if(top_offset < 48){
        top_offset = 48;
    }

    if(top_offset_triangle < triangle_top_cutoff && prev_top_offset_triangle >= triangle_top_cutoff){
        $('#subscriptions_add_menu_triangle' + rtl_suffix).addClass('subscriptions_add_menu_triangle_hidden');
    }else if(top_offset_triangle >= triangle_top_cutoff && prev_top_offset_triangle < triangle_top_cutoff){
        $('#subscriptions_add_menu_triangle' + rtl_suffix).removeClass('subscriptions_add_menu_triangle_hidden');
    }
    prev_top_offset_triangle = top_offset_triangle;

    $('#subscriptions_add_menu').css({top: top_offset, left: left_offset});
    $('#subscriptions_add_menu_triangle' + rtl_suffix).css({top: (top_offset_triangle < top_offset+2 ? top_offset+2 : top_offset_triangle), left: left_offset_triangle});
}

function hidden_sections_peek(){
    $('#tree_pane').find('.parent_div_hidden').each(function(){
        $(this).addClass('parent_div_should_be_hidden').removeClass('parent_div_hidden');
    });
    $('#tree_pane').addClass('has_been_peeked');
}

function disable_article_selection_menu(){
    xconfirm(_js("Are you sure?")+'<p>'+_js("You can enable this menu again from Preferences -> Interface.")+'</p>','disable_article_selection_menu_exec()');
}

function disable_article_selection_menu_exec(){
    article_selection_menu = 0;
    xajax_save_user_pref('article_selection_menu',0);
}

function open_centered_popup(a, w, h) {
    var b = window.screenLeft != undefined ? window.screenLeft : screen.left;
    var c = window.screenTop != undefined ? window.screenTop : screen.top;
    width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
    height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;
    var d = ((width / 2) - (w / 2)) + b;
    var e = ((height / 2) - (h / 2)) + c;
    var f = window.open(a, new Date().getTime(), 'width=' + w + ', height=' + h + ', top=' + e + ', left=' + d + 'location=yes,resizable=yes,status=no,scrollbars=no,personalbar=no,toolbar=no,menubar=no');
    if (window.focus) {
        f.focus()
    }
    return f;
}

function do_search_from_selection(term){
    $('#feed_searcher').val(term);
    do_search();
}

function set_loc(replace){
    if(disable_set_loc){
        return;
    }
    hash_disabled = true;
    setTimeout(function(){
        hash_disabled = false;
    },100);
    var hash = '';

    if(!feed_params.filter_type){
        hash = 'all_articles';
    }else{
        if(feed_params.filter_type == 'profile'){
            hash = 'u';
        }else{
            hash = feed_params.filter_type;
        }
        if(feed_params.filter_type == 'folder' || feed_params.filter_type == 'subscription' || feed_params.filter_type == 'feed' || feed_params.filter_type == 'bundle' || feed_params.filter_type == 'team_folder'){
            hash += '/' + feed_params.filter_id;

        }else if(feed_params.filter_type == 'article'){
            hash += '/' + feed_params.filter_id;
            if(feed_params.search_comment){
                hash += '/comment/' + feed_params.search_comment;
            }
        }else if(feed_params.filter_type == 'search'){
            if(discovery_params.tab == 'subscriptions'){
                hash += '/articles';
            }else{
                hash += '/' + discovery_params.tab;
            }
            if(discovery_params.term){
                hash += '/' + encodeURIComponent(discovery_params.term);
            }else if(discovery_params.tab == 'feeds' && discovery_params.section_id){
                for(var i in catalogs){
                    if(catalogs[i].id == discovery_params.section_id){
                        hash += '/category/' + encodeURIComponent(catalogs[i].title).toLowerCase();
                        break;
                    }
                }
            }
        }else if(feed_params.filter_type == 'old_search'){
            hash += '/' + encodeURIComponent(feed_params.search_term);
            if(search_options == 4){
                hash += '/public';
            }else if(search_options == 2){
                hash += '/people';
            }else if(search_options == 5){
                hash += '/bundles';
            }else if(search_options == 6){
                hash += '/twitter';
            }else if(search_options == 7){
                hash += '/google_plus';
            }else if(search_options == 8){
                hash += '/google_news';
            }else if(search_options == 9){
                hash += '/facebook_pages';
            }
        }else if(feed_params.filter_type == 'profile'){
            hash += '/' + feed_params.filter_id;
            if(feed_params.channel_section){
                hash += '/' + feed_params.channel_section;
            }
        }else if(feed_params.filter_type == 'trending'){
            if(feed_params.trending_tab){
                hash += '/' + feed_params.trending_tab;
            }

        }else if(feed_params.filter_type == 'today'){
            if(feed_params.today_tab){
                hash += '/' + feed_params.today_tab;
            }
        }else if(feed_params.filter_type == 'discovery'){
            if(discovery_params && discovery_params.filter){
                hash += '/search/' + encodeURIComponent(discovery_params.filter);
            }else if(discovery_params && discovery_params.category){
                hash += '/category/' + encodeURIComponent(discovery_params.category);
            }else if(discovery_params){
                hash += '/' + encodeURIComponent(discovery_params.view);
                if(discovery_params.bundle_search_term){
                    hash += '/' + encodeURIComponent(discovery_params.bundle_search_term);
                }
            }
        }else if(feed_params.filter_type == 'upgrade'){
            if(upgrade_params && upgrade_params.renew == true){
                hash += '/renew';
            }else if(upgrade_params && upgrade_params.feature){
                hash += '/feature/' + upgrade_params.feature;
            }
        }else if(feed_params.filter_type == 'teams'){
            if(feed_params.filter_id){
                hash += '/' + feed_params.filter_id;
                if(feed_params.team_action == 'edit_organization'){
                    hash += '/edit';
                }
            }
        }else if(feed_params.filter_type == 'my_channel'){
            var channelid = $('#link_my_channel').data('channelid');
            if(channelid){
                hash = '/u/' + channelid;
            }
        }else if(feed_params.filter_type == 'tags'){
            if(feed_params.organization_id){
                hash = '/team_tags';
            }
        }
    }

    if(hash){
        set_location_hash(hash,replace);
    }
}

function set_location_hash(hash,replace){
    if(get_location_hash() == hash){
        return;
    }

    if(hash === undefined){
        hash = '';
    }

    hash_disabled = true;
    setTimeout(function(){
        hash_disabled = false;
    },200);

    if(history.pushState){
        if(replace){
            History.replaceState(null, null, '/' + hash);
        }else{
            History.pushState(null, null, '/' + hash);
        }
        set_title(title_num);
    }else{
        location.hash = hash;
    }

    hash = hash.replace(/^\//, '');

    if(google_analytics_aggregated_pageviews){
        var ga_hash = hash;
        var hash_split = hash.split(/\//);
        if(hash_split[0] == 'feed'){
            ga_hash = 'feed';
        }else if(hash_split[0] == 'folder'){
            ga_hash = 'folder';
        }else if(hash_split[0] == 'article'){
            ga_hash = 'article';
        }
        if(google_analytics_enabled){
            // ga('set', { page: '/' + ga_hash });
        }

        if(innologica_analytics_enabled){
            _paq.push(['setCustomUrl', '/' + ga_hash]);
        }
    }else{
        if(google_analytics_enabled){
            // ga('set', { page: '/' + hash });
        }

        if(innologica_analytics_enabled){
            _paq.push(['setCustomUrl', '/' + hash]);
        }
    }
    if(google_analytics_enabled){
        // ga('send', 'pageview');
    }

    if(innologica_analytics_enabled){
        _paq.push(['trackPageView']);
    }

    // Do not track PageViews to Facebook!
    if(false && facebook_pixel_enabled){
        fbq('track', 'PageView');
    }
}

function show_comment(id){
    if(!$('#user_comments_commenter_' + id + '_1').is('div')){
        xajax_print_comments(id,1,false,true);
    }else{
        $('#user_comments_' + id).show();
        $('#user_comments_commenter_' + id + '_1').show();
        $('#user_comment_input_' + id).focus().select();
    }
}

function hide_comment(id){
    $('#user_comment_input_' + id).trigger('blur');
    //$('#user_comments_' + id).hide();
    $('#user_comments_commenter_' + id).hide();
}

function hide_reply(id){
    $('#user_comment_input_' + id).trigger('blur');
    $('#reply_div_' + id).html('');
}

function init_tree_pane_dock(){
    if(tree_docked == 1){
        dock_tree_pane();
    }
}

function init_display_density(){
    for(var i=0;i<=4;i++){
        $('#wraper').removeClass('display_density_' + i);
    }
    $('#wraper').addClass('display_density_' + display_density);

    setTimeout(function(){resize();},100);
    setTimeout(function(){check_bottom();},100);
    fix_tree_node_widths();
    //rebuild_toolbar();
    if($('.article_footer_floating')[0]){
        $('.article_footer_floating').each(function(){
            $(this).css('width','auto').removeClass('article_footer_floating');
            var id = $(this).data('aid');
            $('#article_footer_' + id).css('width',$('#article_footer_' + id).width() + 'px').addClass('article_footer_floating');
        });
    }
}

function set_tree_width(val){
    if(device_type == 'phone'){
        return;
    }
    tree_width = val;
    init_tree_width();
    //$('#tree_width_css').attr('href','css/tree_width_'  + tree_width + '.css?ts=' + Math.random());
    for(var i=-2;i<=3;i++){
        $('#wraper').removeClass('tree_width_' + i);
    }
    $('#wraper').addClass('tree_width_' + tree_width);

}

function init_max_unread(){
    $('.ucc').each(function(){
        menu_checkbox_uncheck(this);
    });
    menu_checkbox_check('#max_unread_' + max_unread);
    check_new_update_subscriptions_radio_buttons();
}

function init_tree_width(){
    $('#tree_width_menu').find('.twc').each(function(){
        menu_checkbox_uncheck(this);
    });
    menu_checkbox_check('#tree_width_' + tree_width);
    check_new_update_subscriptions_radio_buttons();
}

function get_notifications(init){
    xajax_get_notifications(init);
}

// Function set_max_unread

function set_mark_read_jump_to_next(val){
    mark_read_jump_to_next = val;
    xajax_save_user_pref('mark_read_jump_to_next',val);
    rebuild_toolbar();
}


function set_mark_read_undo(val){
    mark_read_undo = val;
    xajax_save_user_pref('mark_read_undo',val);
    rebuild_toolbar();
}

function toggle_mark_read_jump_to_next(){
    if(mark_read_jump_to_next == 1){
        mark_read_jump_to_next = 0;
        xalert(_js("The view will not be automatically switched to the next section containing unread articles after using this function."),1);
    }else{
        mark_read_jump_to_next = 1;
        xalert(_js("The view will be automatically switched to the next section containing unread articles after using this function."),1);
    }
    xajax_save_user_pref('mark_read_jump_to_next',mark_read_jump_to_next);
}

function activate_google_plus_button(){
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/client:plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
}

function bind_hotkeys(){
    if(keyboard_handled == true || !keyboard_shortcuts_enabled){
        return;
    }
    keyboard_handled = true;
    $(document).on('keydown.0', function(e){
        log_ga_hotkey(e);
        set_font_size(0);
        e.preventDefault();
    });
    $(document).on('keydown.1', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            remove_feeds_add_menu();
            open_searcher({tab: 'feeds', term: ''});
        }else{
            if(is_article_section()){
                log_ga_hotkey(e);
                set_view_style(0);
            }
        }

        e.preventDefault();
    });
    $(document).on('keydown.2', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            remove_feeds_add_menu();
            open_searcher({tab: 'google_news', term: ''});
        }else{
            if(is_article_section()){
                log_ga_hotkey(e);
                set_view_style(1);
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.3', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            remove_feeds_add_menu();
            open_searcher({tab: 'facebook_pages', term: ''});
        }else{
            if(is_article_section()){
                log_ga_hotkey(e);
                set_view_style(2);
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.4', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            return; // stop Twitter
            remove_feeds_add_menu();
            open_searcher({tab: 'twitter', term: ''});
        }else{
            if(is_article_section()){
                log_ga_hotkey(e);
                set_view_style(3);
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.5', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            remove_feeds_add_menu();
            open_searcher({tab: 'reddit', term: ''});
        }else{
            if(is_article_section()){
                log_ga_hotkey(e);
                set_view_style(4);
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.6', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            remove_feeds_add_menu();
            open_searcher({tab: 'telegram', term: ''});
        }else{
            if(is_article_section()){
                log_ga_hotkey(e);
                set_view_style(4);
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.7', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            remove_feeds_add_menu();
            add_newsletter_inline();
            // add_newsletter();
        }
        e.preventDefault();
    });
    $(document).on('keydown.8', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            remove_feeds_add_menu();
            add_folder(0,'',false);
        }
        e.preventDefault();
    });

    $(document).on('keydown.9', function(e){
        if($('#add_content_simulated_button').hasClass('expanded')){
            remove_feeds_add_menu();
            new_covid19_alert();
        }
        e.preventDefault();
    });

    $(document).on('keydown.k', function(e){
        log_ga_hotkey(e);
        move_article('prev');
        e.preventDefault();
    });
    $(document).on('keydown.j', function(e){
        log_ga_hotkey(e);
        move_article('next');
        e.preventDefault();
    });
    $(document).on('keydown.p', function(e){
        log_ga_hotkey(e);
        if(view_style == 0 || view_style == 2 || view_style == 3 || view_style == 4){
            move_article('prev',false,true);
        }else if(view_style == 1){
            move_article('prev');
        }
        e.preventDefault();
    });
    $(document).on('keydown.n', function(e){
        log_ga_hotkey(e);
        if(view_style == 0 || view_style == 2 || view_style == 3 || view_style == 4){
            move_article('next',false,true);
        }else if(view_style == 1){
            move_article('next');
        }
        e.preventDefault();
    });
    $(document).on('keydown.space', function(e){
        if(onboard_tour){
            onboard_next_tour();
            e.preventDefault();
            return;
        }
        log_ga_hotkey(e);
        return space_function(e);
    });

    $(document).on('keydown.shift_space', function(e){
        log_ga_hotkey(e);
        return shift_space_function(e);
    });
    $(document).on('keyup.f', function(e){
        log_ga_hotkey(e);
        if(g_pressed){
            g_pressed = false;
            view_favourite_items();
        }else{
            if(get_aid()){
                set_fav(get_aid());
                // $('#article_' + get_aid()).effect('highlight',{},250);
                if($('#article_' + get_aid()).data('fav') == 1){
                    create_bottom_notification(_js("Saved for later"),'info',true,1000);
                }else{
                    create_bottom_notification(_js("Removed"),'info',true,1000);
                }
            }
        }
        e.preventDefault();
    });
    $(document).on('keyup.l', function(e){
        log_ga_hotkey(e);
        if(get_aid() && disable_social == 0){
            set_like(get_aid());
            // $('#article_' + get_aid()).effect('highlight',{},250);
            if($('#article_' + get_aid()).data('liked') == 1){
                create_bottom_notification(_js("Liked"),'info',true,1000);
            }else{
                create_bottom_notification(_js("Removed like"),'info',true,1000);
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.e', function(e){
        log_ga_hotkey(e);
        if(get_aid()){
            show_dialog('send_email_dialog',{article_id: get_aid()})
        }
        e.preventDefault();
    });

    $(document).on('keydown./', function(e){
        log_ga_hotkey(e);
        force_no_discovery = true;
        toolbar_action('search',true);
        setTimeout(function(){$('#feed_searcher').val('')},1);
        setTimeout(function(){force_no_discovery = false;},50);
        e.preventDefault();
    });
    $(document).on('keydown.m', function(e){
        log_ga_hotkey(e);
        if(get_aid() && get_sunk() != 1){
            if($('#article_' + get_aid()).data('read') == 1){
                add_score_queue(get_aid(),'read');
            }
            mark_read(get_aid());
        }
        e.preventDefault();
    });
    $(document).on('keydown.r', function(e){
        if(is_article_section()){
            log_ga_hotkey(e);
            reload_articles();
        }else{
            if(feed_params.filter_type == 'stats'){
                view_stats();
            }else if(feed_params.filter_type == 'dashboard'){
                view_dashboard();
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.c', function(e){
        log_ga_hotkey(e);
        if(g_pressed){
            g_pressed = false;
            view_channel();
        }else{
            if($('#user_comment_input_' + get_aid())[0]){
                setTimeout(function(){
                    $('#user_comment_input_' + get_aid()).focus().click();
                },1);
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.a', function(e){
        log_ga_hotkey(e);
        if(g_pressed){
            g_pressed = false;
            view_all_items();
        }else{
            toggle_feeds_add_menu();
        }
        e.preventDefault();
    });
    $(document).on('keydown.period', function(e){
        log_ga_hotkey(e);
        setTimeout(function(){
            show_jumper_div(1);
        },10);
    });
    $(document).on('keydown.period_numpad', function(e){
        log_ga_hotkey(e);
        setTimeout(function(){
            show_jumper_div(1);
        },10);
    });

    $(document).on('keydown.y', function(e){
        if(ril_cooldowns[0]){
            e.preventDefault();
            return;
        }
        log_ga_hotkey(e);
        ril_cooldowns[0] = true;
        setTimeout(function(){ ril_cooldowns[0] = false; },1000);
        try{
            if(get_aid()){
                if($('#article_' + get_aid()).data('pocket') == -1){
                    return;
                }
                pocket_article(get_aid());
                if($('#article_' + get_aid()).data('pocket') == 0){
                    do_loading(sprintf(_js("Adding to %s..."),"Pocket"));
                }else{
                    do_loading(sprintf(_js("Removing from %s..."),"Pocket"));
                }
            }
        }catch(e){}
        e.preventDefault();
    });

    $(document).on('keydown.i', function(e){
        if(ril_cooldowns[1]){
            e.preventDefault();
            return;
        }
        log_ga_hotkey(e);
        ril_cooldowns[1] = true;
        setTimeout(function(){ ril_cooldowns[1] = false; },1000);
        try{
            if(get_aid()){
                if($('#article_' + get_aid()).data('instapaper') == -1){
                    return;
                }
                instapaper_article(get_aid());
                if($('#article_' + get_aid()).data('instapaper') == 0){
                    do_loading(sprintf(_js("Adding to %s..."),"Instapaper"));
                }else{
                    do_loading(sprintf(_js("Removing from %s..."),"Instapaper"));
                }
            }
        }catch(e){}
        e.preventDefault();
    });

    $(document).on('keydown.z', function(e){
        if(ril_cooldowns[2]){
            e.preventDefault();
            return;
        }
        log_ga_hotkey(e);
        ril_cooldowns[2] = true;
        setTimeout(function(){ ril_cooldowns[2] = false; },1000);
        try{
            if(get_aid()){
                if($('#article_' + get_aid()).data('evernote') == -1){
                    return;
                }
                evernote_article(get_aid());
                if($('#article_' + get_aid()).data('evernote') == 0){
                    do_loading(sprintf(_js("Adding to %s..."),"Evernote"));
                }else{
                    do_loading(sprintf(_js("Removing from %s..."),"Evernote"));
                }
            }
        }catch(e){}
        e.preventDefault();
    });

    $(document).on('keydown.x', function(e){
        if(ril_cooldowns[3]){
            e.preventDefault();
            return;
        }
        log_ga_hotkey(e);
        ril_cooldowns[3] = true;
        setTimeout(function(){ ril_cooldowns[3] = false; },1000);
        try{
            if(get_aid()){
                if($('#article_' + get_aid()).data('onenote') == -1){
                    return;
                }
                onenote_article(get_aid());
                if($('#article_' + get_aid()).data('onenote') == 0){
                    do_loading(sprintf(_js("Adding to %s..."),"OneNote"));
                }else{
                    do_loading(sprintf(_js("Removing from %s..."),"OneNote"));
                }
            }
        }catch(e){}
        e.preventDefault();
    });

    $(document).on('keyup.s', function(e){
        log_ga_hotkey(e);
        if(g_pressed){
            g_pressed = false;
            view_stats();
        }else{
            if(disable_social == 0 || forced_team_social_features == 1){
                broadcast_article(get_aid());
            }else{
                if(get_aid()){
                    set_fav(get_aid());
                    if($('#article_' + get_aid()).data('fav') == 1){
                        create_bottom_notification(_js("Saved for later"),'info',true,1000);
                    }else{
                        create_bottom_notification(_js("Removed"),'info',true,1000);
                    }
                }
            }
        }
        e.preventDefault();
    });

    $(document).on('keydown.alt_p', function(e){
        log_ga_hotkey(e);
        dialog('preferences_dialog');
        e.preventDefault();
    });

    $(document).on('keydown.d', function(e){
        log_ga_hotkey(e);
        if(g_pressed){
            g_pressed = false;
            view_dashboard();
        }else{
            dock_undock_tree_pane('d');
        }
        e.preventDefault();
    });
    $(document).on('keydown.alt_i', function(e){
        if(feed_params.filter_type == 'subscription'){
            log_ga_hotkey(e);
            dialog('feed_info_dialog', {subscription_id: feed_params.filter_id});
            e.preventDefault();
        }else if(feed_params.filter_type == 'folder'){
            log_ga_hotkey(e);
            dialog('folder_info_dialog', {folder_id: feed_params.filter_id});
            e.preventDefault();
        }
    });

    $(document).on('keydown.shift_a', function(e){
        if(hotkey_a_presed){
            return;
        }
        hotkey_a_presed = true;
        log_ga_hotkey(e);
        read_multiple_articles(1);
        e.preventDefault();
    });

    $(document).on('keyup.a', function(e){
        hotkey_a_presed = false;
    });

    $(document).on('keyup.shift', function(e){
        hotkey_a_presed = false;
    });

    $(document).on('keyup.shift_a', function(e){
        hotkey_a_presed = false;
    });

    $(document).on('keyup.shift_m', function(e){
        if(get_aid() && group_article_list != 1){
            log_ga_hotkey(e);
            mark_read_direction(get_aid(),'below');
        }
        e.preventDefault();
    });
    $(document).on('keyup.ctrl_m', function(e){
        if(get_aid()){
            log_ga_hotkey(e);
            mark_read_direction(get_aid(),'above');
        }
        e.preventDefault();
    });
    $(document).on('keydown.v', function(e){
        var aid = get_aid();
        if(aid){
            log_ga_hotkey(e);
            var url = get_article_url(aid);
            open_url(url,false);
        }
        e.preventDefault();
    });

    $(document).on('keydown.b', function(e){
        var aid = get_aid();
        if(aid){
            log_ga_hotkey(e);
            var url = get_article_url(aid);
            open_url_background(url);
        }
        e.preventDefault();
    });

    $(document).on('keydown.return', function(e){
        if(onboard_tour){
            onboard_next_tour();
            e.preventDefault();
            return;
        }
        var aid = get_aid();

        if(aid){
            log_ga_hotkey(e);
            if(view_style == 0 || view_style == 2){
                toggle_articleview(aid);
                if($('#article_full_contents_' + aid).is(':visible')){
                    add_score_queue(aid,'open');
                }
            }else if(view_style == 3 || view_style == 4){
                if($('#article_dialog')[0]){
                    inno_dialog_close('article_dialog');
                    // if($('#article_dialog_wrapper').hasClass('article_dialog_full_width')){
                    //     inno_dialog_close('article_dialog');
                    // }else{
                    //     $('#article_dialog_wrapper').css({width: 'auto', top: '10px', left: '70px', right: '70px'}).addClass('article_dialog_full_width');
                    //     opened_dialogs.article_dialog.height = -10;
                    //     opened_dialogs.article_dialog.width = null;
                    //     inno_dialog_resize();
                    //     sanitize_article(aid,true);
                    // }
                }else{
                    toggle_articleview(aid);
                    if($('#article_full_contents_' + aid).is(':visible')){
                        add_score_queue(aid,'open');
                    }
                }
            }
        }
        e.preventDefault();
    });

    $(document).on('keydown.o', function(e){
        var aid = get_aid();

        if(aid){
            log_ga_hotkey(e);
            if((view_style == 0 || view_style == 2)){
                toggle_articleview(aid);
            }else if(view_style == 3 || view_style == 4){
                if($('#article_dialog')[0]){
                    inno_dialog_close('article_dialog');
                }else{
                    toggle_articleview(aid);
                }
            }
            if($('#article_full_contents_' + aid).is(':visible')){
                add_score_queue(aid,'open');
            }
        }
        e.preventDefault();
    });

    $(document).on('keydown.esc', function(e){
        // remove_feeds_add_menu();

        if(has_bulk_selected_articles){
            bulk_unselect_all_articles();
        }

        if(onboard_tour){
            onboard_next_tour();
            e.preventDefault();
            return;
        }

        if(get_aid()){
            if((view_style == 0)){
                if($('#article_' + get_aid()).hasClass('article_expanded')){
                    log_ga_hotkey(e);
                    toggle_articleview(get_aid());
                }
            }
            e.preventDefault();
        }
    });

    $(document).on('keydown.t', function(e){
        log_ga_hotkey(e);
        if(g_pressed){
            g_pressed = false;
            setTimeout(function(){
                show_jumper_div(2);
            },1);
        }else{
            var aid = get_aid();
            if(aid){
                if($('#article_contents_inner_' + aid)[0] && $('#article_contents_inner_' + aid).is(':visible')){
                    // build_article_add_tags(aid);
                    show_article_tags_menu(aid);
                }
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.u', function(e){
        log_ga_hotkey(e);
        if(g_pressed){
            g_pressed = false;
            setTimeout(function(){
                show_jumper_div(3);
            },1);
        }else{
            // Free hotkey!
        }
        e.preventDefault();
    });
    $(document).on('keydown.q', function(e){
        log_ga_hotkey(e);
        var aid = get_aid();
        if(aid){
            if($('#article_contents_inner_' + aid)[0] && $('#article_contents_inner_' + aid).is(':visible') && $('#article_' + aid).data('translations') == 1){
                translate_article(aid);
            }
        }
        e.preventDefault();
    });
    $(document).on('keydown.shift_/', function(e){
        log_ga_hotkey(e);
        if($('#keyboard_shortcuts_dialog')[0]){
            inno_dialog_close('keyboard_shortcuts_dialog');
        }else{
            show_keyboard_shortcuts();
        }
        e.preventDefault();
    });

    $(document).on('keydown.h', function(e){
        log_ga_hotkey(e);
        if($('#keyboard_shortcuts_dialog')[0]){
            inno_dialog_close('keyboard_shortcuts_dialog');
        }else{
            show_keyboard_shortcuts();
        }
        e.preventDefault();
    });

    $(document).on('keydown.-', function(e){
        log_ga_hotkey(e);
        set_font_size('down');
        e.preventDefault();
    });

    // $(document).on('keydown.minus', function(e){
    //  log_ga_hotkey(e);
    //  set_font_size('down');
    //  e.preventDefault();
    // });

    $(document).on('keydown.=', function(e){
        log_ga_hotkey(e);
        if(pluspress == true){
            return; // Stupid Firefox 23 Triggers both events!
        }
        pluspress = true;
        keytimer = setTimeout(function(){ pluspress = false},5);
        set_font_size('up');
        e.preventDefault();
    });

    $(document).on('keydown.+', function(e){
        log_ga_hotkey(e);
        if(pluspress == true){
            return; // Stupid Firefox 23 Triggers both events!
        }
        pluspress = true;
        keytimer = setTimeout(function(){ pluspress = false},5);
        set_font_size('up');
        e.preventDefault();
    });

    $(document).on('keydown.g', function(e){
        g_pressed = true;
        if(g_timer){
            clearTimeout(g_timer);
        }
        g_timer = setTimeout(function(){
            g_pressed = false;
        },2000);
        e.preventDefault();
    });

    $(document).on('keyup.shift', function(e){
        shift_pressed = true;
        shift_pressed_times++;
        if(shift_pressed_times >= 3 && get_aid() && !tts_is_speaking){
            shift_pressed_times = 0;
            tts_article(get_aid());
        }else if(shift_pressed_times >= 3 && tts_is_speaking){
            shift_pressed_times = 0;
            tts_stop();
        }

        if(shift_pressed_times >= 3){
            shift_pressed_times = 0;
        }
        if(shift_timer){
            clearTimeout(shift_timer);
        }
        shift_timer = setTimeout(function(){
            shift_pressed = false;
            shift_pressed_times = 0;
        },800);
        e.preventDefault();
    });

    $(document).on('keydown.shift_p', function(e){
        log_ga_hotkey(e);
        focus_subscription("prev");
        e.preventDefault();
    });

    $(document).on('keydown.shift_n', function(e){
        log_ga_hotkey(e);
        focus_subscription("next");
        e.preventDefault();
    });

    $(document).on('keydown.shift_k', function(e){
        log_ga_hotkey(e);
        focus_subscription("prev",true);
        e.preventDefault();
    });
    $(document).on('keydown.shift_j', function(e){
        log_ga_hotkey(e);
        focus_subscription("next",true);
        e.preventDefault();
    });

    $(document).on('keydown.shift_o', function(e){
        log_ga_hotkey(e);
        open_focused_tree_element();
        e.preventDefault();
    });

    $(document).on('keydown.shift_x', function(e){
        log_ga_hotkey(e);
        var selectors = ($('.parent_div_inner_focused')[0]) ? $('.parent_div_inner_focused') : $('.parent_div_inner_selected');
        $(selectors).each(function(){
            var id = $(this).attr('id').replace(/pdinner\_/,'');
            var id_split = id.split(/_/);
            if(id_split[0] == 0 && $('#plus_' + id).is(':visible')){
                expand_tree(id,'0','1');
            }else{
                var parent_id = $(this).parent().parent().attr('id');
                if(parent_id != 'tree'){
                    var tmp_par = $('#' + parent_id).parent().attr('id');
                    if(tmp_par){
                        var par = tmp_par.replace(/parent\_/,'');
                        expand_tree(par,'0','1');
                    }
                }
            }
            return false;
        });
        e.preventDefault();
    });


    $(document).on('keydown.shift_d', function(e){
        log_ga_hotkey(e);

        var selectors = ($('.parent_div_inner_focused')[0]) ? $('.parent_div_inner_focused') : $('.parent_div_inner_selected');
        if($(selectors)[0]){
            $(selectors).each(function(){
                var id = $(this).attr('id').replace(/pdinner\_/,'');
                var id_split = id.split(/_/);
                if(id_split[0] == 1){
                    delete_subscription(id_split[1]);
                }else if(id_split[0] == 0){
                    delete_folder(id_split[1]);
                }
            });
        }else{
            if(feed_params.filter_type == 'subscription'){
                delete_subscription(feed_params.filter_id);
            }else if(feed_params.filter_type == 'subscription'){
                delete_folder(feed_params.filter_id);
            }
        }
        e.preventDefault();
    });


    $(document).on('keydown.shift_r', function(e){
        log_ga_hotkey(e);

        var selectors = ($('.parent_div_inner_focused')[0]) ? $('.parent_div_inner_focused') : $('.parent_div_inner_selected');
        if($(selectors)[0]){
            $(selectors).each(function(){
                var id = $(this).attr('id').replace(/pdinner\_/,'');
                var id_split = id.split(/_/);
                if(id_split[0] == 1){
                    edit_subscription(id_split[1],'feed_menu');
                }else if(id_split[0] == 0){
                    edit_folder(id_split[1],'feed_menu');
                }
            });
        }else{
            if(feed_params.filter_type == 'subscription'){
                edit_folder(id_split[1],'feed_menu');
            }else if(feed_params.filter_type == 'subscription'){
                edit_subscription(feed_params.filter_id,'feed_menu');
            }
        }
        e.preventDefault();
    });

    $(document).on('keydown.shift_1', function(e){
        if(is_article_section()){
            log_ga_hotkey(e);
            set_view(0);
        }
        e.preventDefault();
    });


    $(document).on('keydown.shift_2', function(e){
        if(is_article_section()){
            log_ga_hotkey(e);
            set_view(1);
        }
        e.preventDefault();
    });

    $(document).on('keydown.shift_3', function(e){
        if(is_article_section()){
            log_ga_hotkey(e);
            set_view(2);
        }
        e.preventDefault();
    });

    $(document).on('keydown.w', function(e){
        if(g_pressed){
            g_pressed = false;
            view_web_pages();
        }else{
            var article_id = get_aid();
            if(article_id && ($('#article_' + article_id).data('ft') == 'rss' || $('#article_' + article_id).data('ft') == 'json' || $('#article_' + article_id).data('ft') == 'keyword')){
                if(view_style == 0 || view_style == 2){
                    var $showed = $('#reader_pane').find('.ar_showed');
                    if(!$showed[0]){
                        return;
                    }

                    if($showed.data('aid') != article_id){
                        article_id = $showed.data('aid');
                    }
                }else if(view_style == 3 || view_style == 4){
                    if(!$('#article_dialog')[0]){
                        return;
                    }
                }

                if(view_style == 0 && !$('#reader_pane').find('.ar_showed')[0]){
                    return false;
                }
                log_ga_hotkey(e);
                mobilize(article_id);
            }
        }
    });

    $(document).on('keydown.alt_c', function(e){
        log_ga_hotkey(e);
        show_dialog('changelog_dialog');
    });

    $(document).on('keydown.down', function(e){
        if((view_style == 3 || view_style == 4) && !$('#article_dialog')[0]){
            log_ga_hotkey(e);

            if(!$('.article_current')[0]){
                var benchmark_article = $('.ar').eq(0);
                var offset = parseInt(benchmark_article.css('margin-top') + benchmark_article.css('margin-bottom'));
                $('#reader_pane').find('.ar').each(function(){
                    var $this = $(this);
                    var this_position = $this.position().top;
                    if(this_position - offset < 0 && this_position + $this.outerHeight() >= 0){
                        benchmark_article = $this;
                        return false;
                    }
                });
            }else{
                var benchmark_article = $('.article_current').next();
            }

            if(!$(benchmark_article).prev().hasClass('ar')){
                move_article('next',false,true);
            }else{
                var skip = tile_view_get_row_length(benchmark_article);
                $(benchmark_article).addClass('article_current'); // to move one to the right
                //$(benchmark_article).prevAll().eq(skip).addClass('article_current');
            }

            move_article('next',false,true,skip);

            e.preventDefault();
        }else if(view_style == 2){
            move_article('next',false,true);
            e.preventDefault();
        }
    });

    $(document).on('keydown.up', function(e){
        if((view_style == 3 || view_style == 4) && !$('#article_dialog')[0]){
            log_ga_hotkey(e);

            if(!$('.article_current')[0]){
                var benchmark_article = $('#reader_pane').find('.ar').eq(0);
                var offset = parseInt(benchmark_article.css('margin-top') + benchmark_article.css('margin-bottom'));
                $('#reader_pane').find('.ar').each(function(){
                    var $this = $(this);
                    var this_position = $this.position().top;
                    if(this_position - offset < 0 && this_position + $this.outerHeight() >= 0){
                        benchmark_article = $this;
                        return false;
                    }
                });
            }else{
                var benchmark_article = $('.article_current');
            }

            // if(!$(benchmark_article).prev().hasClass('ar')){
            //  move_article('prev',false,true);
            // }else{
            //  var skip = tile_view_get_row_length(benchmark_article);
            //  $(benchmark_article).nextAll().eq(skip).addClass('article_current');
            // }

            var skip = tile_view_get_row_length(benchmark_article);

            //$(benchmark_article).prevAll('.ar').eq(skip).addClass('article_current');

            move_article('prev',false,true,skip);

            e.preventDefault();
        }else if(view_style == 2){
            move_article('prev',false,true);
            e.preventDefault();
        }
    });

    $(document).on('keydown.right', function(e){
        if(view_style == 3 || view_style == 4){
            log_ga_hotkey(e);
            if(!$('#article_dialog')[0] && (view_style == 3 || view_style == 4)){
                if(!$('.article_current')[0]){
                    var benchmark_article = $('#reader_pane').find('.ar').eq(0);
                    var offset = parseInt(benchmark_article.css('margin-top') + benchmark_article.css('margin-bottom'));
                    $('#reader_pane').find('.ar').each(function(){
                        var $this = $(this);
                        var this_position = $this.position().top;
                        if(this_position - offset < 0 && this_position + $this.outerHeight() >= 0){
                            benchmark_article = $this;
                            return false;
                        }
                    });
                }else{
                    var benchmark_article = $('.article_current');
                }

                if(!$(benchmark_article).next().hasClass('ar')){
                    move_article('next',false,true);
                }else{
                    $(benchmark_article).addClass('article_current'); // to move one to the right
                    //$(benchmark_article).prev().addClass('article_current');
                }

                move_article('next',false,true);
            }else{
                move_article('next');
            }

            e.preventDefault();
        }else{
            log_ga_hotkey(e);
            move_article('next');
            e.preventDefault();
        }
    });

    $(document).on('keydown.left', function(e){
        if(view_style == 3 || view_style == 4){
            log_ga_hotkey(e);
            if(!$('#article_dialog')[0] && (view_style == 3 || view_style == 4)){
                if(!$('.article_current')[0]){
                    var benchmark_article = $('#reader_pane').find('.ar').eq(0);
                    var offset = parseInt(benchmark_article.css('margin-top') + benchmark_article.css('margin-bottom'));
                    $('#reader_pane').find('.ar').each(function(){
                        var $this = $(this);
                        var this_position = $this.position().top;
                        if(this_position - offset < 0 && this_position + $this.outerHeight() >= 0){
                            benchmark_article = $this;
                            return false;
                        }
                    });
                }else{
                    var benchmark_article = $('.article_current');
                }

                if(!$(benchmark_article).prev().hasClass('ar')){
                    move_article('prev',false,true);
                }else{
                    $(benchmark_article).next().addClass('article_current');
                }

                move_article('prev',false,true);
            }else{
                move_article('prev');
            }

            e.preventDefault();
        }else{
            log_ga_hotkey(e);
            move_article('prev');
            e.preventDefault();
        }
    });

    $(document).on('keydown.ctrl_p', function(e){
        return; // not working in some browsers!
        if(get_aid()){
            log_ga_hotkey(e);
            if(!print_article(get_aid())){
                xalert(_js("Please disable your popup blocker to use this feature!"));
            }
        }
        e.preventDefault();
    });
}

function bind_global_hotkeys(){
    $('#jumper_input').on('keydown.esc', function(e){
        log_ga_hotkey(e);
        $(this).trigger('blur');
        hide_jumper_div();
        e.preventDefault();
    });

    $('#jumper_input').on('keydown.return', function(e){
        log_ga_hotkey(e);
        go_to_current_jumper_selection();
        e.preventDefault();
    });

    $('#jumper_input').on('keydown.up', function(e){
        log_ga_hotkey(e);
        move_jumper_selection('up');
        e.preventDefault();
    });

    $('#jumper_input').on('keydown.down', function(e){
        log_ga_hotkey(e);
        move_jumper_selection('down');
        e.preventDefault();
    });

    $('#feed_searcher').on('keydown.esc', function(e){
        log_ga_hotkey(e);
        $('#reader_pane').focus().click();
        close_search_overlay();
        e.preventDefault();
    });
}

function init_page(filter_type,filter_id,no_loc){
    init_page_details = {filter_type: filter_type, filter_id: filter_id};

    if(window.INOREAD_OAUTH2_MODE === true)
      return false;

    if(!no_loc){
        if(location.hash){
            process_phashchange();
        }
        var loc = get_location_hash();
        if(loc){
            process_hashchange(loc);
            return;
        }
    }


    if(filter_type != ''){
        set_feed_param('filter_type',filter_type);
        set_feed_param('filter_id',filter_id);
    }
    if(feed_params.filter_type == 'all_articles'){
        view_all_items();
    }else if(feed_params.filter_type == 'all_articles_team'){
        view_all_items_team();
    }else if(feed_params.filter_type == 'stats'){
        view_stats();
    }else if(feed_params.filter_type == 'channel'){
        view_channel();
    }else if(feed_params.filter_type == 'trending'){
        view_trending();
    }else if(feed_params.filter_type == 'discovery'){
        open_searcher();
    }else if(feed_params.filter_type == 'catalog'){
        open_searcher();
    }else if(feed_params.filter_type == 'recent'){
        view_recent();
    }else if(feed_params.filter_type == 'annotated'){
        view_annotated();
    }else if(feed_params.filter_type == 'web_pages'){
        view_web_pages();
    }else if(feed_params.filter_type == 'tags'){
        if(feed_params.organization_id){
            view_team_tags();
        }else{
            view_tags();
        }
    }else if(feed_params.filter_type == 'active_searches'){
        view_active_searches();
    }else if(feed_params.filter_type == 'monitored_keywords'){
        view_monitored_keywords();
    }else if(feed_params.filter_type == 'commented'){
        view_commented();
    }else if(feed_params.filter_type == 'profile'){
        view_profile(feed_params.filter_id);
    }else if(feed_params.filter_type == 'liked'){
        view_liked();
    }else if(feed_params.filter_type == 'channel'){
        view_channel();
    }else if(feed_params.filter_type == 'my_channel'){
        view_my_channel();
    }else if(feed_params.filter_type == 'changelog'){
        print_changelog();
    }else if(feed_params.filter_type == 'dashboard'){
        view_dashboard();
    }else if(feed_params.filter_type == 'favourites'){
        view_favourite_items();
    }else if(feed_params.filter_type == 'starred'){
        view_favourite_items();
    }else if(feed_params.filter_type == 'today'){
        view_today();
    }else if(feed_params.filter_type == 'subscription'){
        print_articles();
    }else if(feed_params.filter_type == 'feed'){
        print_articles();
    }else if(feed_params.filter_type == 'bundle'){
        print_articles();
    }else if(feed_params.filter_type == 'folder'){
        print_articles();
    }else if(feed_params.filter_type == 'web_pages'){
        view_web_pages();
    }else if(feed_params.filter_type == 'keyboard_shortcuts'){
        view_keyboard_shortcuts();
    }else if(feed_params.filter_type == 'teams'){
        view_teams();
    }else if(feed_params.filter_type == 'search'){
        open_searcher();
    }else if(feed_params.filter_type == 'library'){
        view_library();
    }else if(feed_params.filter_type == 'pocket' || feed_params.filter_type == 'evernote' || feed_params.filter_type == 'onenote' || feed_params.filter_type == 'instapaper'){
        view_ril(feed_params.filter_type);
    }else{
        view_all_items();
    }

    set_loc();

}

function tile_view_get_row_length(benchmark_article){
    var skip = -1;
    var prev_top = null;
    var current_line_first_article = null;
    var in_current_line = false;
    if(!benchmark_article){
        $('#reader_pane').find('.ar').each(function(){
            if(prev_top != null && prev_top != $(this).offset().top){
                return false;
            }
            skip++;
            prev_top = $(this).offset().top;
        });
    }else{
        $('#reader_pane').find('.ar').each(function(){
            if(in_current_line == false && prev_top != $(this).offset().top){
                skip = -1;
            }

            if(in_current_line == true && prev_top != $(this).offset().top){
                return false;
            }

            if($(this)[0] == benchmark_article[0]){
                in_current_line = true;
            }

            skip++;
            prev_top = $(this).offset().top;
        });
    }

    return skip;
}

function unbind_hotkeys(){
    keyboard_handled = false;
    $(document).off('keyup');
    $(document).off('keydown');
    //$('#jumper_input').unbind('keydown');
}

function articles_loaded(contents,load_date,server_view_style,last_feed_id,last_article_date,no_unread_checked,current_feed_ids,first_article_date,channel_section,ap,filtered_feeds){
    if(ads_enabled && ap){
        set_feed_param('ap',ap);
        if(ap.ads_permitted){
            ads_permitted = 1;
        }else{
            ads_permitted = 0;
        }
    }
    if(!ads_enabled){
        ads_permitted = 0;
    }

    articles_initial_load = true;
    var expand = 0;
    var ar_len = 0;
    for(var i in article_contents){
        ar_len++;
    }

    if(view_style != server_view_style || feed_params.view_style != server_view_style){
        view_style = server_view_style;
        set_feed_param('view_style',server_view_style);
    }

    if(ar_len == 0){
        $('#reader_pane').removeClass();
        resize();
        remove_article_classes();
        check_tile_widths();
        init_view_style();
        check_reader_pane_message();

        if(ads_enabled && ap){
            is_adult_section = ap.is_adult;
        }

        var screen_width = screen.width;
        if(ads_right_skyscraper_enabled && ads_permitted && (screen_width > 1280 || (is_firefox && screen_width == 960 /* f bug with mac and 2 monitors */)) && view_style != 2 && feed_params.filter_type != 'old_search' && device_type != 'phone'){
            activate_side_ad();
            activate_side_ad_timer(true);
        }

        if(!$('#feed_searcher').is(':focus')){
            $('#reader_pane').focus().click();
        }
        if(feed_params.opened_article){
            expand = feed_params.opened_article;
            delete_feed_param('opened_article');
        }
        setTimeout(function(){
            clear_article_timers();
            if(float_left == 'left'){
                $('#reader_pane').scrollTo(0, null, null);
            }
        },1);
        if(server_view_style == 2){
            $('#no_article_selected').show()
            activate_3way_ad();
        }
        if(feed_params.tmp_search){
            delete_feed_param('tmp_search');
        }

        set_feed_param('last_load_date',load_date);

        if(no_unread_checked){
            set_feed_param('no_unread_checked',no_unread_checked);
        }
        if(current_feed_ids){
            set_feed_param('current_feed_ids',current_feed_ids);
        }
        if(filtered_feeds){
            set_feed_param('filtered_feeds',filtered_feeds);
        }
        if(device_type == 'phone'){
            document.getElementById('mf_right_part').innerHTML = '';
        }
        // Topics counter progress bar
        topics_progress_bar.build_bar();
    }else{
        check_article_groups_headings();
    }

    if(last_feed_id){
        set_feed_param('last_feed_id',last_feed_id);
    }

    if(first_article_date){
        set_feed_param('first_article_date',first_article_date);
    }
    if(last_article_date){
        set_feed_param('last_article_date',last_article_date);
    }
    if(channel_section){
        set_feed_param('channel_section',channel_section);
    }

    if(server_view_style != 3){
        for(var id in contents){
            fix_article_header_width(id);
            article_contents[id] = contents[id];
            remove_unseen_class(id);
        }
    }

    if(server_view_style != 1){
        for(var id in contents){
            apply_highlighters(id,true);
            apply_annotations_preview(id);
        }
    }

    if(server_view_style == 1){
        delete_feed_param('opened_article');
        force_no_scroll = 1;
        for(var id in contents){
            expand_article(id);
        }
        force_no_scroll = 0;
    }

    if(server_view_style == 3 || server_view_style == 4){
        for(var id in contents){
            fix_article_header_width(id);
            bind_article_click_inside(id);
            article_contents[id] = contents[id];
        }
    }else{
        var num = prefetch_expanded_view;
        //expand_articles();
    }

    setTimeout(function(){ check_bottom(); },10);
    setTimeout(function(){ check_bottom(); },100);
    setTimeout(function(){ check_bottom(); },1000);

    resize_no_more_div();
    update_unread_button_count();
    check_articles_filter();
    if(next_articles_timeout){
        clearTimeout(next_articles_timeout);
    }

    $('#next_articles').css('opacity','0.0');

    if(expand != 0 && feed_params.filter_type == 'article'){
        expand_current_article(expand);
    }

    if(loading_timer){
        clearTimeout(loading_timer);
    }
    if(article_to_scroll_to){
        scroll_to_article(article_to_scroll_to);
        article_to_scroll_to = false;
    }

    if(scroll_to_first_article_id){
        if(contents){
            var first_id
            for(first_id in contents) break
            scroll_to_article(first_id);
        }
        scroll_to_first_article_id = false;
    }

    if(ads_enabled){
        adsense_height_fixer();
    }

    // if(contents && !check_user_visit(128)){
    //     show_articles_bulk_hint();
    // }
}

// Function activate_side_ad_timer , activate_side_ad

function open_url_background(url,dont_mark_as_read) {
    if($('#inoreader_companion_div')[0]){
        window.postMessage({ request: {url: url }}, "*");
        if($('#article_' + get_aid()).data('read') == 0 && click_mark == 1 && !dont_mark_as_read){
            mark_read(get_aid(),false,true);
        }
    }else{
        prompt_extension_install();
    }
}

function prompt_extension_install(){
    inno_dialog_close('extension_prompt_dialog');
    var content = '<div class="extension_prompt_dialog_background"><img src="/images/new-tab-in-bgr-' + get_theme_name() +'.png"></div>';
    content += '<div class="extension_prompt_dialog_title">' + _js('Want to open articles in a background tab?') + '</div>';
    content += '<div class="extension_prompt_dialog_subtitle graylink">' + sprintf(_js('You need to install the %s browser extension.'),application_name) + '</div>';
    content += '<div class="extension_prompt_dialog_buttons">';
    content += '<a class="extension_prompt_dialog_button" target="_blank" rel="noopener" href="https://chrome.google.com/webstore/detail/rss-reader-extension-by-i/kfimphpokifbjgmjflanmfeppcjimgah"><img src="/images/browser_icons/chrome.png"></a>';
    content += '<a class="extension_prompt_dialog_button" target="_blank" rel="noopener" href="https://addons.mozilla.org/en-US/firefox/addon/rss-reader-extension-inoreader/"><img src="/images/browser_icons/firefox.png"></a>';
    content += '<a class="extension_prompt_dialog_button" target="_blank" rel="noopener" href="https://microsoftedge.microsoft.com/addons/detail/rss-reader-extension-by-/lbjfhdjlblncekgomhadnnpampcahhal"><img src="/images/browser_icons/edge.png"></a>';
    content += '</div>';

    dialog('extension_prompt_dialog', {content: content});
}

function build_search_menu(){
    return;
    var menu = get_section_menu({filter_type: 'old_search'});
    // var container_top = 7;
    // $('#sitecontent').find('.top_notification').each(function(){
    //  container_top += parseInt($(this).outerHeight());
    // });
    $('#static_search_menu_container').html('').show();//.css('top',container_top);

    document.getElementById('static_search_menu_container').appendChild(inno_toolbar_button(false,false,'',menu,false,false,'static_search_menu'));
    $('#static_search_menu').show();
    fix_menu_position('#static_search_menu');
    resize();
}

function check_article_groups_headings(){
    if(!group_article_list){
        return;
    }
    if(view_style != 0 && view_style != 1 && view_style != 2){
        return;
    }
    var w = $('#reader_pane').find('.ar').eq(0).outerWidth() - 18;
    $('#reader_pane').find('.articles_feed_group_heading').each(function(){
        $(this).find('.articles_feed_group_heading_title').eq(0).css('max-width',w - $(this).find('.articles_feed_group_heading_favicon').eq(0).outerWidth());
    });
}

function expand_current_article(id){
    if(view_style == 1){
        var timeout = 600;
    }else{
        var timeout = 1;
    }
    setTimeout(function(){
        if($('#article_' + id)[0]){
            if(view_style != 1){
                toggle_articleview(id);
            }
            if(view_style != 0 && view_style != 2){
                scroll_to_article(id);
            }
        }
    },timeout);
}

function check_articles_filter(){
    // Stop the filters
    articles_filter = 0;

    if(articles_filter == 0 && !should_show_deduplicator_hint()){
        return;
    }
    var read_queue = [];
    var removed = 0;
    var url = '';
    var title = '';
    var removed_articles = 0;
    $('#reader_pane').find('.ar').each(function(){
        var $this = $(this);
        var id = $this.data('aid');
        var type = $this.data('type');
        var feed_type = $this.data('ft');

        if(feed_type == 'webfeed' || feed_type == 'user_newsletter'){
            return true;
        }

        if(articles_filter == 2 && type == 'microblog'){
            return true;
        }

        if(id){
            if(similar_scanned_ids[id] == true){
                return true;
            }
            similar_scanned_ids[id] = true;
            url = get_article_url(id).toLowerCase();
            title = ($('#at_' + id)[0]) ? $('#at_' + id).html() : $('#article_title_link_' + id).html();
            if(!title) {
              return true
            }
            title = title.toLowerCase()
            removed = 0;
            if(articles_filter == 1 && similar_cache_urls[url]){
                if(similar_cache_urls[url].length > 0){
                    removed = 1;
                }
            }else if(articles_filter == 2 && similar_cache_titles[title]){
                if(similar_cache_titles[title].length > 0){
                    removed = 1;
                }
            }else if(articles_filter == 3 && similar_cache_titles[title] && similar_cache_urls[url]){
                if(similar_cache_titles[title].length > 0 && similar_cache_urls[url].length > 0){
                    removed = 1;
                }
            }else if((articles_filter == 4 || should_show_deduplicator_hint()) && ((type == 'article' && similar_cache_titles[title]) || similar_cache_urls[url])){
                if((similar_cache_titles[title] && similar_cache_titles[title].length) > 0 || (similar_cache_urls[url] && similar_cache_urls[url].length) > 0){
                    removed = 1;
                }
            }

            if(articles_filter > 0 && removed == 1){
                if($('#article_' + id).data('read') == 0){
                    mark_read(id,false,true);
                }
                $this.remove();
                removed_articles++;
            }else if(articles_filter == 0 && removed == 1 && should_show_deduplicator_hint()){
                show_deduplicator_hint();
            }

            if(articles_filter == 1 || articles_filter == 3 || articles_filter == 4 || should_show_deduplicator_hint()){
                if(!similar_cache_urls[url]){
                    similar_cache_urls[url] = [];
                }
                similar_cache_urls[url].push(id);
            }
            if(articles_filter == 2 || articles_filter == 3 || articles_filter == 4 || should_show_deduplicator_hint()){
                if(!similar_cache_titles[title]){
                    similar_cache_titles[title] = [];
                }
                similar_cache_titles[title].push(id);
            }
        }
    });

    if(articles_filter_notification == 1 && removed_articles > 0){
        var label = __js("Filtered %s similar article","Filtered %s similar articles",removed_articles)
        create_snackbar(label,_js("Dismiss"),false,2000);

    }
    check_bottom();
}

function update_unread_button_count(){
    if(max_unread == 0){
        inno_toolbar_switcher_set_button_caption('unread_filter_switcher', 0, _js("Unread"));
        return;
    }

    var unread_cnt = 0;
    if(feed_params.filter_type == 'subscription'){
        if(subscriptions_cnt['1_' + feed_params.filter_id]){
            unread_cnt = parseInt(subscriptions_cnt['1_' + feed_params.filter_id].cnt);
        }
    }else if(feed_params.filter_type == 'folder'){
        if(subscriptions_cnt['0_' + feed_params.filter_id]){
            unread_cnt = parseInt(subscriptions_cnt['0_' + feed_params.filter_id].cnt);
        }
    }else if(feed_params.filter_type == 'all_items' || !feed_params.filter_type){
        unread_cnt = parseInt(totals_cnt[0]);
    }else if(feed_params.filter_type == 'tags'){
        if($('#unread_cnt_tags').html() != ''){
            unread_cnt = parseInt($('#unread_cnt_tags').html());
        }
    }else if(feed_params.filter_type == 'starred'){
        unread_cnt = 0;
    }else if(feed_params.filter_type == 'channel'){
        if(!$('#unread_cnt_channel').html()){
            unread_cnt = 0;
        }else{
            unread_cnt = parseInt($('#unread_cnt_channel').html());
        }
    }


    var unread_txt = '';
    if(unread_cnt == undefined){
        unread_txt = _js("Unread");
    }else{
        if(unread_cnt < 0){
            unread_cnt = 0;
        }
        current_unread = unread_cnt;
        var unread_cnt_sanit = (unread_cnt > max_unread) ? max_unread + '+' : unread_cnt;
        //unread_txt = __js(sprintf(_js("%s Unread"),unread_cnt_sanit), sprintf(_js("%s Unread"),unread_cnt_sanit), unread_cnt);
        unread_txt = __js("%s Unread","%s Unread",unread_cnt_sanit);
    }

    inno_toolbar_switcher_set_button_caption('unread_filter_switcher', 0, unread_txt);
}

function data_to_array(data) {
    var array = [];
    for (var key in data) {
        var value = data.key;
        if (typeof value === 'string') {
            array[key] = value;
        } else {
            array[key] = data_to_array(value);
        }
    }
    return array;
}

function make_chart(element,in_data,title,other_params,chart_type){
    google.charts.load("current", { callback: function(){ print_chart(element, in_data, title, other_params, chart_type); }, packages: ["corechart"] });
}

function print_chart(element,in_data,title,other_params,chart_type){
    var data = google.visualization.arrayToDataTable(in_data);

    var current_theme = get_theme_name();
    var theme_colors = {
        aqua: { posted_color: '#D7DDE6', read_color: '#1a2433', text_color: '#1a2433', line_color: '#f1f5fa' },
        light: { posted_color: '#c8c8c8', read_color: '#5D7DAA', text_color: '#262626', line_color: '#edf0f3' },
        sepia: { posted_color: '#ccc4b9', read_color: '#e08526', text_color: '#392f20', line_color: '#d6c9bd' },
        dark: { posted_color: '#444444', read_color: '#5B93E1', text_color: '#777777', line_color: '#333333' },
    };

    if(!theme_colors[current_theme]){
        // prevent exceptions
        current_theme = 'aqua';
    }

    var options = { backgroundColor: 'transparent', colors: [theme_colors[current_theme].posted_color,theme_colors[current_theme].read_color], legend: {position: 'top', textStyle: {color: theme_colors[current_theme].text_color}}, hAxis: {baselineColor: theme_colors[current_theme].line_color, textStyle: {color: theme_colors[current_theme].text_color}}, vAxis: {textStyle: {color: theme_colors[current_theme].text_color}, gridlines: {color: theme_colors[current_theme].line_color}}, chartArea: {top: 20, left: 38, width:"100%",height:"70%"} };

    if(other_params){
        for(var i in other_params){
            options[i] = other_params[i];
        }
    }
    if(chart_type == 'line'){
        var chart = new google.visualization.LineChart(document.getElementById(element));
    }else{
        var chart = new google.visualization.ColumnChart(document.getElementById(element));
    }
    chart.draw(data, options);
}

function make_stats_pie(element,in_data,title,other_params){
    google.charts.load("current", { callback: function(){ print_pie_chart(element, in_data, title, other_params); }, packages: ["corechart"] });
}

function print_pie_chart(element,in_data,title,other_params){
    var data = google.visualization.arrayToDataTable(in_data);

    var current_theme = get_theme_name();
    var theme_colors = {
        aqua: { posted_color: '#D7DDE6', read_color: '#1a2433', text_color: '#1a2433', line_color: '#f1f5fa' },
        light: { posted_color: '#c8c8c8', read_color: '#5D7DAA', text_color: '#262626', line_color: '#edf0f3' },
        sepia: { posted_color: '#ccc4b9', read_color: '#e08526', text_color: '#392f20', line_color: '#d6c9bd' },
        dark: { posted_color: '#444444', read_color: '#5B93E1', text_color: '#777777', line_color: '#333333' },
    };

    if(!theme_colors[current_theme]){
        // prevent exceptions
        current_theme = 'aqua';
    }

    var options = {backgroundColor: 'transparent', pieHole: 0.4, pieSliceBorderColor: theme_colors[current_theme].line_color, is3D: false, pieSliceText: 'label', colors: [theme_colors[current_theme].read_color, theme_colors[current_theme].posted_color], legend: {position: 'right', textStyle: {color: theme_colors[current_theme].text_color}}, chartArea: {top: 10, left: 10, width:"100%",height:"90%"}, sliceVisibilityThreshold: 1/10000};

    if(other_params){
        for(var i in other_params){
            options[i] = other_params[i];
        }
    }

    var chart = new google.visualization.PieChart(document.getElementById(element));
    chart.draw(data, options);
}

function make_sys_chart(element,in_data,title,points,other_params){
    google.charts.load("current", { callback: function(){ print_sys_chart(element, in_data, title, points, other_params); }, packages: ["corechart"] });
}

function print_sys_chart(element,in_data,title,points,other_params){
    var data = google.visualization.arrayToDataTable(in_data);

    var current_theme = get_theme_name();
    var theme_colors = {
        aqua: { posted_color: '#D7DDE6', read_color: '#1a2433', text_color: '#1a2433', line_color: '#f1f5fa' },
        light: { posted_color: '#c8c8c8', read_color: '#5D7DAA', text_color: '#262626', line_color: '#edf0f3' },
        sepia: { posted_color: '#ccc4b9', read_color: '#e08526', text_color: '#392f20', line_color: '#d6c9bd' },
        dark: { posted_color: '#444444', read_color: '#5B93E1', text_color: '#777777', line_color: '#333333' },
    };

    if(!theme_colors[current_theme]){
        // prevent exceptions
        current_theme = 'aqua';
    }

    var options = { backgroundColor: 'transparent', legend: 'top', chartArea: {top: 20, left: 50, width:"100%",height:"65%"}, pointSize: parseInt(points), legend: {position: 'top', textStyle: {color: theme_colors[current_theme].text_color}}, hAxis: {baselineColor: theme_colors[current_theme].line_color, textStyle: {fontSize: 11, color: theme_colors[current_theme].text_color}}, vAxis: {textStyle: {fontSize: 12, color: theme_colors[current_theme].text_color}, gridlines: {color: theme_colors[current_theme].line_color}} };

    if(other_params){
        for(var i in other_params){
            options[i] = other_params[i];
        }
    }

    var chart = new google.visualization.LineChart(document.getElementById(element));
    chart.draw(data, options);
}

function space_function(e){
    if(current_xajax_requests.print_articles && $('#reader_pane').find('.loader')[0]){
        e.preventDefault();
        return;
    }
    if(view_style == 2){
        var container = $('#three_way_contents');
    }else if(view_style == 3 || view_style == 4){
        var container = $('#article_dialog');
    }else{
        var container = $('#reader_pane');
    }
    $(container).finish(); //stop if it's currently scrolling
    var article_id = get_aid();

    if($('#all_read_message')[0] && $('#reader_pane')[0].scrollTop < 20){
        jump_to_subscription("next_unread",true);
        return;
    }

    if($('#no_more_press_space').css('visibility') == 'visible'){
        jump_to_subscription("next_unread",true);
        return;
    }

    if(article_id == '' && view_style != 3 && view_style != 4){
        move_article('next',true);
    }else{
        if(view_style == 2){
            var wraper = document.getElementById('three_way_contents');
            var bottom = ((wraper.scrollHeight - wraper.scrollTop) - $('#reader_pane').height()) * -1;
        }else if(view_style == 3 || view_style == 4){
            var wraper = document.getElementById('article_dialog');
            if(!wraper){
                var bottom = 0;
            }else{
                var bottom = ((wraper.scrollHeight - wraper.scrollTop) - $('#article_dialog_wrapper').height()) * -1;
            }
        }else{
            var container_height = $('#reader_pane').height();
            var bottom = container_height - ($('#article_' + article_id).position().top + $('#article_' + article_id).height());
            if($('#article_footer_' + article_id).is(':visible')){
                bottom += $('#article_footer_' + article_id).outerHeight();
                bottom += 8; // .article_footer top margin + top padding
            }

            if($('#article_tags_' + article_id).is(':visible')){
                bottom += $('#article_tags_' + article_id).outerHeight();
                bottom += 5; // .article_tags top margin
            }

            bottom += 10; // .article_content padding
            bottom += 7; // .ar padding
        }

        if(bottom >= 0){
            if((view_style == 3 || view_style == 4) && !$('#article_dialog')[0]){
                var benchmark_article = $('#reader_pane').find('.ar').not('.hidden, .ar_skip').eq(0);
                var offset = parseInt($('#reader_pane').find('.ar').not('.hidden, .ar_skip').eq(0).css('margin-top') + $('.ar').not('.hidden, .ar_skip').eq(0).css('margin-bottom'));
                $('#reader_pane').find('.ar').not('.hidden, .ar_skip').each(function(){
                    if($(this).position().top + $(this).outerHeight() >= 0){
                        benchmark_article = $(this);
                        return false;
                    }
                });

                if(view_style == 3){
                    var skip = tile_view_get_row_length(benchmark_article);
                }else if(view_style == 4){
                    var container_height = $('#reader_pane').height();
                    var skip = 0;
                    $(benchmark_article).nextAll('.ar').not('.hidden, .ar_skip').each(function(){
                        var bottom = container_height - ($(this).position().top + $(this).height());
                        if(bottom < 0){
                            skip--;
                            return false;
                        }
                        skip++;
                    });
                    if(skip < 0){
                        skip = 0;
                    }
                }

                var next_article = $(benchmark_article).nextAll('.ar').not('.hidden, .ar_skip').eq(skip);
                if($(next_article)[0]){
                    $('.article_current').removeClass('article_current').removeClass('article_current_collapsed');
                    scroll_to_article($(next_article).attr('id').replace(/article\_/,''));
                }else{
                    articles_moving = true;
                    if(articles_moving_timer)clearTimeout(articles_moving_timer);
                    if(mark_current_timer){
                        clearTimeout(mark_current_timer);
                    }
                    var spd = (scroll_top == 2 || scroll_top == 0) ? 0 : 250; //ms - instant or smooth
                    var h = $(document).height()-150; // comfortable offset
                    $('#reader_pane').scrollTo('+=' + h + 'px', spd, {axis:'y', offset: {top:-5, left: 0}});
                    articles_moving_timer = setTimeout(function(){ articles_moving = false; },spd + 150);
                }
            }else{
                move_article('next',true);
            }
        }else{
            articles_moving = true;
            if(articles_moving_timer)clearTimeout(articles_moving_timer);
            if(mark_current_timer){
                clearTimeout(mark_current_timer);
            }
            var spd = (scroll_top == 2 || scroll_top == 0) ? 0 : 250; //ms - instant or smooth
            var h = $(document).height()-150; // comfortable offset

            $(container).scrollTo('+=' + h + 'px', spd, {axis:'y', offset: {top:-5, left: 0}});
            articles_moving_timer = setTimeout(function(){ articles_moving = false; },spd + 150);
        }
    }
    var code = (e.keyCode) ? e.keyCode : e.which;
    if(code == 32){
        e.preventDefault();
    }
}

function shift_space_function(e){
    if(current_xajax_requests.print_articles){
        return;
    }
    var container;
    if(view_style == 2){
        container = $('#three_way_contents');
    }else if(view_style == 3 || view_style == 4){
        container = $('#article_dialog');
    }else{
        container = $('#reader_pane');
    }

    $(container).finish(); //stop if it's currently scrolling
    var article_id = get_aid();
    var top = 0;
    if(view_style == 2){
        var wraper = document.getElementById('three_way_contents');
        top = wraper.scrollTop * -1;
    }else if(view_style == 3 || view_style == 4){
        var wraper = document.getElementById('article_dialog');
        if(!wraper){
            top = 0;
        }else{
            top = wraper.scrollTop * -1;
        }
    }else{
        top = ($('#article_' + article_id)[0]) ? $('#article_' + article_id).position().top + 18 : 0;
    }

    if(top >= 0){
        if((view_style == 3 || view_style == 4) && !$('#article_dialog')[0]){
            var benchmark_article = $('#reader_pane').find('.ar').not('.hidden, .ar_skip').eq(0);
            var offset = parseInt($('#reader_pane').find('.ar').not('.hidden, .ar_skip').eq(0).css('margin-top') + $('.ar').not('.hidden, .ar_skip').eq(0).css('margin-bottom'));
            $('#reader_pane').find('.ar').not('.hidden, .ar_skip').each(function(){
                // if($(this).position().top - offset < 0 && $(this).position().top + $(this).outerHeight() >= 0){
                if($(this).position().top + $(this).outerHeight() >= 0){
                    benchmark_article = $(this);
                    return false;
                }
            });

            var skip = tile_view_get_row_length(benchmark_article);
            var prev_article = $(benchmark_article).prevAll('.ar').not('.hidden, .ar_skip').eq(skip);
            if(!$(prev_article)[0]){
                prev_article = $('.ar').not('.hidden, .ar_skip').eq(0);
            }

            if($(prev_article)[0]){
                $('.article_current').removeClass('article_current').removeClass('article_current_collapsed');
                scroll_to_article($(prev_article).attr('id').replace(/article\_/,''));
            }
        }else{
            move_article('prev');
        }
    }else{
        articles_moving = true;
        if(articles_moving_timer)clearTimeout(articles_moving_timer);
        if(mark_current_timer){
            clearTimeout(mark_current_timer);
        }
        var spd = (scroll_top == 2) ? 0 : 250; //ms - instant or smooth
        //var h = $(document).height(); // comfortable offset

        var dh = $(document).height();
        var ah = $('#article_' + article_id).height();
        var at = $('#article_' + article_id).position().top;
        if(dh < ah && Math.abs(at) > dh){
            // Simulate pageUp behaviour
            var h = dh;
        }else{
            // Article is short or distance to the article-top is less then page/document height - go to article-top, don't allow scroll above current article
            var h = at;
            if(h<0){
                h *= -1;
            }
        }
        $(container).scrollTo('-=' + h + 'px', spd, {axis:'y', offset: {top:-5, left: 0}});
        articles_moving_timer = setTimeout(function(){ articles_moving = false; },spd + 150);
    }
    var code = (e.keyCode) ? e.keyCode : e.which;
    if(code == 32){
        e.preventDefault();
    }
}

function move_article_button(dir,e){
    if((view_style == 3 || view_style == 4) && !$('#article_dialog')[0]){
        if(dir == 'prev'){
            shift_space_function(e);
        }else if(dir == 'next'){
            space_function(e);
        }
    }else{
        move_article(dir);
    }
    $('#reader_pane').focus().click();
}

function move_article(dir,jump_subscription,do_not_open,skip,do_not_focus){
    if(article_move_cooldown == true){
        return;
    }
    article_move_cooldown = true;
    setTimeout(function(){
        article_move_cooldown = false;
    },25);

    var first_article  = false;

    if(!$('#reader_pane').find('.article_current')[0]){
        $('#reader_pane').find('.ar').not('.hidden, .ar_skip').eq(0).addClass('article_current');
        first_article = true;
    }

    if(!$('#reader_pane').find('.ar').not('.hidden, .ar_skip')[0] && jump_subscription == true){
        jump_to_subscription("next_unread",true);
    }

    $('#reader_pane').find('.ar').not('.hidden, .ar_skip').each(function(){
        if(dir == 'prev'){
            var prev_element = $(this).prevAll('.ar').not('.hidden, .ar_skip').eq(0);
            if(prev_element.is('div') && prev_element.hasClass('ar') && $(this).hasClass('article_current')){
                var prev_id = $(prev_element).data('aid');
                if(skip != undefined){
                    skip = parseInt(skip);
                    var prev_article = $(this).prevAll('.ar').not('.hidden, .ar_skip').eq(skip);
                    if(prev_article[0]){
                        prev_id = $(prev_article).data('aid');
                    }else{
                        return;
                    }
                }

                if(view_style == 0 || view_style == 2 || view_style == 3 || view_style == 4){
                    if(do_not_open === true || view_style == 2){
                        articles_moving = false;

                        if(view_style != 2 || do_not_open === true){
                            $('.article_current').removeClass('article_current').removeClass('article_current_collapsed');
                            $('#article_' + prev_id).addClass('article_current').addClass('article_current_collapsed');
                        }else if(do_not_open !== true){
                            if($('#article_full_contents_' + prev_id).is(':visible')){
                                $('#article_full_contents_' + prev_id).hide(); // Ugly hack, but otherwise the whole toggle_article_contents() should be revised;
                            }
                            toggle_articleview(prev_id);
                        }
                        var top = $('#article_' + prev_id).position().top;
                        var bottom = $('#article_' + prev_id).position().top - $('#reader_pane').height();

                        var top2 = $('#article_' + prev_id).position().top;
                        var bottom2 = (top2);
                        if(bottom > 0){
                            document.getElementById('article_' + prev_id).scrollIntoView(0);
                            setTimeout(function(){check_bottom();},1);
                        }else if(bottom2 < 0){
                            scroll_to_article(prev_id,true,true);
                        }

                        if(scan_tracking == 1 && $('#article_' + prev_id).data('read') == 0){
                            mark_read(prev_id,false,true);
                        }
                    }else{
                        if($('#article_full_contents_' + prev_id).is(':visible')){
                            $('#article_full_contents_' + prev_id).hide(); // Ugly hack, but otherwise the whole toggle_article_contents() should be revised;
                        }
                        toggle_articleview(prev_id);
                        //$('#article_header_text_' + prev_id).click();
                    }
                }else if(view_style == 1){
                    set_feed_param('opened_article',$(prev_element).data('aid'));
                    $('.article_current').removeClass('article_current');
                    $('#article_' + $(prev_element).data('aid')).addClass('article_current');
                    if(use_stripes == 0 && view_style == 1){
                        $('.article_title_link').removeClass('bluelink');
                        $('#article_title_link_' + $(prev_element).data('aid')).addClass('bluelink');
                        $('.article_feed_info_link').removeClass('bluelink');
                        $('#article_feed_info_link_' + $(prev_element).data('aid')).addClass('bluelink');
                    }

                    if($('#article_' + $(prev_element).data('aid')).data('init') == 1){
                        $('#article_' + $(prev_element).data('aid')).data('init',0);
                    }
                    if((scan_tracking == 1 || check_scroll_tracking()) && ($('#article_' + $(prev_element).data('aid')).hasClass('article_unreaded') || $('#article_' + $(prev_element).data('aid')).hasClass('article_unseen')) && keep_unread[$(prev_element).data('aid')] != true){
                        mark_read($(prev_element).data('aid'),false,true);
                    }

                    check_star_icon($(prev_element).data('aid'));
                    check_tags_icon($(prev_element).data('aid'));
                    check_broadcast_icon($(prev_element).data('aid'));

                    scroll_to_article(prev_id);
                    focus_article_url(prev_id);
                }
                return false;
            }else{

            }
        }else if(dir == 'next'){
            if(first_article){
                var next_element = $(this).parent().children('.ar').not('.hidden, .ar_skip').eq(0);
            }else{
                var next_element = $(this).nextAll('.ar, #no_more_div').not('.hidden, .ar_skip').eq(0);
            }
            if(next_element.is('div') && next_element.hasClass('ar') && $(this).hasClass('article_current') && $(next_element).attr('id') != 'no_more_div'){
                var next_id = $(next_element).data('aid');
                if(skip != undefined){
                    skip = parseInt(skip);
                    var next_article = $(this).nextAll('.ar').not('.hidden, .ar_skip').eq(skip);
                    if($(next_article)[0] && $(next_article).hasClass('ar')){
                        next_id = $(next_article).data('aid');
                    }else{
                        return;
                    }
                }
                if(view_style == 0 || view_style == 2 || view_style == 3 || view_style == 4){
                    if(do_not_open === true || view_style == 2){
                        articles_moving = false;
                        if(view_style != 2 || do_not_open === true){
                            $('.article_current').removeClass('article_current').removeClass('article_current_collapsed');
                            $('#article_' + next_id).addClass('article_current').addClass('article_current_collapsed');
                        }else if(do_not_open !== true){
                            if($('#article_full_contents_' + next_id).is(':visible')){
                                $('#article_full_contents_' + next_id).hide(); // Ugly hack, but otherwise the whole toggle_article_contents() should be revised;
                            }
                            toggle_articleview(next_id);
                        }
                        var top = $('#article_' + next_id).position().top;
                        var bottom = top - $('#reader_pane').height() + $('#article_' + next_id).height();

                        var top2 = $('#article_' + next_id).position().top;
                        var bottom2 = (top2);

                        if(bottom > 0){
                            if(view_style == 2){
                                document.getElementById('article_' + next_id).scrollIntoView(1);
                                $('body').scrollTo(0); // Ugly hack for Chrome 71
                            }else{
                                document.getElementById('article_' + next_id).scrollIntoView(0);
                            }
                            setTimeout(function(){check_bottom();},1);
                        }else if(bottom2 < 0){
                            scroll_to_article(next_id,true,true);
                        }

                        if(scan_tracking == 1 && $('#article_' + next_id).data('read') == 0){
                            mark_read(next_id,false,true);
                        }
                    }else{
                        if($('#article_full_contents_' + next_id).is(':visible')){
                            $('#article_full_contents_' + next_id).hide(); // Ugly hack, but otherwise the whole toggle_article_contents() should be revisited;
                        }
                        //$('#article_header_text_' + next_id).click();
                        toggle_articleview(next_id);
                    }
                }else if(view_style == 1 || view_style == 3 || view_style == 4){
                    set_feed_param('opened_article',$(next_element).data('aid'));
                    $('.article_current').removeClass('article_current');
                    $('#article_' + $(next_element).data('aid')).addClass('article_current');
                    if(use_stripes == 0 && view_style == 1){
                        $('.article_title_link').removeClass('bluelink');
                        $('#article_title_link_' + $(next_element).data('aid')).addClass('bluelink');
                        $('.article_feed_info_link').removeClass('bluelink');
                        $('#article_feed_info_link_' + $(next_element).data('aid')).addClass('bluelink');
                    }

                    if($('#article_' + $(next_element).data('aid')).data('init') == 1){
                        $('#article_' + $(next_element).data('aid')).data('init',0);
                    }
                    if((scan_tracking == 1 || check_scroll_tracking()) && ($('#article_' + $(next_element).data('aid')).hasClass('article_unreaded') || $('#article_' + $(next_element).data('aid')).hasClass('article_unseen')) && keep_unread[$(next_element).data('aid')] != true){
                        mark_read($(next_element).data('aid'),false,true);
                    }

                    check_star_icon($(next_element).data('aid'));
                    check_tags_icon($(next_element).data('aid'));
                    check_broadcast_icon($(next_element).data('aid'));

                    if(disable_social == 0 || forced_team_social_features == 1){
                        if($('#user_comments_' + $(next_element).data('aid')).hasClass('user_comments_unloaded') && $(next_element).data('comments') > 0){
                            $('#user_comments_' + $(next_element).data('aid')).removeClass('user_comments_unloaded');
                            xajax_print_comments($(next_element).data('aid'),1);
                        }
                    }
                    scroll_to_article(next_id);
                }

                if($(this).next().next() && $(this).next().next().attr('id') == 'next_articles'){
                    check_bottom(true);
                }

                focus_article_url(next_id);

                return false;
            }else{
                if(jump_subscription === true && $(next_element).attr('id') == 'no_more_div'){
                    if(view_style == 2){
                        var $container = $('#three_way_contents');
                    }else if(view_style == 3 || view_style == 4){
                        var $container = $('#article_dialog');
                    }else{
                        var $container = $('#reader_pane');
                    }

                    var bottom_offset = ($container[0].scrollHeight - $container[0].scrollTop) - $container.height();

                    if(bottom_offset < 50 || view_style == 3 || view_style == 4){
                        jump_to_subscription("next_unread",true);
                    }else{
                        articles_moving = true;
                        if(articles_moving_timer)clearTimeout(articles_moving_timer);
                        if(mark_current_timer){
                            clearTimeout(mark_current_timer);
                        }
                        var spd = (scroll_top == 2 || scroll_top == 0) ? 0 : 250; //ms - instant or smooth
                        var h = $(document).height()-100; // comfortable offset

                        $container.scrollTo('+=' + h + 'px', spd, {axis:'y', offset: {top:-5, left: 0}});
                        articles_moving_timer = setTimeout(function(){ articles_moving = false; },spd + 150);
                    }
                }else{
                    if((view_style == 3 || view_style == 4) && $(next_element).attr('id') == 'no_more_div' && $('#article_dialog')[0]){
                        create_snackbar(_js("Reached end.")+' <a class="bluelink" href="javascript:void(0);" onclick="article_list_start_over();">'+_js("Start over")+'</a> '+_js("or")+' <a class="bluelink" href="javascript:void(0);" onclick="jump_to_subscription(\'next_unread\',true);">'+_js("go to next section")+'</a>.',_js('Dismiss'),false,3000);
                        return false;
                    }
                }
            }
        }
    });
    check_bottom();
}

function set_seen_ids(ids){
    seen_ids = ids;
}

// Function

function set_feed_param(key,value){
    feed_params[key] = value;
    save_feed_params_to_cookie();
}

function delete_feed_param(key){
    delete feed_params[key];
    save_feed_params_to_cookie();
}

function save_feed_params_to_cookie(){
    var filtered_feed_params = {view_unread: feed_params.view_unread, filter_type: feed_params.filter_type, filter_id: feed_params.filter_id, search_language: feed_params.search_language};
    createCookie('feed_params',JSON.stringify(filtered_feed_params),999);
}

var print_articles_timeout = null;
function print_articles(num,offset,start_from_date){
    if(print_articles_timeout){
        clearTimeout(print_articles_timeout);
        print_articles_timeout = null;
    }
    if(current_xajax_requests.read_article && marking_all_as_read){
        console_log('xAjax read_article request in progress. Waiting 100ms...');
        // do_loading();
        print_articles_timeout = setTimeout(function(){ print_articles(num,offset) },100);
        return;
    }

    if(!num){
        num = false;
    }
    if(!offset){
        offset = 0;

        if(feed_params.last_load_date){
            delete_feed_param('last_load_date');
        }
        if(feed_params.last_feed_id){
            delete_feed_param('last_feed_id');
        }
        if(feed_params.ap){
            delete_feed_param('ap');
        }
        if(feed_params.last_article_date){
            delete_feed_param('last_article_date');
        }
        if(feed_params.no_unread_checked){
            delete_feed_param('no_unread_checked');
        }
        if(feed_params.current_feed_ids){
            delete_feed_param('current_feed_ids');
        }
        if(feed_params.filtered_feeds){
            delete_feed_param('filtered_feeds');
        }
        if(feed_params.first_article_date){
            delete_feed_param('first_article_date');
        }
        similar_cache_urls = [];
        similar_cache_titles = [];
        similar_scanned_ids = [];
        similar_cache_urls.length = 0;
        similar_cache_titles.length = 0;
        similar_scanned_ids.length = 0;
        current_unread = 0;
        clear_article_divs();
        reader_pane_loading();

        if(start_from_date){
            set_feed_param('start_from_date',start_from_date);
        }
    }else{
        if(view_style == 3 && $('#tiles_clearer')[0]){
            $('#tiles_clearer').remove();
        }
    }

    clear_racing_xajax_requests();

    if(element_for_hide != null){
        $('#tree').find('.tree_link[id=link_' + element_for_hide + ']').each(function(){
            if(!$(this).hasClass('selected')){
                $('#tree').find('.parent_div[id=parent_' + element_for_hide + ']').each(function(){
                    $(this).addClass('parent_div_hidden');
                });
                element_for_hide = null;
            }
        });
    }

    if(ads_enabled && view_style == 3 && offset){
        var row_length = tile_view_get_row_length() + 1;
        set_feed_param('reader_pane_row_length',row_length);
    }

    xajax_print_articles(num,offset,feed_params);

    if(feed_params.reader_pane_row_length){
        delete_feed_param('reader_pane_row_length');
    }

    if(feed_params.filter_tag_search){
      delete_feed_param('filter_tag_search');
    }
}

function print_hub(num,offset){
    clear_racing_xajax_requests();
    clear_view_styles();
    $('#reader_pane').addClass('reader_pane_hub');
    xajax_print_hub(num,offset,feed_params);
}

function print_teams(params){
    clear_racing_xajax_requests();
    clear_view_styles();
    $('#reader_pane').addClass('reader_pane_teams').addClass('reader_pane_view_style_1');
    xajax_print_teams(params);
}

function reload_teams(){
    if(feed_params.filter_type == 'teams'){
        xajax_print_teams(current_teams_params);
    }else{
        view_teams();
    }
}

function build_tree(id,depth,force,scroll,callback){
    tree_scroll_saved = $('#tree_pane').scrollTop();
    xajax_build_tree(id,depth,force,scroll,callback);
}

function stripslashes(str) {
    str=str.replace(/\\'/g,'\'');
    str=str.replace(/\\"/g,'"');
    str=str.replace(/\\0/g,'\0');
    str=str.replace(/\\\\/g,'\\');
    return str;
}

function resize_no_more_div(){
    if($('#no_more_div').is('div')){
        var document_height = $(document).height();
        if($('#older_articles_hint')[0]){
            document_height -= $('#older_articles_hint').outerHeight();
        }

        document_height -= $('#subscriptions_buttons').outerHeight();

        if($('#footer').is(':visible')){
            document_height -= $('#footer').outerHeight();
        }

        var $top_notifications = $('#sitecontent').find('>.top_notification');
        if($top_notifications[0]){
            $top_notifications.each(function(){
                document_height -= $(this).outerHeight();
            });
        }

        if(ads_outside_large_rectangle_bottom == 1){
            if($('#reader_pane').find('.ad_size_large_rectangle')[0]){
                document_height -= $('#reader_pane').find('.ad_size_large_rectangle').outerHeight();
                if($('#reader_pane').find('.ad_title')[0]){
                    document_height -= $('#reader_pane').find('.ad_title').outerHeight();
                }
            }

            document_height -= 10; // top padding
        }

        if(document_height < 20){
            document_height = 20;
        }

        $('#no_more_div').css('line-height',(document_height) + 'px').css('height',(document_height) + 'px');
    }
}

function resize(width_offset){
    var height_offset = 0;
    if($('#footer').is(':visible')){
        height_offset += $('#footer').outerHeight();
    }
    if(ino) {
        height_offset += ino.getPlayerOffset();
    }
    var $top_notifications = $('#sitecontent').find('>.top_notification');
    if($top_notifications[0]){
        $top_notifications.each(function(){
            height_offset += $(this).outerHeight();
        });
    }

    if(ul == 1){
        height_offset += $('#subscriptions_buttons').outerHeight();
        var h = $(window).height();
        if(tree_docked == 1){
            var w = $(window).width();
        }else{
            var w = $(window).width() - (parseInt($('#tree_pane').outerWidth()));
        }

        var old_w = w;
        if(view_style == 2 && is_article_section()){ // 3way
            var window_width = $(window).width();
            var reader_w = w;
            var w ;
            if(tree_docked == 1){
                window_width += 200;
            }
            if(window_width >= 2500){
                w = 1000;
            }else if(window_width >= 2200 && window_width < 2500){
                w = 900;
            }else if(window_width >= 1900 && window_width < 2200){
                w = 800;
            }else if(window_width >= 1600 && window_width < 1900){
                w = 600;
            }else if(window_width >= 1500 && window_width < 1600){
                w = 500;
            }else if(window_width >= 0 && window_width < 1500){
            // }else if(window_width >= 1365 && window_width < 1500){
                // }else if(window_width >= 1300 && window_width < 1500){
                w = 400;
                // }else if(window_width < 1300){
                // w = 260;
                // ТОДО
            // }else if(window_width <= 1366){
            //     w = 320;
            }
            if(columnview_width > 0) {
                w = columnview_width;
            }
            $("#reader_pane").width(w + 'px').css(float_right,'auto');
        }else{
            var reader_w = w;
            if(w < 660){
                w = 660;
            }
            $("#reader_pane").width('auto').css(float_right,'0px');
        }
        var reader_pane_height_offset = 0;
        // if($('#new_articles_overlay').is(':visible')){
        //  reader_pane_height_offset = $('#new_articles_overlay').outerHeight();
        // }

        // $("#reader_pane").css("cssText", "height: " + h - height_offset - reader_pane_height_offset + "px; min-height: " + h - height_offset - reader_pane_height_offset + "px !important;");
        $("#reader_pane").height(h - height_offset - reader_pane_height_offset + 'px');
        // $("#reader_pane").css({height: h - height_offset - reader_pane_height_offset + 'px'});
        // $("#reader_pane").css('min-height', h - height_offset - reader_pane_height_offset + 'px', 'important');

        $("#discovery_overlay").height(h - height_offset + 'px');
        $("#splitter").height(h - height_offset + 'px');
        $("#column-resizer").height(h - height_offset + 'px');

        if($('#tree_ad')[0] && $('#tree_ad').is(':visible')){
            height_offset += $('#tree_ad').outerHeight();
        }
        $("#tree_pane").height(h - height_offset + 'px');

        if(view_style == 2 && articles_initial_load == true){ // 3way
            $("#three_way_contents").height(h - height_offset + 'px');
            if(tree_docked == 1){
                $("#three_way_contents").css(float_left,parseInt($('#reader_pane').outerWidth()));
                $("#column-resizer").css(float_left, $("#three_way_contents").css(float_left));
                if(ads_enabled && $("#three_way_contents_ad")[0]){
                    $("#three_way_contents_ad").css(float_left,parseInt($('#reader_pane').outerWidth()));
                }
            }else{
                var tree_pane_nonjq = document.getElementById('tree_pane');
                $("#three_way_contents").css(float_left,parseInt(tree_pane_nonjq.offsetWidth) + parseInt($('#reader_pane').outerWidth()));
                $("#column-resizer").css(float_left, $("#three_way_contents").css(float_left));
                if(ads_enabled && $("#three_way_contents_ad")[0]){
                    $("#three_way_contents_ad").css(float_left,parseInt(tree_pane_nonjq.offsetWidth) + parseInt($('#reader_pane').outerWidth()));
                }
            }
            //$("#three_way_contents").width($(window).width() - parseInt($('#tree_pane').outerWidth()) - parseInt($('#reader_pane').width()) + 'px');
        }


        if(ads_enabled){
            if($('#ads_right_skyscraper')[0]){
                if(view_style == 2){
                    $('#three_way_contents').css(float_right,$('#ads_right_skyscraper').outerWidth());
                }else{
                    $('#reader_pane').css(float_right,$('#ads_right_skyscraper').outerWidth());
                }
            }
            if($('#sinner_container').is(':visible')){
                var ad_top_offset = 48;
                if($('.top_notification')[0]){
                    $('.top_notification').each(function(){
                        ad_top_offset += $(this).outerHeight();
                    });
                }
                $('#sinner_container').css('top',ad_top_offset);
            }
        }

        fix_article_headers_width(w);
        check_article_groups_headings();

        if(view_style == 2){ // 3way
            if($('#three_way_contents').find('.iframe_embed_article')[0]){
                $('#three_way_contents').find('.iframe_embed_article').each(function(){
                    $(this).width($(this).parent().parent().width()-10 + 'px').height($('#reader_pane').height()-190 + 'px');
                });
            }
        }else if($('#article_dialog')[0]){
            if($('#article_dialog').find('.iframe_embed_article')[0]){
                $('#article_dialog').find('.iframe_embed_article').each(function(){
                    $(this).width($(this).parent().parent().width()-10 + 'px').height($('#reader_pane').height()-190 + 'px');
                });
            }
        }else{
            if($('#reader_pane').find('.iframe_embed_article')[0]){
                $('#reader_pane').find('.iframe_embed_article').each(function(){
                    $(this).width($(this).parent().parent().width()-10 + 'px').height($('#reader_pane').height()-190 + 'px');
                });
            }
        }

        remove_article_classes();
        check_tile_widths();
        check_reader_pane_message();
        check_older_articles_hint();
        update_window_dimensions_cookie();
        resize_toolbar_heading();
        resize_no_more_div();
    }

    if($('#static_search_menu')[0]){
        fix_menu_position('#static_search_menu');
    }

    if($('#reader_pane').find('.article_list_tabs_wrapper')[0]){
        var $prev;
        var prev_top;
        $('#reader_pane').find('.article_list_tabs_wrapper').find('.article_list_tab').each(function(){
            var $this = $(this);
            var top = $this.offset().top;
            if($prev && prev_top){
                if(top > prev_top){
                    $prev.addClass('article_list_tab_last');
                    $this.addClass('article_list_tab_first');
                }else{
                    $prev.removeClass('article_list_tab_last');
                    $this.removeClass('article_list_tab_first');
                }
            }
            $prev = $this;
            prev_top = top;
        });
    }
}

function check_reader_pane_message(){
    if($('.reader_pane_message')[0]){
        $('.reader_pane_message').each(function(){
            if($(this).parents('#reader_pane')[0]){
                var container = '#reader_pane';
            }else{
                var container = '#three_way_contents';
            }
            var height_offset = 0;
            $('#reader_pane').find('.profile_dialog_wrapper_full').each(function(){
                height_offset += $(this).outerHeight(true);
            });
            $('#reader_pane').find('.team_card').each(function(){
                height_offset += $(this).outerHeight(true);
            });

            $(this).css("top", Math.floor(($(container).height() - $(this).height() + height_offset) / 2.2) + "px");
            if(direction == 'rtl'){
                $(this).css("left", Math.floor(($(container).width() - $(this).width()) / 2 + $(container).scrollLeft()) + "px");
            }else{
                $(this).css("left", Math.floor(($(container).width() - $(this).width()) / 2 + $(container).scrollLeft()) + "px");
            }
        });
    }
}

function get_scrollbar_width(){
    var scroll_div = document.createElement("div");
    scroll_div.style.cssText = 'width:100px;height:100px;overflow:scroll !important;position:absolute;top:-9999px';
    document.body.appendChild(scroll_div);
    var result = scroll_div.offsetWidth - scroll_div.clientWidth;
    document.body.removeChild(scroll_div);
    return result;
}


function resize_toolbar_heading(){
    if(!$('#sb_rp_heading')[0]){
        return;
    }

    var width = $(window).width();
    if(device_type != 'phone' && width < 930){
        return;
    }
    if(direction == 'ltr'){
        width -= $('#sb_rp_heading').position().left;
        if($('#sb_rp_gear').is(':visible')){
            width -= parseInt($('#sb_rp_gear').css('right'));
        }
    }else{
        width -= ($('#sb_rp_ribbon').offset().left + $('#sb_rp_ribbon').outerWidth()) - ($('#sb_rp_heading').offset().left + $('#sb_rp_heading').outerWidth());
        width -= parseInt($('#sb_rp_gear').css('left'));
    }

    width -= $('#sb_rp_tools').outerWidth();
    if($('#sb_rp_subscribe')[0]){
        width -= $('#sb_rp_subscribe').outerWidth();
        width -= 6 * 5; // 3 spacers and padding
    }

    if($('#sb_tree_part').is(':visible')){
        width -= $('#sb_tree_part').outerWidth();
    }

    if($('#sb_rp_show').is(':visible')){
        width -= $('#sb_rp_show').outerWidth();
    }

    if($('#sb_rp_notifications').is(':visible')){
        width -= $('#sb_rp_notifications').outerWidth();
    }

    if($('#sb_rp_gear').is(':visible')){
        width -= $('#sb_rp_gear').outerWidth();
    }

    width -= 20; //Comfort

    $('#sb_rp_heading').css('max-width',width + 'px');
}

function resize_preferences(){
    return;
    if(device_type == 'phone'){
        return;
    }
    var top = 0;
    top += $('#preferences_dialog_buttonbar').height();
    var content_height = $('#preferences_dialog_wrapper').height() - top + 'px';
    $('#preferences_categories').css('height',content_height).css('max-height',content_height);
    $('#preferences_wrapper').css('height',content_height).css('max-height',content_height);

    if($('.preferences_wrapper_inner .inno_tabs_content')[0]){
        $('.preferences_wrapper_inner .inno_tabs_content').each(function(){
            var height = $('#preferences_wrapper').height();
            height -= $(this).position().top;
            height -= $(this).find('.inno_tabs_header').eq(0).outerHeight() + 21;

            $(this).css('overflow','auto').css('max-height',height + 'px');
        });
    }
}

function activate_preferences_autosaves(dialog){
    if(!dialog){
        dialog = '#preferences_dialog';
    }
    $(dialog).find('.preferences_autosave_input').on('change',function(e){
        var $this = $(this);
        var key = $this.attr('id');
        if(key){
            key = key.replace(/preference_/,'');
            var value;
            if($this.is(':checkbox')){
                value = $this.is(':checked') ? 1 : 0;
            }else{
                value = $this.val();
            }

            if(key == 'articles_filter_enabled'){
                key = 'articles_filter';
                if(value > 0){
                    value = $('#preference_articles_filter').val();
                }
            }

            xajax_save_user_pref(key, value);
        }
    });
}

function resize_bundle_dialog(){
    return;
    var content_height = $('#edit_bundle_dialog_wrapper').height() - 65 + 'px';
    $('#edit_bundle_dialog').css('height',content_height).css('max-height',content_height);

    $('#edit_bundle_feeds_available').css('height','100%').css('max-height','100%');
    $('#bundles_list_in_bundle').css('height','100%').css('max-height','100%');

    var top = 0;
    top += $('#edit_bundle_dialog_buttonbar').height();
    top += $('#edit_bundle_header').outerHeight();
    top += $('#edit_bundle_feeds_in_bundle_caption').outerHeight();
    var left_height = $('#edit_bundle_dialog').height() - top - $('#edit_bundle_available_feeds_search').outerHeight() + 'px';
    var right_height = $('#edit_bundle_dialog').height() - top + 'px';
    $('#edit_bundle_feeds_available').css('height',left_height).css('max-height',left_height);
    $('#edit_bundle_feeds_inside').css('height',right_height).css('max-height',right_height);

    $('#bundles_list_available').css('height',left_height).css('min-height',left_height);
    $('#bundles_list_in_bundle').css('height',right_height).css('min-height',right_height);
}

function resize_onboard_dialog(dialog_type){
    if(device_type == 'phone'){
        var offset_bottom = 0;
    }else{
        var offset_bottom = 20;
    }
    var content_height = $(document).height() - $('#onboard_dialog_wrapper').offset().top - $('#onboard_dialog').find('.anon_info_wrapper').eq(0).outerHeight() - $('#onboard_bottom_bar').outerHeight() - offset_bottom;

    $('#onboard_categories_wrapper').css('height',content_height).css('max-height',content_height);
}

function close_preferences(){
    delete_feed_param('subscriptions_list_filter');
    delete_feed_param('subscriptions_list_folder_id');
    delete_feed_param('subscriptions_list_feed_type');
    delete_feed_param('subscriptions_list_limit');
    phash_remove();
    // $('#preferences_dialog_scroll_wrapper').remove();
}

function remove_article_classes(){
    for(var i=0; i<=4; i++){
        $('#reader_pane').removeClass('reader_pane_view_style_' + i);
    }
    if(!is_article_section()){
        $('#reader_pane').removeClass('tiles_wrapper').removeClass('tiles_wrapper_2').removeClass('tiles_wrapper_3');
        return;
    }else{
        var this_view_style = (feed_params.view_style != undefined) ? feed_params.view_style : view_style;
        $('#reader_pane').addClass('reader_pane_view_style_' + this_view_style);
    }
}

function check_tile_widths(){
    if(!is_article_section()){
        return;
    }

    var this_view_style = (feed_params.view_style != undefined) ? feed_params.view_style : view_style;
    if(this_view_style != 3){
        $('#reader_pane').removeClass('tiles_wrapper');
        return;
    }

    var width = $('#reader_pane').width();
    $('#reader_pane').addClass('tiles_wrapper');

    if(width >= 1080){
        $('#reader_pane').removeClass('tiles_wrapper_2').removeClass('tiles_wrapper_3');
    }else if(width >= 890 && width < 1080){
        $('#reader_pane').removeClass('tiles_wrapper_2').addClass('tiles_wrapper_3');
    }else if(width < 890){
        $('#reader_pane').removeClass('tiles_wrapper_3').addClass('tiles_wrapper_2');
    }
}

function fix_article_headers_width(w){
    $('#reader_pane').find('.header_date').each(function(){
        var this_id = $(this).attr('id').replace(/header_date\_/,'');
        fix_article_header_width(this_id,w)
    });
}

function fix_article_header_width(id,w){
    if(view_style == 0){
        if($('#article_header_' + id).attr('dir') == 'rtl'){
            //$('#article_header_' + id).css('padding-' + float_right,parseInt($('#ad_' + id).outerWidth()) + 5 + 'px');
        }
    }

    if(direction == 'ltr'){
        if($('#article_header_' + id).attr('dir') == 'rtl'){

            w = 0;

            w = $("#article_" + id).innerWidth();

            w -= $('#article_' + id + ' .article_favicon').outerWidth() + (parseInt($('#article_' + id + ' .article_favicon').css('margin-left')) + parseInt($('#article_' + id + ' .article_favicon').css('margin-left')));
            w -= $('#ad_' + id).outerWidth();

            w -= 20; // fuck

            w -= $('#article_' + id + ' .article_feed_title').outerWidth();
            w -= $('#article_' + id + ' .article_title_wrapper').outerWidth();

            w-= 50; // fuck
            $("#article_short_contents_" + id).width(w + 'px');
        }

        return;
    }


    w = 0;


    w = $("#article_" + id).innerWidth();

    w -= $('#article_' + id + ' .article_favicon').outerWidth() + (parseInt($('#article_' + id + ' .article_favicon').css('margin-left')) + parseInt($('#article_' + id + ' .article_favicon').css('margin-left')));

    if(view_style == 0){
        w-= 5; // fuck
    }else{
        w += 3; // fuck
    }
    $("#article_header_text_" + id).width(w + 'px');

    w -= $('#article_' + id + ' .article_feed_title').outerWidth();
    w -= $('#article_' + id + ' .article_title_wrapper').outerWidth();

    if(view_style == 0){
        w-= 35; // fuck
    }else{
        w-= 35; // fuck
    }
    $("#article_short_contents_" + id).width(w + 'px');
}

function show_subscribe_div(highlight){
    // alias function
    toolbar_action('add',highlight);
}

function set_user_folders(folders){
    user_folders = folders;
}

function get_folders_from_tree(only_tags,only_folders,filter_organization_folders){
    if(user_folders === null){
        return null;
    }
    if(only_tags){
        return user_folders[0];
    }else if(only_folders){
        return user_folders[1];
    }else{
        if(user_folders[0].length == 0 && user_folders[1].length == 0){
            return [];
        }
        return user_folders[0].concat(user_folders[1]);
    }

    return [];
    // old method

    var folders = [];
    $('#tree .parent_div, #child_library .parent_div').each(function(){
        if($(this).attr('id').split(/\_/)[1] == 0){
            if(only_folders){
                if(!$(this).find('.plus_img')[0]){
                    return true;
                }
            }else if(only_tags){
                if(!$(this).find('.feed_favicon').hasClass('icon-add-menu-tag')){
                    return true;
                }
            }

            if(filter_organization_folders){
                if($(this).parents('#tree_team')[0]){
                    return true;
                }
            }
            var folder_id = $(this).attr('id').replace(/parent\_0\_/,'');
            var folder_name = $(this).children().eq(0).children().eq(1).children().eq(1).html();
            // Decode &amp; and such
            try{
                folder_name = $.parseHTML(folder_name)[0].textContent;
            }catch(e){}
            folders.push({id: folder_id, name: folder_name});
        }
    });

    folders.sort(function(a, b) {
        var textA = a.name.toLowerCase();
        var textB = b.name.toLowerCase();

        if (textA < textB)
            return -1;
        if (textA > textB)
            return 1;
        return 0;
    });

    return folders;
}

function fill_add_subscription_more_options(){
    var html = '';
    var folder_id = '';
    var folder_name = '';
    var selected = '';
    var checked = '';
    $('#tree .parent_div, #child_tags .parent_div').each(function(){
        if($(this).attr('id').split(/\_/)[1] == 0){
            folder_id = $(this).attr('id').replace(/parent\_0\_/,'');
            folder_name = $(this).children().eq(0).children().eq(1).children().eq(1).html();
            checked = (folder_id == added_folder_id) ? 'checked' : '';

            html += '<div class="add_subscription_folder_div" title="' + folder_name + '"><input type="checkbox" ' + checked + ' id="add_in_folder_' + folder_id + '" class="aif_checkboxes" value="' + folder_id + '"><label for="add_in_folder_' + folder_id + '">' + folder_name + '</label></div>';
        }
    });
    if(html == ''){
        var error_str = _js("You don\'t have any folders yet.");
        html = '<div class="ui-state-highlight ui-corner-all" style="padding:10px;width:91%;text-align:center;margin:10px;">' + error_str + ' <a href="javascript:void(0);" class="underlink bluelink" onclick="add_folder(0,\'add_subscription\')">'+_js("Add folder")+'</a>.</div>';
    }else{
        html += '<div class="add_subscription_folder_div add_subscription_folder_div_folder" title="'+_js("New folder")+'"><a href="javascript:void(0);" class="bluelink" onclick="add_folder(0,\'add_subscription\')">'+_js("New folder")+'</a></div>';
    }
    if(added_folder_id){
        added_folder_id = null;
    }
    $('#add_subscription_options_folders_checkboxes').html(html);
}

function catch_enter(e){
    if(!e){
        var e = window.event;
    }
    try{
        var code = (e.keyCode) ? e.keyCode : e.which;
        if(code == 13 || code == 3){
            return true;
        }else{
            return false;
        }
    }catch(e){
        return false;
    }
}

function catch_esc(e){
    if(!e){
        var e = window.event;
    }
    try{
        var code = (e.keyCode) ? e.keyCode : e.which;
        if(code == 27){
            return true;
        }else{
            return false;
        }
    }catch(e){
        return false;
    }
}

function xalert(text,type,callback){
    if(type == 0 || type == undefined){
        var dialog_div = 'xalert';
    }else{
        var dialog_div = 'xinfo';
    }
    dialog(dialog_div,{content: text, callback: callback});
}

function xconfirm(text,yes_function,no_function,extra_params){
    var params = {content: text, yes_function: yes_function, no_function: no_function};
    if(extra_params){
        for(var i in extra_params){
            params[i] = extra_params[i];
        }
    }
    dialog('xconfirm',params);
}

function uncheck_checkbox(el){
    $(el).addClass('icon-article_topbar_mark_as_read_empty').removeClass('icon-article_topbar_mark_as_read_full').attr('title', _js('Mark as unread') + ' (' + _js('Hotkey') + ': M)');

}

function check_checkbox(el){
    $(el).removeClass('icon-article_topbar_mark_as_read_empty').addClass('icon-article_topbar_mark_as_read_full').attr('title', _js('Mark as read') + ' (' + _js('Hotkey') + ': M)');
}

function toggle_checkbox(el){
    $(el).toggleClass('icon-article_topbar_mark_as_read_empty').toggleClass('icon-article_topbar_mark_as_read_full');
}

function toggle_radio(el){
    $(el).toggleClass('icon-radio_unchecked').toggleClass('icon-radio_checked');
}

function set_tmp_assign_to_folder(id){
    if(menu_checkbox_toggle('#tmp_assign_folder_' + id) == 0){
        for(var i in tmp_folders){
            if(tmp_folders[i] == id){
                delete tmp_folders[i];
            }
        }
    }else{
        tmp_folders.push(id);
    }
}

// Function add_subscription

function toggle_articleview_conditional(id){
    if($('#article_full_contents_' + id).css('display') == 'none'){
        toggle_articleview(id);
    }
}

function article_click_trap(event,id){
    var mouse_button = 'left';
    if(event){
        mouse_button = get_mouse_button(event);
        if(!bulk_article_select && (event.ctrlKey|| event.metaKey || event.shiftKey)){
            mouse_button = 'middle';
        }
    }

    if(mouse_button != 'middle'){
        event.returnValue = false;
        if(!isie8){ event.stopPropagation(); }
        return false;
    }

    return true;
}

function article_click_trap_async(event,id,should_mark_as_read){
    var mouse_button = 'left';
    if(event){
        mouse_button = get_mouse_button(event);
        if(!bulk_article_select && (event.ctrlKey|| event.metaKey || event.shiftKey)){
            mouse_button = 'middle';
        }
    }

    if(mouse_button == 'middle'){
        add_score_queue(id,'click');
        if(should_mark_as_read){
            if($('#article_' + id).data('read') == 0){
                mark_read(id,false,true);
            }
        }
    }

    if(mouse_button != 'middle' && (view_style == 3 || view_style == 4)){
        event.returnValue = false;
        if(!isie8){ event.stopPropagation(); }
        return false;
    }
}

function bulk_unselect_all_articles(){
    $('#reader_pane').find('.article_bulk_selected').removeClass('article_bulk_selected');
    check_bulk_articles();
}

function bulk_select_article_range(id){
    window.getSelection().removeAllRanges();

    if(!last_bulk_selected_article){
        var convert_class = '';
        if(view_style == 2){
            convert_class = 'article_current_3way';
        }else if(view_style == 3 || view_style == 4){
            convert_class = 'article_current';
        }else if(view_style == 0){
            convert_class = 'article_current_collapsed';
        }

        if(convert_class != ''){
            if($('#reader_pane').find('.' + convert_class)[0]){
                var tmp_id = $('#reader_pane').find('.' + convert_class).data('aid');
                if(tmp_id && tmp_id != id){
                    $('#reader_pane').find('.' + convert_class).removeClass(convert_class);
                    bulk_select_article(tmp_id);
                    last_bulk_selected_article = tmp_id;
                }else{
                    return;
                }
            }
        }
    }

    if(!last_bulk_selected_article){
        try{
            last_bulk_selected_article = $('#reader_pane').find('.ar').not('.hidden').eq(0).data('aid');
            bulk_select_article(last_bulk_selected_article);
        }catch(e){

        }
    }

    if(!last_bulk_selected_article || id == last_bulk_selected_article){
        return;
    }

    var is_selecting = false;
    $('#reader_pane').find('.ar').not('.hidden').each(function(){
        var current_id = $(this).data('aid');
        if((current_id == id || current_id == last_bulk_selected_article) && is_selecting == false){
            is_selecting = true;
        }else if((current_id == id || current_id == last_bulk_selected_article) && is_selecting == true){
            is_selecting = false;
        }

        if(is_selecting && current_id != last_bulk_selected_article && !$(this).hasClass('article_bulk_selected')){
            $(this).addClass('article_bulk_selected');
        }
    });

    if(!$('#article_' + id).hasClass('article_bulk_selected')){
        bulk_select_article(id);
    }

    check_bulk_articles();

}

function bulk_select_article(id){
    last_bulk_selected_article = id;
    var convert_class = '';
    if(view_style == 2){
        convert_class = 'article_current_3way';
    }else if(view_style == 3 || view_style == 4){
        convert_class = 'article_current';
    }else if(view_style == 0){
        convert_class = 'article_current_collapsed';
    }

    if(convert_class != ''){
        if($('#reader_pane').find('.' + convert_class)[0]){
            var tmp_id = $('#reader_pane').find('.' + convert_class).data('aid');
            if(tmp_id && tmp_id != id){
                $('#reader_pane').find('.' + convert_class).removeClass(convert_class);
                bulk_select_article(tmp_id);
            }else{
                return;
            }
        }
    }

    $('#article_' + id).toggleClass('article_bulk_selected');
    $('.article_current_collapsed').removeClass('article_current_collapsed');
    check_bulk_articles();
}

function check_bulk_articles(){
    var selected_articles = 0;
    var starred_articles = 0;
    var unread_articles = 0;
    var options = {};

    $('#reader_pane').find('.article_bulk_selected').each(function(){
        var dataset = $(this).data();
        selected_articles++;

        if(dataset.sunk == '1'){
            options.contains_sunken = 1;
        }

        if(dataset.read == '0'){
            options.contains_unread = 1;
            unread_articles++;
        }

        if(dataset.fav == '1'){
            options.contains_starred = 1;
            starred_articles++;
        }

        if(dataset.brd == '1'){
            options.contains_broadcast = 1;
        }
    });

    if(starred_articles == selected_articles){
        options.all_starred = 1;
    }

    if(unread_articles == selected_articles){
        options.all_unread = 1;
    }

    if(selected_articles > 0){
        $('#bulk_article_actions_num').html(__js('%s article selected', '%s articles selected', selected_articles));
        build_bulk_articles_options_div(options);
        show_bulk_articles_options_div();
        has_bulk_selected_articles = true;
    }else{
        hide_bulk_articles_options_div();
        last_bulk_selected_article = null;
        has_bulk_selected_articles = false;
    }
}

function bulk_articles_execute_action(action, options){
    if(!user_access[access_pro]){
        return;
    }
    var article_ids = [];
    var encoded_article_ids = [];
    $('#reader_pane').find('.article_bulk_selected').each(function(){
        if(action == 'read_later'){
            if(!options.contains_starred || $(this).data('fav') == 1){
                set_fav($(this).data('aid'));
            }
        }else if(action == 'mark_read' && !options.contains_sunken){
            if(!options.contains_unread || $(this).data('read') == 0){
                mark_read($(this).data('aid'));
            }
        }else if(action == 'new_tab'){
            // open_url(get_article_url($(this).data('aid')), true, true);
            open_url_background(get_article_url($(this).data('aid')),true);
        }
        article_ids.push($(this).data('aid'));
    });

    for(var i in article_ids){
        encoded_article_ids.push(encode_article_id(article_ids[i]));
    }

    if(action == 'pdf'){
        do_loading(_js("Generating PDF..."));
        xajax_print_pdf(article_ids);
    }else if(action == 'csv'){
        do_loading(_js("Generating CSV..."));
        xajax_print_csv(article_ids);
    }else if(action == 'email'){
        show_dialog('send_email_dialog',{article_id: article_ids});
    }else if(action == 'print'){
        return open_share_window('/print.php?id=' + encoded_article_ids.join(','),null,null,1,{content: '[CONTENT]'},null,null);
    }else if(action == 'tags'){
        show_bulk_article_tags_menu(article_ids);
    }else if(action == 'broadcast'){
        broadcast_article(article_ids, null, true);
    }

    if(action == 'read_later' || action == 'mark_read'){
        check_bulk_articles();
    }

    l('Bulk actions', 'Executed action ' + action, '');
}

function build_bulk_articles_options_div(options){
    var buttons_bar = document.getElementById('bulk_article_actions_buttons');
    buttons_bar.innerHTML = '';
    var extra_class = '';

    buttons_bar.appendChild(create_dom_element('div', {
        className: 'bulk_article_actions_button',
        title: options.contains_starred ? _js('Remove from Read later') : _js('Add to Read later'),
        innerHTML: '<span class="icon20 icon-' + (options.all_starred == 1 ? 'article_topbar_read_later_full star_full' : 'article_topbar_read_later_empty') + '"></span>',
        onclick: function(){ bulk_articles_execute_action('read_later', options) }
    }));

    extra_class = options.contains_sunken ? ' bulk_article_actions_button_disabled' : '';
    buttons_bar.appendChild(create_dom_element('div', {
        className: 'bulk_article_actions_button' + extra_class,
        title: options.contains_unread ? _js('Mark as read') : _js('Mark as unread'),
        innerHTML: '<span class="icon20 icon-' + (options.all_unread ? 'article_topbar_mark_as_read_full' : 'article_topbar_mark_as_read_empty') + '"></span>',
        onclick: function(){ bulk_articles_execute_action('mark_read', options) }
    }));

    buttons_bar.appendChild(create_dom_element('div', {
        className: 'bulk_article_actions_button',
        title: _js('Add tags'),
        innerHTML: '<span class="icon20 icon-all-tags"></span>',
        id: 'bulk_article_actions_button_tags',
        onclick: function(){ bulk_articles_execute_action('tags', options) }
    }));

    if(joined_teams && joined_teams.length > 0){
        buttons_bar.appendChild(create_dom_element('div', {
            className: 'bulk_article_actions_button',
            title: _js('Send to team channels'),
            innerHTML: '<span class="icon20 icon-artcile_topbar_team_broadcast"></span>',
            onclick: function(){ bulk_articles_execute_action('broadcast', options) }
        }));
    }

    buttons_bar.appendChild(create_dom_element('div', {
        className: 'bulk_article_actions_button',
        title: _js('Email articles'),
        innerHTML: '<span class="icon20 icon-service_email_article"></span>',
        onclick: function(){ bulk_articles_execute_action('email', options) }
    }));

    // buttons_bar.appendChild(create_dom_element('div', {
    //     className: 'bulk_article_actions_button',
    //     title: _js('Send to device'),
    //     innerHTML: '<span class="icon20 icon-service_send_to_device"></span>',
    //     onclick: function(){ bulk_articles_execute_action('device', options) }
    // }));

    buttons_bar.appendChild(create_dom_element('div', {
        className: 'bulk_article_actions_button',
        title: _js('Save as PDF'),
        innerHTML: '<span class="icon20 icon-service_save_as_pdf"></span>',
        onclick: function(){ bulk_articles_execute_action('pdf', options) }
    }));

    buttons_bar.appendChild(create_dom_element('div', {
        className: 'bulk_article_actions_button',
        title: _js('Print articles'),
        innerHTML: '<span class="icon20 icon-service_print_article"></span>',
        onclick: function(){ bulk_articles_execute_action('print', options) }
    }));

    buttons_bar.appendChild(create_dom_element('div', {
        className: 'bulk_article_actions_button',
        title: _js('Open articles in separate browser tabs'),
        innerHTML: '<span class="icon20 icon-new_tab_small"></span>',
        onclick: function(){ bulk_articles_execute_action('new_tab', options) }
    }));

    buttons_bar.appendChild(create_dom_element('div', {
        className: 'bulk_article_actions_button',
        innerHTML: '<span class="icon20 icon-article_topbar_more_menu"></span>',
        id: 'bulk_article_actions_button_more',
        onclick: function(){ show_bulk_articles_more_menu(); }
    }));


}

function show_bulk_articles_more_menu(){
    if($('#list_menu')[0]){
        $('#list_menu').remove();
    }else{
        $('#list_menu').remove();
        var el = '#bulk_article_actions_button_more';

        setTimeout(function(){
            var menu = [];
            $n = 0;
            menu[n++] = {type: 'link', text: _js("Export to CSV"), click: "bulk_articles_execute_action('csv', {})"};
            menu[n++] = {type: 'link', text: _js("Cancel current selection"), click: "bulk_unselect_all_articles()"};
            menu[n++] = {type: 'link', text: _js("Disable bulk operations"), click: "disable_bulk_articles_selection()"};
            var line_added = false;

            document.body.appendChild(inno_toolbar_button(false,false,'',menu));
            var menu_top = $(el).offset().top + $(el).outerHeight()
            if(direction == 'ltr'){
                $('#list_menu')
                  .css({ width: '250px'})
                  .css(float_left,'auto')
                  .show();
            }else{
                $('#list_menu')
                  .css({ maxWidth: '250px'})
                  .css('top',menu_top + 'px')
                  .css('left',($(el).offset().left) + 'px')
                  .css('right','auto')
                  .show();
            }

            new Popper($(el).get(0), $('#list_menu'), { placement: 'bottom-center' })
            opened_menu = 'list';
        },10);
    }

    l('Bulk actions', 'Menu shown', '');
}

function disable_bulk_articles_selection(){
    xconfirm(_js('Do you want to disable the functionality to select multiple articles?') + '<p>' + _js('You can enable it again from Preferences -> Interface -> Article listing') + '</p>', 'disable_bulk_articles_selection_do()');
}

function disable_bulk_articles_selection_do(){
    bulk_unselect_all_articles();
    bulk_article_select = 0;
    xajax_save_user_pref('bulk_article_select',0);
    l('Bulk actions', 'Disabled bulk actions', '');
}

function show_bulk_articles_options_div(){
    if(!user_access[access_pro]){
        $('#bulk_article_actions').find('.bulk_article_actions_upgrade').show();
        $('#bulk_article_actions_buttons').find('.bulk_article_actions_button').not(':last-of-type').addClass('bulk_article_actions_button_disabled');
    }

    $('#bulk_article_actions').css('top', '');
    $('#bulk_article_actions').addClass('bulk_article_actions_showed');

    $("#bulk_article_actions").on('transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd', function(){
        if(!($(this).hasClass('bulk_article_actions_showed'))){
            $('#bulk_article_actions').css('top', '-1000px');
        }
    });
}

function hide_bulk_articles_options_div(){
    $('#bulk_article_actions').removeClass('bulk_article_actions_showed');

}

function toggle_articleview(id,no_helpers,event,extra){
    $('#list_menu_article').remove();
    inno_dialog_close('article_text_preferences');
    var mouse_button = 'left';
    var $article = $('#article_' + id);
    var mouse_gesture = false;
    var article_opened = false;
    if(event){
        if(event.target){
            if($(event.target).hasClass('star_img')){
                return false;
            }
            if($(event.target).hasClass('article_unread_dot') || $(event.target).hasClass('article_unread_dot_internal') || $(event.target).hasClass('article_unread_dot_external')){
                return false;
            }
        }
        mouse_button = get_mouse_button(event);
        if(!bulk_article_select && (event.ctrlKey|| event.metaKey || event.shiftKey)){
            mouse_button = 'middle';
        }
        if(mouse_button == 'left'){
            mouse_gesture = true;
        }
    }

    if(mouse_button == 'right'){
        return true;
    }else if(mouse_button == 'middle'){
        $article.data('init',0);
        if($article.data('read') == 0){
            mark_read(id,false,true);
        }
        var view_styles_txt = ['List view', 'Expanded view', 'Column view', 'Card view', 'Magazine view'];
    }else{
        $('#reader_pane').find('.ar').not('.hidden, .ar_skip').data('explicitly-collapsed',0).attr('data-explicitly-collapsed',0);

        if(event && (event.metaKey || event.ctrlKey || event.shiftKey) && mouse_gesture && mouse_button == 'left'){
            if(event.shiftKey){
                bulk_select_article_range(id);
            }else{
                bulk_select_article(id);
            }
            event.stopPropagation();
            return false;
        }

        bulk_unselect_all_articles();

        if(view_style == 2 || force_no_scroll != 1 && auto_collapse == 1 && (view_style == 0 || view_style == 3 || view_style == 4)){
            $('#reader_pane').find('.ar_showed').not('.ar_skip').each(function(){
                var this_id = $(this).attr('id').replace(/article\_/,'');
                if(this_id != id){
                    purge_ads('inner_sinner');
                    $('#article_full_contents_' + this_id).hide().html('');
                    $('#article_' + this_id).removeClass('article_expanded');
                    if(view_style != 2){
                        $('#article_short_contents_' + this_id).css('display','block');
                    }
                    // clear bing object
                    bing_originals = {};
                }
            });
        }

        if(view_style == 3 || view_style == 4){
            if($('#article_dialog')[0]){
                var article_full_contents_extra_class = '';
                if($('#article_' + id).data('type') == 'microblog'){
                    article_full_contents_extra_class += ' article_full_contents_microblog';
                }

                $('#article_dialog').html('<div id="article_full_contents_' + id + '" class="article_full_contents' + article_full_contents_extra_class + '"><div>');
                inno_dialog_resize();
            }else{
                dialog('article_dialog',{id:id});
                if(ads_permitted && ads_below_article_dialog == 1 && device_type != 'phone' && !$('#article_below_dialog')[0]){
                    dialog('article_below_dialog');

                    if(!$('.article_below_helper_close')[0]){
                        var dialog_helpers_close = document.createElement('div');
                        dialog_helpers_close.className = 'inno_dialog_close_button';
                        dialog_helpers_close.id = 'article_below_dialog_close_button';
                        dialog_helpers_close.title = _js('Remove ads');
                        dialog_helpers_close.innerHTML = '<span class="icon16 icon-cross"></span>';

                        $('#article_below_dialog_wrapper').append(dialog_helpers_close);

                        $(dialog_helpers_close).on('click',function(){
                            view_upgrade({feature: 'noads'});
                        }).disableSelection();
                    }

                    var div_id = uniqid('below_ad-');
                    var ad_html = '<div id="' + div_id + '" class="below_article_ad leaderboard_ad ad_size_leaderboard sinner"></div>';
                    var script = ads_below_article_leaderboard_script;

                    $('#article_below_dialog').html(ad_html);
                    postscribe($('#' + div_id),script);
                }
            }
        }

        if($('#article_full_contents_' + id).css('display') == 'none'){
            article_opened = true;
            if(view_style == 2){
                $('#reader_pane').find('.article_current_3way').removeClass('article_current_3way');
            }

            if($article.hasClass('article_unseen')){
                $('#article_' + id + ', #ad_' + id).finish();
            }

            if(view_style == 0 || view_style == 2 || view_style == 3 || view_style == 4){
                $('#reader_pane').find('.article_current').removeClass('article_current');
                $('#reader_pane').find('.article_current_collapsed').removeClass('article_current_collapsed');
            }
            sanitize_article(id,false,no_helpers);
            build_article_annotations(id);
            // if(full_width == 1){
            //     $('#reader_pane').find('.article_content').css('max-width','100%');
            // }
            set_feed_param('opened_article',id);
            if(use_stripes == 0){
                $('.article_title_link').removeClass('bluelink');
                $('#article_title_link_' + id).addClass('bluelink');
                $('.article_feed_info_link').removeClass('bluelink');
                $('#article_feed_info_link_' + id).addClass('bluelink');
            }

            $('#reader_pane').find('.ar_showed').removeClass('ar_showed');
            $article.addClass('ar_showed').removeClass('article_current_collapsed');
            $('#article_full_contents_' + id).show();
            if(view_style == 0){
                $('#article_short_contents_' + id).hide();
            }else if(view_style == 2){
                $article.addClass('article_current_3way');
            }
            if(extra && extra.scroll_to_comments){
                if(view_style == 2){
                    var $container = $('#three_way_contents');
                }else if(view_style == 3 || view_style == 4){
                    var $container = $('#article_dialog');
                }else{
                    var $container = $('#reader_pane');
                }

                setTimeout(function(){
                    $container.scrollTo('#user_comments_' + id, 250, {axis : 'y', easing:'easeOutQuint' });
                },500);
            }
            if(feed_params.filter_type != 'starred' && force_no_scroll == 0 && ($article.hasClass('article_unreaded') || $article.hasClass('article_unseen'))){
                $article.removeClass('article_unreaded').removeClass('article_unseen').addClass('article');
                $('#article_favicon_' + id).addClass('transparent_icon');
                if($article.data('brd') == 1){
                    totals_cnt[2]--;
                }
                // if($article.data('fav') == 1){
                //  totals_cnt[1]--;
                // }
                set_subscriptions_cnt('1_' + $article.data('suid'),'decrement',$article.data('tags'));
                if(linked_subscriptions && linked_subscriptions[$article.data('suid')]){
                    set_subscriptions_cnt('1_' + linked_subscriptions[$article.data('suid')],'decrement',null,true);            
                }
                read_article(id,0,feed_params,false,2);
                try{
                    uncheck_checkbox('#mark_unread_button_' + id);
                    try{
                        $('#unread_img_' + id).removeClass('icon-article_topbar_mark_as_read_full').addClass('icon-article_topbar_mark_as_read_empty').attr('title',_js("Mark as unread"));
                    }catch(e){}
                    $('#article_stripe_' + id).attr('title',_js("Read article")+'. '+_js("Click to mark it as unread")).addClass('article_stripe_read');

                    $article.data('read',1);
                }catch(e){}
            }
            //var h = $article.height();
            if(view_style == 0 || view_style == 2 || view_style == 3 || view_style == 4){
                $article.addClass('article_current');
            }else if(view_style == 1 && force_no_scroll == 0){
                $article.addClass('article_current');
            }
            $article.addClass('article_expanded');
            if(disable_social == 0 || forced_team_social_features == 1){
                if($article.data('comments') > 0 && $('#user_comments_' + id).hasClass('user_comments_unloaded')){
                    $('#user_comments_' + id).removeClass('user_comments_unloaded');
                    xajax_print_comments(id,1);
                }
            }
            if($article.data('sunk') == 1 && $('#mark_unread_button_' + id)[0]){
                $('#mark_unread_button_' + id).parent().remove();
            }
            if($article.data('translated')){
                $('#article_full_contents_' + id).addClass('show-translator');
            }

            if(view_style != 2){
                var top = $article.position().top - 20;
                var bottom = $('#reader_pane').height() - (top + $article.height());
                var force_no_scroll_tmp = 0;

                if(extra && extra.dont_scroll){
                    force_no_scroll_tmp = 1;
                }

                var should_scroll = false;

                if(force_no_scroll == 0 && force_no_scroll_tmp == 0){
                    if(scroll_top == 0 && top < 0){
                        should_scroll = true;
                    }
                    if(scroll_top == 0 && top > $('#reader_pane').height()){
                        should_scroll = true;
                    }
                    if(scroll_top > 0){
                        should_scroll = true;
                    }
                }

                if(should_scroll == true){
                    articles_moving_click = true;
                    if(articles_moving_click_timer)clearTimeout(articles_moving_click_timer);
                    articles_moving_click_timer = setTimeout(function(){articles_moving_click = false; },500);

                    scroll_to_article(id,false,true);
                    articles_moving = false;
                }
            }else{
                $('#three_way_contents').scrollTo(1);
            }
            check_star_icon(id);
            check_tags_icon(id);
            check_broadcast_icon(id);
            if($article.data('brd') == 1){
                if(joined_teams.length > 0){
                    $('#broadcast_button_txt_' + id).html(_js("Edit broadcast"));
                }else{
                    $('#broadcast_button_txt_' + id).html(_js("Broadcasted"));
                }
            }

            if($article.data('liked') == 1){
                $('#like_button_caption_' + id).html(_js("Liked"));
            }
            if($article.data('pocket') == 1){
                $('#pocket_button_' + id).addClass('article_footer_buttons_active');
            }
            if($article.data('instapaper') == 1){
                $('#instapaper_button_' + id).addClass('article_footer_buttons_active');
            }
            if($article.data('evernote') == 1){
                $('#evernote_button_' + id).addClass('article_footer_buttons_active');
            }
            if($article.data('onenote') == 1){
                $('#onenote_button_' + id).addClass('article_footer_buttons_active');
            }

            if(ads_enabled){
                activate_inner_ads(id);
            }

            if(device_type == 'normal'){
                var old_location_hash_tmp = get_location_hash();
                if(old_location_hash_tmp.indexOf('article/') !== 0){
                    old_location_hash = old_location_hash_tmp;
                    old_location_hash_title = doc_title;
                }
                var title = get_article_title(id);
                doc_title = application_name + ' - ' + title;
                set_title(title_num);
                set_location_hash('/article/' + rawurlencode($article.data('oid')) + '-' + mk_seo_url(title));
            }

            var view_styles_txt = ['List view', 'Expanded view', 'Column view', 'Card view', 'Magazine view'];
        }else{
            if(view_style != 2){
                if(old_location_hash !== null){
                    set_location_hash(old_location_hash);
                    doc_title = old_location_hash_title;
                    set_title(title_num);
                    old_location_hash = null;
                    old_location_hash_title = null;
                }
                purge_ads('inner_sinner');
                current_article_num = 0;
                $article.removeClass('ar_showed').data('explicitly-collapsed',1).attr('data-explicitly-collapsed',1).addClass('article_current_collapsed');
                $('#article_full_contents_' + id).hide().html('');
                $('#article_short_contents_' + id).css('display','block');
                $article.removeClass('article_expanded');
                delete_feed_param('opened_article');
                var top = $article.position().top - 20;
                if((scroll_top > 0 || top < 0) && force_no_scroll == 0){
                    scroll_to_article(id,false,true);
                }
                check_bottom();
                $('#reader_pane').find('.ar_showed').removeClass('ar_showed');
            }
        }

        if(device_type == 'phone'){
            $('#sb_rp_close_article').show();
        }

        if(article_opened && mouse_gesture){
            add_score_queue(id,'open');
        }

        if(article_opened){
            focus_article_url(id);
        }

        if(event){
            event.returnValue = false;
            if(!isie8){ event.stopPropagation(); }
            return false;
        }

        if(view_style == 0 || view_style == 1){
            $('#reader_pane').focus().click();
        }
    }
}

function transliterate_cyr(text){
    var cyrillic = [
        "а", "б", "в", "г", "д", "е", "ж", "з", "и", "й", "к", "л", "м", "н", "о",
        "п", "р", "с", "т", "у", "ф", "х", "ц", "ч", "ш", "щ", "ъ", "ь", "ю", "я",
        "А", "Б", "В", "Г", "Д", "Е", "Ж", "З", "И", "Й", "К", "Л", "М", "Н", "О",
        "П", "Р", "С", "Т", "У", "Ф", "Х", "Ц", "Ч", "Ш", "Щ", "Ъ", "Ь", "Ю", "Я",
        "Ї", "ї", "Є", "є", "Ы", "ы", "Ё", "ё",
        "ı", "İ", "ğ", "Ğ", "ü", "Ü", "ş", "Ş", "ö", "Ö", "ç", "Ç",
        "Á", "á", "Â", "â", "Ã", "ã", "À", "à", "Ç", "ç", "É", "é", "Ê", "ê", "Í",
        "í", "Ó", "ó", "Ô", "ô", "Õ", "õ", "Ú", "ú", "Ñ", "ñ", "È", "è"
    ];

    var latin = [
        "a", "b", "v", "g", "d", "e", "zh", "z", "i", "y", "k", "l", "m", "n", "o",
        "p", "r", "s", "t", "u", "f", "h", "ts", "ch", "sh", "sht", "a", "y", "yu", "ya",
        "A", "B", "V", "G", "D", "E", "Zh", "Z", "I", "Y", "K", "L", "M", "N", "O",
        "P", "R", "S", "T", "U", "F", "H", "Ts", "Ch", "Sh", "Sht", "A", "Y", "Yu", "Ya",
        "I", "i", "Ye", "ye", "I", "i", "Yo", "yo",
        "i", "I", "g", "G", "u", "U", "s", "S", "o", "O", "c", "C",
        "A", "a", "A", "a", "A", "a", "A", "a", "C", "c", "E", "e", "E", "e", "I",
        "i", "O", "o", "O", "o", "O", "o", "U", "u", "N", "n", "E", "e"
    ];

    var string = '';
    return str_replace(cyrillic, latin, text);
}

function mk_seo_url(text){
    var divider = '-';
    text = transliterate_cyr(text);
    text = text
        .toLowerCase() // change everything to lowercase
        .replace(/^\s+|\s+$/g, "") // trim leading and trailing spaces
        .replace(/[_|\s]+/g, "-") // change all spaces and underscores to a hyphen
        .replace(/[^a-z\u0400-\u04FF0-9-]+/g, "") // remove all non-cyrillic, non-numeric characters except the hyphen
        .replace(/[-]+/g, "-") // replace multiple instances of the hyphen with a single instance
        .replace(/^-+|-+$/g, "") // trim leading and trailing hyphens
        .replace(/[-]+/g, divider);
    return text;
}

// Function activate_inner_ads

function expand_article(id){
    if(view_style != 1){
        return;
    }
    if($('#article_full_contents_' + id).html() == ''){
        sanitize_article(id);
        build_article_annotations(id);
        // if(full_width == 1){
        //     $('#article_' + id).find('.article_content').css('max-width','100%');
        // }
        if(disable_social == 0 || forced_team_social_features == 1){
            if($('#article_' + id).data('comments') > 0 && $('#user_comments_' + id).hasClass('user_comments_unloaded')){
                $('#user_comments_' + id).removeClass('user_comments_unloaded');
                xajax_print_comments(id,1);
            }
        }

    }

    if((use_stripes == 1 || check_scroll_tracking()) && $('#article_' + id).hasClass('article_unreaded') || $('#article_' + id).hasClass('article_unseen')){
        check_checkbox('#mark_unread_button_' + $('#article_' + id).data('aid'));

        if($('#unread_img_' + id)[0]){
            $('#unread_img_' + id).removeClass('icon-article_topbar_mark_as_read_empty').addClass('icon-article_topbar_mark_as_read_full').attr('title',_js("Mark as read"));
        }

        $('#article_stripe_' + id).attr('title',_js("Unread article")+'. '+_js("Click to mark it as read")).removeClass('article_stripe_read');
    }

    bind_article_click_inside(id);
    if(ads_enabled){
        activate_inner_ads(id);
    }
}

function bind_article_click_inside(id){
    if(view_style == 0 || view_style == 2){
        return;
    }
    if(click_scroll == 1){
        $('#article_' + id).off('click').on('click',function(e){
            if($(e.target).hasClass('article_stripe')){
                return;
            }
            if(e.target.nodeName == 'A') return;
            if(e.target.nodeName == 'BUTTON') return;
            //if(e.target.nodeName == 'IMG') return;
            if(e.target.nodeName == 'INPUT') return;
            if(e.target.nodeName == 'TEXTAREA') return;
            if(e.target.className == 'article_footer') return;
            if(e.target.className == 'quick_options_link') return;
            if(e.target.className == 'tags_inline') return;
            if(e.target.className == 'noscroll') return;
            if(e.target.className.indexOf('article_footer_buttons') != -1) return;
            if(e.target.className.indexOf('icon16') != -1) return;
            if(e.target.className.indexOf('share_img') != -1) return;

            if((view_style == 3 || view_style == 4) && bulk_article_select){
                if(get_mouse_button(e) == 'left'){
                    if(event.ctrlKey|| event.metaKey || event.shiftKey){
                        if(event.shiftKey){
                            bulk_select_article_range(id);
                        }else{
                            bulk_select_article(id);
                        }
                        return;
                    }else{
                        bulk_unselect_all_articles();
                    }
                }
            }

            if($('#article_' + $('#article_' + id).data('aid')).hasClass('article_unreaded') || $('#article_' + $('#article_' + id).data('aid')).hasClass('article_unseen')){
                $('#article_' + id).data('init',0);
                mark_read(id,false,true);
            }
            if(scroll_top > 0 && view_style == 1){
                var top = $('#article_' + id).position().top - 30;
                if(top > 0){
                    articles_moving_click = true;
                    if(articles_moving_click_timer)clearTimeout(articles_moving_click_timer);
                    articles_moving_click_timer = setTimeout(function(){articles_moving_click = false; },500);
                    scroll_to_article(id);
                    articles_moving = false;
                }
            }
            $('#reader_pane').find('.article_current').removeClass('article_current');
            $('#article_' + $('#article_' + id).data('aid')).addClass('article_current');
            if(use_stripes == 0){
                $('.article_title_link').removeClass('bluelink');
                $('.article_feed_info_link').removeClass('bluelink');
                $('#article_title_link_' + $('#article_' + id).data('aid')).addClass('bluelink');
                $('#article_feed_info_link_' + $('#article_' + id).data('aid')).addClass('bluelink');
            }
        });
    }

}

function collapse_articles(){
    delete_feed_param('opened_article');
    force_no_scroll = 1;
    $('#reader_pane').find('.ar_showed').each(function(){
        var this_id = $(this).attr('id').replace(/article\_/,'');
        toggle_articleview(this_id);
    });
    force_no_scroll = 0;
}
function scroll_to_article(id,force,no_top_offset){
    if(scroll_top == 2 || scroll_top == 0){
        force = true;
    }
    if(force == true){
        var spd = 0;
    }else{
        var spd = 250;
    }

    var $article = $('#article_' + id);

    $('#reader_pane').finish();
    articles_moving = true;
    if(articles_moving_timer)clearTimeout(articles_moving_timer);
    if(mark_current_timer){
        clearTimeout(mark_current_timer);
    }

    if($article.prev().hasClass('block_article_ad')){
        var top_offset = parseInt($article.css('margin-top')) * -1;
        var $element = $article.prev();
    }else{
        var $element = $article;
    }

    var top_offset = parseInt($element.css('margin-top')) * -1;

    // TODO enable this to prevent reverse scroll in some cases. But this needs more testing
    // var top = $article.position().top;
    // if(top < 0){
    //     spd = 0;
    // }

    if($('#searcher_top_bar_wrapper')[0]){
        top_offset -= parseInt($('#searcher_top_bar_wrapper').height());
    }

    $('#reader_pane').scrollTo($element, spd, {axis : 'y', offset: {top:top_offset, left: 0}, easing:'easeOutQuint', onAfter: function() {
        articles_moving_timer = setTimeout(function(){
            articles_moving = false;
            if((view_style == 3 || view_style == 4) && check_scroll_tracking()){
                $('#reader_pane').scroll();
            }
        },150);
    }});
}



var reload_articles_timeout = null;
function reload_articles(num,offset){
    if($('#new_articles_overlay').is(':visible')){
        display_new_articles();
        return;
    }
    if(reload_articles_timeout){
        clearTimeout(reload_articles_timeout);
        reload_articles_timeout = null;
    }
    if(current_xajax_requests.read_article && marking_all_as_read){
        console_log('xAjax read_article request in progress. Waiting 100ms...');
        do_loading();
        reload_articles_timeout = setTimeout(function(){ reload_articles(num,offset) },100);
        return;
    }
    clear_article_contents(true);
    if(feed_params.filter_type == 'stats'){
        do_loading();
        xajax_print_stats();
    }else{
        delete_feed_param('opened_article');
        delete_feed_param('first_article_date');
        delete_feed_param('last_article_date');
        // do_loading(_js("Refreshing")+'...');
        clear_article_divs();
        reader_pane_loading();
        xajax_reload_articles(feed_params);
    }
}

function rechecksum(){
    do_loading(_js("Refreshing")+'...');
    checksum(false,true);
}

function email_sent_notification(){
    create_bottom_notification(_js("Email sent successfully"),'info',true);
}

var bn_zindex = 2000;
var notification_autoclose_timer = null;
function create_bottom_notification(text,type,autoclose,autoclose_timer,hide_timer){
    if(!type){
        type = 'info';
    }
    $('.bottom_notification').remove();

    var notification = document.createElement('div');
    notification.className = 'bottom_notification bottom_notification_' + type;
    notification.id = 'bn_' + Math.floor((Math.random()*1000000)+1);
    notification.style.zIndex = bn_zindex;
    notification.innerHTML = '<div class="bn_text">' + text + '</div>';

    if(autoclose){
        $(notification).on('mouseenter',function(){
            if(notification_autoclose_timer){
                clearTimeout(notification_autoclose_timer);
            }

            if($(this).is(':animated')){
                $(this).stop();
                $(this).css('opacity','1');
            }

            $(notification).append('<div title=\"'+_js("Close")+'\" class="bn_close" onclick="bn_close(\'' + notification.id + '\')"><span class="icon16 icon-cross"></span></div>');
            //$(notification).css('opacity','0.8');
        });

        $(notification).on('mouseleave',function(){
            notification_autoclose_timer = setTimeout(function(){
                $(notification).fadeOut('slow', function(){ $(this).remove() });
            },1000);

            $(notification).find('.bn_close').remove();
            $(notification).css('opacity','1');

        });

        if(!autoclose_timer){
            autoclose_timer = 2000;
        }
        if(!hide_timer){
            hide_timer = 5000;
        }
        notification_autoclose_timer = setTimeout(function(){
            $(notification).fadeOut(parseInt(hide_timer), function(){ $(this).remove() });
        },autoclose_timer);
    }else{
        notification.innerHTML += '<div title=\"'+_js("Close")+'\" class="bn_close" onclick="bn_close(\'' + notification.id + '\')"><span class="icon16 icon-cross"></span></div>';
    }

    document.body.appendChild(notification);

    $(notification).css("left", parseInt($(window).width() - $(notification).outerWidth()) / 2 + "px");

    bn_zindex++;
}

function close_bottom_notification(){
    $('.bottom_notification').hide();
}

function bn_close(id){
    $('#' + id).remove();
}

function check_local_search_options(){
    var filter = $.trim($('#local_search_input').val());

    if(!filter){
        $('#local_search_table').hide();
        $('#local_search_table_url').hide();
    }else{
        if(is_url(filter)){
            $('#local_search_table_url').show();
        }else{
            $('#local_search_table').show();
        }
    }
}

function hide_local_search_div(){
    // $('#local_search_input').trigger('blur');
    $('#local_search_div').removeClass('local_search_div_showed');
    $('#jumper_modal_overlay').removeClass('jumper_modal_overlay_showed');
    $('#local_search_input').off('keyup').off('blur');
}

function move_local_search_selection(dir){
    var filter = $.trim($('#local_search_input').val());
    if(!filter){
        return;
    }

    var current_selection = $('#local_search_table').find('.local_search_option_current');
    var el = null;
    if(!$(current_selection)[0]){
        el = $('#local_search_table').find('.local_search_option').eq(0);
    }else{
        if(dir == 'up'){
            el = $('#local_search_table').find('.local_search_option_current').prevAll('div').filter(':visible').first();
        }else if(dir == 'down'){
            el = $('#local_search_table').find('.local_search_option_current').nextAll('div').filter(':visible').first();
        }
    }

    if($(el)[0]){
        $('#local_search_table').find('.local_search_option_current').removeClass('local_search_option_current');
        $(el).addClass('local_search_option_current');
    }
}

function init_local_search(){
    var term = $.trim($('#local_search_input').val());
    if(!term){
        return;
    }

    if(is_url(term)){
        $('#feed_searcher').val(term);
        open_searcher({tab: 'feeds', term: term});
        hide_local_search_div();
        l('Search start', 'From toolbar', 'URL');
        return;
    }

    var option = $('#local_search_table').find('.local_search_option_current').data('option');
    if(!option){
        option = 1;
    }

    $('#feed_searcher').val(term);

    var option_text = '';
    if(option == 1){
        open_searcher({tab: 'subscriptions', term: term, search_type: 'local'});
        l('Search start', 'From toolbar', 'Section');
    }else if(option == 2){
        open_searcher({tab: 'subscriptions', term: term});
        l('Search start', 'From toolbar', 'Account');
    }else if(option == 3){
        open_searcher({tab: 'global', term: term});
        l('Search start', 'From toolbar', 'Global');
    }

    $('#local_search_input').val('');
    hide_local_search_div();
}

function show_local_search_div(){
    var section_name = application_name;
    if($('#sb_rp_heading').text()){
        section_name = $('#sb_rp_heading').text();
    }
    $('#local_search_input').attr('placeholder',sprintf(_js('Search in %s'),section_name));
    $('#local_search_option_text_current').html(sprintf(_js('Search in %s'),'<b>' + section_name + '</b>'));
    $('.local_search_option_current').removeClass('local_search_option_current');
    $('#local_search_table').hide();

    if(!feed_params.filter_type){
        $('#local_search_option_2').hide();
    }else{
        $('#local_search_option_2').show();
    }

    $('body').append('<div class="inno_dialog_modal_overlay" id="jumper_modal_overlay" style="z-index: 1001;"></div>')
    $('#local_search_div').css('top', '');
    $('#jumper_modal_overlay').addClass('jumper_modal_overlay_showed');
    $('#local_search_div').addClass('local_search_div_showed');

    $('#local_search_input').focus().select();
    $('#local_search_input').off('keydown').on('keydown',function(e){
        // return
        if(e.which == 13){
            init_local_search();
            return;
        }
        // up
        if(e.which == 38){
            move_local_search_selection('up');
            e.preventDefault();
            return;
        }

        // down
        if(e.which == 40){
            move_local_search_selection('down');
            e.preventDefault();
            return;
        }
    });

    $('#local_search_input').off('keyup').on('keyup',function(e){
        if(e.which == 27){
            hide_local_search_div();
            return;
        }

        check_local_search_options();
    });

    $("#local_search_div").on('transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd', function(){
        if(!($(this).hasClass('local_search_div_showed'))){
            $('#local_search_div').css('top', '-1000px');
        }
    });

    $("#jumper_modal_overlay").on('transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd', function(){

        if($(this) && !($(this).hasClass('jumper_modal_overlay'))){
            $(this).remove();
        }
    });

    $('#local_search_input').on('blur',function(){
        setTimeout(function(){
            hide_local_search_div();
        },10);
    });
}


function show_jumper_div(jumper_type,no_animation){
    jumper_hidden = false;
    no_animation = true;
    jumper_prev_filter = '';
    var jumper_placeholders = [];
    jumper_placeholders[1] = _js("Start typing feed, folder or section names...");
    jumper_placeholders[2] = _js("Start typing tag names...");
    jumper_placeholders[3] = _js("Start typing feed names...");
    $('#jumper_input').attr('placeholder',jumper_placeholders[jumper_type]);
    if(jumper_loaded == false){
        xajax_load_jumper(jumper_type);
    }else{
        build_jumper($('#jumper_input').val(),jumper_type,true);
    }

    $('body').append('<div class="inno_dialog_modal_overlay" id="jumper_modal_overlay" style="z-index: 1001;"></div>')
    $('#jumper_div').css('top', '');
    $('#jumper_modal_overlay').addClass('jumper_modal_overlay_showed');
    $('#jumper_div').addClass('jumper_div_showed');

    $('#jumper_input').focus().select();
    $('#jumper_input').on('keyup',function(e){
        if(e.which == 16 || e.which == 37 || e.which == 38 || e.which == 39 || e.which == 40){
            return;
        }
        build_jumper(this.value,jumper_type,false);
    });

    $("#jumper_div").on('transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd', function(){
        if(!($(this).hasClass('jumper_div_showed'))){
            $('#jumper_div').css('top', '-1000px');
        }
    });

    $("#jumper_modal_overlay").on('transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd', function(){
        if($(this) && !($(this).hasClass('jumper_modal_overlay_showed'))){
            $(this).remove();
        }
    });

    $('#jumper_input').on('blur',function(){
        setTimeout(function(){
            hide_jumper_div();
        },10);
    });
}

String.prototype.fuzzy = function (s) {
    var hay = this.toLowerCase(), i = 0, n = -1, l;
    s = s.toLowerCase();
    for (; l = s[i++] ;) if (!~(n = hay.indexOf(l, n + 1))) return false;
    return true;
};


function fuzzy_match(str,pattern){
    return str.fuzzy(pattern);
}

function _fuzzy_match(str,pattern){
    pattern = pattern.split(" ").join(".*");
    return (new RegExp(escapeRegExp(pattern))).test(str);
}

function escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
}

function build_jumper(filter,jumper_type,init){
    if((filter == jumper_prev_filter && init !== true) || jumper_hidden == true){
        return false;
    }
    jumper_prev_filter = filter;
    var jumper_html = '';
    var item_counter = 0;
    var extra_class = '';
    var first_id = '';
    for(var i in jumper_object){
        if(jumper_type == 2 && jumper_object[i].type != 0){
            continue;
        }
        if(jumper_type == 3 && jumper_object[i].type != 1){
            continue;
        }
        if(filter){
            if(!fuzzy_match(jumper_object[i].title.toLowerCase(),filter.toLowerCase())){
                continue;
            }

            // if(jumper_object[i].title.toLowerCase().indexOf(filter.toLowerCase()) == -1){
            //  continue;
            // }
        }
        extra_class = '';
        if(item_counter == 0){
            first_id = 'jumper_' + jumper_object[i].type + '_' + jumper_object[i].id;
        }
        jumper_html += '<div id="jumper_' + jumper_object[i].type + '_' + jumper_object[i].id + '" class="jumper_item' + extra_class + '" onmouseover="set_jumper_selection(this.id)" onmousedown=\"go_to_current_jumper_selection();\">';
        if(jumper_object[i].id == 1 || jumper_object[i].type == 0 || jumper_object[i].type == 1 && max_unread > 0){
            if(jumper_object[i].id == 1){
                var unread_cnt = totals_cnt[0];
            }else{
                var sub_id = jumper_object[i].type + '_' + jumper_object[i].id;
                var unread_cnt = subscriptions_cnt[sub_id] ? subscriptions_cnt[sub_id].cnt : 0;
            }
            if(unread_cnt > 0){
                if(unread_cnt > max_unread){
                    unread_cnt = max_unread + '+';
                }
                jumper_html += '<div class="jumper_item_inner" title="' + jumper_object[i].title.replace(/"/g, '&quot;') + '">' + jumper_object[i].title + '</div>';
                jumper_html += '<div class="jumper_item_unread_count">(' + unread_cnt + ')</div>';
            }else{
                jumper_html += '<div class="jumper_item_inner_full_width" title="' + jumper_object[i].title.replace(/"/g, '&quot;') + '">' + jumper_object[i].title + '</div>';
            }
        }else{
            jumper_html += '<div class="jumper_item_inner_full_width" title="' + jumper_object[i].title.replace(/"/g, '&quot;') + '">' + jumper_object[i].title + '</div>';
        }

        jumper_html += '</div>';
        item_counter++;
    }

    if(filter){
        if(item_counter == 0){
            first_id = 'jumper_2_1';
        }

        jumper_html += '<div id="jumper_2_1" class="jumper_item" onmouseover="set_jumper_selection(this.id)" onmousedown=\"go_to_current_jumper_selection();\">';
        jumper_html += '<div class="jumper_item_inner_full_width">'+_js("Search in sites for:")+' <span id="jumper_2_1_filter" style="font-weight:bold;">' + filter + '</span></div>';
        jumper_html += '</div>';

        jumper_html += '<div id="jumper_2_2" class="jumper_item" onmouseover="set_jumper_selection(this.id)" onmousedown=\"go_to_current_jumper_selection();\">';
        jumper_html += '<div class="jumper_item_inner_full_width">'+_js("Search in articles for:")+' <span id="jumper_2_2_filter" style="font-weight:bold;">' + filter + '</span></div>';
        jumper_html += '</div>';

        item_counter += 2;
    }


    if(item_counter == 0){
        current_jumper = null;
        $('#jumper_table').hide().html('');
    }else{
        $('#jumper_table').show().html(jumper_html);
    }
    if(first_id){
        set_jumper_selection(first_id);
    }
}

function move_jumper_selection(dir){
    if(current_jumper == null){
        return;
    }
    if(dir == 'up'){
        var target_obj = $('#' + current_jumper).prev();
    }else if(dir == 'down'){
        var target_obj = $('#' + current_jumper).next();
    }
    if(target_obj.hasClass('jumper_item')){
        set_jumper_selection(target_obj.attr('id'));
    }
}

function go_to_current_jumper_selection(){
    if(current_jumper == null){
        return;
    }
    var jumper_expl = current_jumper.split('_');
    if(jumper_expl[1] == -1){
        if(jumper_object[parseInt(jumper_expl[2])+1].fn){
            eval(jumper_object[parseInt(jumper_expl[2])+1].fn);
        }
    }else if(jumper_expl[1] == 0){
        view_tree_element('folder',jumper_expl[2]);
        focusit('0_' + jumper_expl[2],true);
    }else if(jumper_expl[1] == 1){
        view_tree_element('subscription',jumper_expl[2]);
        focusit('1_' + jumper_expl[2],true);
    }else if(jumper_expl[1] == 2){
        if(jumper_expl[2] == 1){
            var filter = $('#jumper_2_1_filter').text();
            $('#feed_searcher').val(filter);
            open_searcher({tab: 'feeds', term: filter});
        }else if(jumper_expl[1] == 2){
            var filter = $('#jumper_2_2_filter').text();
            $('#feed_searcher').val(filter);
            open_searcher({tab: 'subscriptions', term: filter});
        }
    }
    hide_jumper_div();
}

function set_jumper_selection(id){
    current_jumper = id;
    $('.jumper_item_selected').removeClass('jumper_item_selected');
    $('#' + id).addClass('jumper_item_selected');

    var jumper_height = $('#jumper_div').outerHeight() - $('#jumper_div_bottom').outerHeight();
    var filter_height = $('#jumper_filter').outerHeight();
    var top = $('#' + id).position().top;
    var bottom = (top + $('#' + id).outerHeight());
    var bottom_delta = jumper_height - bottom;
    var top_delta = top - filter_height;
    if(bottom_delta < 0){
        document.getElementById(id).scrollIntoView(0);
    }else if(top_delta < 0){
        document.getElementById(id).scrollIntoView(1);
    }
}

function set_jumper_object(obj){
    jumper_loaded = true;
    jumper_object = obj;
}

function hide_jumper_div(){
    jumper_hidden = true;
    // $('#jumper_input').trigger('blur');
    $('#jumper_div').removeClass('jumper_div_showed');
    $('#jumper_modal_overlay').removeClass('jumper_modal_overlay_showed');
    $('#jumper_input').off('keyup').off('blur');
    jumper_prev_filter = '';
}

function read_multiple_articles(type){
    $('#read_options_menu').hide();
    if(feed_params.search_term || feed_params.filter_type == 'old_search' || feed_params.filter_type == 'trending' || feed_params.filter_type == 'discovery' || feed_params.filter_type == 'catalog' || feed_params.filter_type == 'unseen' || feed_params.filter_type == 'commented' || feed_params.filter_type == 'liked' || feed_params.filter_type == 'pocket' || feed_params.filter_type == 'instapaper' || feed_params.filter_type == 'evernote' || feed_params.filter_type == 'welcome' || feed_params.filter_type == 'dashboard' || feed_params.filter_type == 'upgrade' || feed_params.filter_type == 'web_pages'){
        xalert(_js("This function is not available for the current selection!"),1);
        return false;
    }

    //if(mark_read_confirm == 1 && feed_params.filter_type != 'subscription'){
    if(mark_read_confirm == 1 && current_unread > 100){
        xconfirm(_js("You are about to mark many articles as read")+'. '+_js("Are you sure?"),'read_article(false,' + type + ',feed_params,document.getElementById("mark_all_dont_ask").checked)');
        $('#xconfirm').next().prepend('<div id="mark_all_dont_ask_div"><input type="checkbox" id="mark_all_dont_ask" value="1"> <label for="mark_all_dont_ask" id="mark_all_dont_ask_label"><span>'+_js("Don't ask again")+'</span></label></div>');
        return;
    }

    read_article(false,type,feed_params,false,2);

    if(feed_params.view_unread == 1){
        do_loading();
    }else{
        clear_article_divs();
        reader_pane_loading();
    }

    if(feed_params.last_load_date){
        delete_feed_param('last_load_date');
    }

    if(view_style == 2){
        clear_article_divs();
    }
    $('#wraper').trigger({type: "read_multiple_articles_clicked", read_type: type});
}

function toggle_mark_read_options(id){
    var html = '';
    if($('#mark_read_options_' + id).is(':visible')){
        $('#mark_read_options_' + id).hide();
    }else{
        if($('#mark_read_options_' + id).html() == ''){
            var add_hr = false;
            if($('#article_' + id).prev().is('div') && $('#article_' + id).prev().hasClass('ar')){
                html += '<div class="quick_options_link" onclick="mark_read_direction(' + id + ',\'above\')">'+_js("Mark above as read")+'</div>';
                add_hr = true;
            }
            if($('#article_' + id).next().is('div') && $('#article_' + id).next().hasClass('ar') && articles_order == 0){
                if(add_hr){
                    html += '<hr>';
                }
                html += '<div class="quick_options_link" onclick="mark_read_direction(' + id + ',\'below\')">'+_js("Mark below as read")+'</div>';
            }

            $('#mark_read_options_' + id).html(html);
        }
        $('#mark_read_options_' + id).show();
        fix_article_options_menu('mark_read_options_' + id);
    }
}

function toggle_read_options(){
    $('#read_options_menu').toggle();
}

function toggle_pocket_options(id){
    $('#pocket_options_' + id).toggle();
    if($('#pocket_options_' + id).html().indexOf('loader_menu') != -1){
        do_loading();
        xajax_fill_pocket_options(id);
    }
}

function toggle_instapaper_options(id, reload){
    $('#instapaper_options_' + id).toggle();
    if($('#instapaper_options_' + id).html().indexOf('loader_menu') != -1){
        do_loading();
        xajax_fill_instapaper_options(id,reload);
    }
}

function toggle_evernote_options(id,reload_notebooks){
    $('#evernote_options_' + id).toggle();
    if($('#evernote_options_' + id).html().indexOf('loader_menu') != -1){
        do_loading();
        xajax_fill_evernote_options(id,reload_notebooks);
    }
}

function toggle_onenote_options(id,reload_notebooks){
    $('#onenote_options_' + id).toggle();
    if($('#onenote_options_' + id).html().indexOf('loader_menu') != -1){
        do_loading();
        xajax_fill_onenote_options(id,reload_notebooks);
    }
}

function toggle_dropbox_options(id,reload_notebooks){
    $('#dropbox_options_' + id).toggle();
    if($('#dropbox_options_' + id).html().indexOf('loader_menu') != -1){
        do_loading();
        xajax_fill_dropbox_options(id,reload_notebooks);
    }
}

function toggle_gdrive_options(id){
    $('#gdrive_options_' + id).toggle();
    if($('#gdrive_options_' + id).html().indexOf('loader-horizontal.gif') != -1){
        do_loading();
        xajax_fill_gdrive_options(id);
    }
}

function unstar_all_articles(){
    xconfirm(_js("Clear all starred articles?")+'<br><b>'+_js("Warning:")+'</b> '+_js("There is no undo option!"),"unstar_all_articles_execute()");
}

function unstar_all_articles_execute(){
    do_loading();
    xajax_unstar_all_articles();
    totals_cnt[1] = 0;
    apply_subscriptions_cnt(subscriptions_cnt,false,null,false,true);
}

function mark_read_direction(id,dir){
    var sunk = 0;
    if((dir == 'above' && articles_order == 1 && group_article_list != 1) || (dir == 'below' && articles_order == 0)){
        sunk = 1;
    }

    if(dir == 'below'){
        var elements = $('#article_' + id).nextAll('.ar').not('.hidden, .ar_skip');
    }else if(dir == 'above'){
        var elements = $('#article_' + id).prevAll('.ar').not('.hidden, .ar_skip');
    }

    if(sunk == 1){
        elements.each(function(){
            var this_id = $(this).data('aid');

            if($(this).data('sunk') == 0){
                if($(this).data('read') == 0){
                    $(this).data('init',0);
                    mark_read(this_id,true,true);
                }
                $(this).data('sunk',1);
            }

            if($('#article_unread_dot_' + this_id)[0]){
                $('#article_unread_dot_' + this_id).remove();
            }

            if($('#mark_unread_button_' + this_id)[0]){
                $('#mark_unread_button_' + this_id).remove();
            }

        });
        //rechecksum();

        set_feed_param('from_tree_menu',1);
        set_feed_param('benchmark_article_id',id);
        read_article(false,-1,feed_params);
        delete_feed_param('benchmark_article_id');
        set_feed_param('from_tree_menu',0);
    }else{
        elements.each(function(){
            if($(this).data('read') == 0){
                var this_id = $(this).data('aid');
                $(this).data('init',0);
                mark_read(this_id,false,true);
            }
        });
    }
}

function toggle_search_options_menu(){
    $('#search_options').toggle();
}

function build_search_history(){
    var data = [];
    if(search_history != null && search_history.length > 0){
        data.push({item_type: 'heading', label: _js("Recent article searches")});
        for (var i = search_history.length - 1; i >= 0; i--) {
            var pointer = search_history[i];
            var label = '';
            if(pointer.filter_type == 'folder' || pointer.filter_type == 'subscription' || pointer.filter_type == 'feed' && pointer.filter_name){
                text_label = _js("%s in %s");
                label = text_label.replace(/^\%s/,'<b>' + pointer.term + '</b>');
                label = label.replace(/\%s$/,pointer.filter_name);
                pointer.search_options = 3;
            }else if(pointer.filter_type == 'starred'){
                text_label = _js("%s in starred articles");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }else if(pointer.filter_type == 'web_pages'){
                text_label = _js("%s in saved web pages");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }else if(pointer.filter_type == 'annotated'){
                text_label = _js("%s in annotated");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }else if(pointer.filter_type == 'tags'){
                text_label = _js("%s in tagged articles");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }else if(pointer.filter_type == 'active_searches'){
                text_label = _js("%s in monitored keywords");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }else if(pointer.filter_type == 'channel'){
                text_label = _js("%s in channels");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }else if(pointer.filter_type == 'my_channel'){
                text_label = _js("%s in my channel");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }else if(pointer.search_options == 4){
                text_label = _js("%s in all public articles");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }else if(pointer.search_options == 1){
                text_label = _js("%s in my articles");
                label = text_label.replace(/\%s/,'<b>' + pointer.term + '</b>');
            }

            data.push({type: 'search_history_item', label: label, value: pointer.term, search_term: pointer.term, search_options: pointer.search_options, filter_type: pointer.filter_type, filter_id: pointer.filter_id});
        }
        data.push({item_type: 'divider'});
        data.push({type: 'clear_search_history', label: '<span class="clear_recent_searches">'+_js("Clear recent searches")+'</span>'});
    }
    return data;
}

function is_url(string){
    if(!string){
        return false;
    }
    if(string.indexOf('http://') === 0 || string.indexOf('https://') === 0){
        return true;
    }
    return false;
}

function build_search_quick_autocomplete(request){
    var data = [];
    if(!request.term){
        return false;
    }
    var text_label = '';

    if(is_url(request.term)){
        text_label = '<span class="inno_toolbar_button_menu_icon icon16 icon-rss_positive" style="top:5px;"></span> '+_js("Add feeds from %s");
        data.push({type: 'feed_url', value: request.term, label: text_label.replace(/\%s/,'<b>' + htmlentities(request.term) + '</b>')});

        text_label = '<span class="inno_toolbar_button_menu_icon icon16 icon-bookmark"></span> '+_js("Add to Read later")+' %s';
        data.push({type: 'web_page', value: request.term, label: text_label.replace(/\%s/,'<b>' + htmlentities(request.term) + '</b>')});

        data.push({item_type: 'divider'});
        data.push({item_type: 'heading', label: _js("Searching for feeds...")});
    }else{
        var section_name = application_name;
        text_label = '<span class="inno_toolbar_button_menu_icon icon16 icon-loupe"></span> '+sprintf(_js("Search %s for %s"),htmlentities(section_name), '<b>' + htmlentities(request.term) + '</b>');
        data.push({type: 'subscriptions', value: request.term, label: text_label});
    }

    return data;
}

function build_welcome_search(request){
    var data = [];
    if(!request.term){
        return false;
    }

    var tabs_select = [{title: 'Feeds', type: 'welcome_feeds'}, {title: 'Google News', type: 'welcome_google_news'}, {title: 'Facebook pages', type: 'welcome_facebook_pages'}, {title: 'Twitter', type: 'welcome_twitter'}, {title: 'Reddit', type: 'welcome_reddit'},];


    if(is_url(request.term)){
        data.push({type: 'feed_url', value: request.term, label: _js("Add feeds from %s").replace(/\%s/,'<b>' + htmlentities(request.term) + '</b>')});
    }else{
        for(var i in tabs_select) {
            var text_label = _js("%s in %s");
            data.push({type: tabs_select[i].type, value: request.term, label: text_label.replace(/\%s/,'<b>' + htmlentities(request.term) + '</b>').replace(/\%s/,tabs_select[i].title)});
        }
    }

    return data;
}



function new_folder_remove_subscription(id){
    var subs = $('#feed_id')[0].value;
    if(subs){
        var subs_spl = subs.split(',');
        var new_subs = '';
        for(var i in subs_spl){
            if(subs_spl[i] != '' && subs_spl[i] != id){
                new_subs += subs_spl[i] + ',';
            }
        }
        $('#feed_id').val(new_subs);
        $('#new_folder_feed_' + id).remove();
    }
}

function toggle_search_options(option,from_select){
    search_options = option;
    set_feed_param('search_options',search_options);
    if(from_select){
        $('#feed_searcher').focus().select();
    }
    if(from_select && option == 3 && feed_params_cache.filter_type){
        set_feed_param('filter_type',feed_params_cache.filter_type);
        set_feed_param('filter_id',feed_params_cache.filter_id);
    }
    if(from_select && option == 1){
        set_feed_param('filter_type','old_search');
        set_feed_param('filter_id',0);
    }
    if(from_select && option == 4){
        set_feed_param('filter_type','old_search');
        set_feed_param('filter_id',0);
    }
    if(from_select && $('#feed_searcher').val() != ''){
        do_search();
    }
}

function toggle_quick_options(){
    $('#quick_options').toggle();
    if($('#quick_options').is(':visible')){
        var height_offset = ($('#footer').height()-1) + $('#top_ribbon').height();
        if($('#subscriptions_buttons').is(':visible')){
            height_offset += $('#subscriptions_buttons').height() + 10;
        }else{
            height_offset += 3;
        }
        var h = $(window).height() - height_offset;
        if($('#quick_options').height() > h){
            $('#quick_options').css('max-height',h + 'px');
        }else{
            $('#quick_options').css('max-height','');
        }
    }
}

function clear_keep_unread(){
    for(var i in keep_unread){
        keep_unread[i] = false;
    }
}

function switch_view(){
    if(feed_params.view_unread == 1){
        set_view(0);
    }else{
        set_view(1);
    }
}

function set_view(type,toast){
    delete_feed_param('opened_article');
    set_feed_param('view_unread',type);
    set_feed_param('change_view_unread',type);
    print_articles();
    delete_feed_param('change_view_unread');
    inno_toolbar_switcher_set_active_button('unread_filter_switcher', type);
}

function set_view_period(){
    var content = '<div class="flex">';
    content += '<div class="view_period_presets">';
    content += '<div class="view_period_presets_heading">' + _js('Articles older than:') + '</div>';
    content += '<a href="javascript:void(0);" onclick="set_view_period_preset(1)" class="view_period_presets_preset" id="view_period_presets_preset_1">' + sprintf(_js('%s days ago'),7) + '<span class="icon16 icon_active icon-checkmark"></span></a>';
    content += '<a href="javascript:void(0);" onclick="set_view_period_preset(2)" class="view_period_presets_preset" id="view_period_presets_preset_2">' + sprintf(_js('%s days ago'),14) + '<span class="icon16 icon_active icon-checkmark"></span></a>';
    content += '<a href="javascript:void(0);" onclick="set_view_period_preset(3)" class="view_period_presets_preset" id="view_period_presets_preset_3">' + _js('A month ago') + '<span class="icon16 icon_active icon-checkmark"></span></a>';
    content += '<a href="javascript:void(0);" onclick="set_view_period_preset(4)" class="view_period_presets_preset" id="view_period_presets_preset_4">' + _js('A year ago') + '<span class="icon16 icon_active icon-checkmark"></span></a>';
    content += '<div class="view_period_presets_preset" id="view_period_presets_preset_5"><span class="graylink">' + _js('Or use calendar') + '</a></div>';
    content += '</div>';
    content += '<div class="view_period_calendar flex_grow">';
    content += '<div id="view_period_calendar_inline"></div>';
    content += '<input type="hidden" id="view_period_calendar_inline_value">';
    content += '</div>';
    content += '</div>';

    var show_warning = false;
    if(feed_params.articles_order == -1 && articles_order != 0){
        show_warning = true;
    }else if(feed_params.articles_order != -1 && feed_params.articles_order != 0){
        show_warning = true;
    }else if(feed_params.view_unread != 1){
        show_warning = true;
    }

    if(show_warning){
        content += '<div class="info_state" style="margin: 36px 0 0 0;"><span class="icon16 icon-exclamation-mark"></span>' + sprintf(_js('Choosing one of these options will automatically remove the Unread filter and set the sorting method to %s.'),'<b>' + _js('Newest first') + '</b>') + '</div>';
    }

    // $('#search_range_from_input').datepicker('setDate','now-30d');

    content += '</div>';
    dialog('view_period_dialog', {content: content});

    var opts = { changeMonth: true, changeYear: true, duration: '', maxDate: new Date(), dateFormat: 'M dd yy', altField: '#view_period_calendar_inline_value', altFormat: '@', onSelect: set_view_period_preset_calendar };
    $('#view_period_calendar_inline').datepicker(opts);
}

function set_view_period_preset(preset){
    $('.view_period_presets_preset').removeClass('view_period_presets_preset_current');
    $('#view_period_presets_preset_5').html('<span class="graylink">' + _js('Or use calendar') + '</a>');
    $('#view_period_presets_preset_' + preset).addClass('view_period_presets_preset_current');

    var preset_strings = ['now-7d', 'now-14d', 'now-1m', 'now-1y'];
    $('#view_period_calendar_inline').datepicker('setDate',preset_strings[preset-1]);
}

function set_view_period_preset_calendar(date_text){
    $('.view_period_presets_preset').removeClass('view_period_presets_preset_current');
    $('#view_period_presets_preset_5').html(date_text + '<span class="icon16 icon_active icon-checkmark"></span>').addClass('view_period_presets_preset_current');
}

function set_start_from_date(){
    var date = $('#view_period_calendar_inline_value').val();
    inno_dialog_close('view_period_dialog');

    if(feed_params.articles_order == -1 && articles_order != 0){
        set_articles_order(0, true, true);
    }else if(feed_params.articles_order != -1 && feed_params.articles_order != 0){
        set_articles_order(0, false, true);
    }

    if(feed_params.view_unread != 1){
        set_feed_param('view_unread',1);
    }

    print_articles(false,0,Math.round(date / 1000));
    delete_feed_param('change_articles_order');
    delete_feed_param('global_change_articles_order');
    delete_feed_param('change_group_article_list');
    delete_feed_param('global_change_group_article_list');
}

function cancel_checksum_request(){
    if(current_xajax_requests.checksum){
        xajax.abortRequest(current_xajax_requests.checksum);
    }
}

function cancel_articles_request(){
    if(current_xajax_requests.print_articles){
        xajax.abortRequest(current_xajax_requests.print_articles);
    }
}

function checksum(init,stop_loading){
    cancel_checksum_request();
    if(checksum_timer != null){
        clearTimeout(checksum_timer);
    }

    if(window_focus){
        feed_params.seen_ids = seen_ids;
        xajax_checksum(window_focus,init,application_version,stop_loading,notifications_version,tree_version,feed_params,current_user_id,theme);
    }else{
        xajax_checksum(window_focus,init,application_version,stop_loading,notifications_version,tree_version,null,current_user_id,theme);
    }

    checksum_timer = setTimeout(function(){
        checksum(false);
    },ajax_timer);
}

function set_title(num){
    title_num = num;
    if(title_cooldown){
        clearTimeout(title_cooldown);
    }
    title_cooldown = setTimeout(function(){
        if(favicon_counter){
            var favicon = new Favcount('/favicon.ico');
            favicon.opacity = 0.6;
            favicon.set(num);
            favicon_modified = true;
            document.title = doc_title;
        }else{
            if(num == 0 || num == null || num == '' || num == undefined){
                document.title = doc_title;
            }else{
                if(num >= max_unread){
                    num = max_unread + '+';
                }
                try{
                    document.title = '(' + num + ') ' + doc_title;
                }catch(e){}
            }
            if(favicon_modified){
                var favicon = new Favcount('/favicon.ico');
                favicon.set(0);
                favicon_modified = false;
            }
        }
    },10);
}

function set_status_text(txt,style){
    $('#status_div').html(txt);
    if(style != undefined){
        $('#status_div').css(style);
    }
}

function change_subscription_status(id,enabled){
    xajax_change_subscription_status(id,enabled);
    tree_is_dirty = true;
}

function show_hide_comment_buttons(div_id,show){
    if(show){
        $('#comment_del_img_' + div_id).css('display','block');
        $('#comment_quote_img_' + div_id).css('display','block');
    }else{
        $('#comment_del_img_' + div_id).css('display','none');
        $('#comment_quote_img_' + div_id).css('display','none');
    }
}

function del_comment(id,article_id,type){
    xconfirm(_js("Are you sure you want to delete this comment")+'?','xajax_del_comment(' + id + ',' + article_id + ',' + type + ')');
}

var effects = false;
var detect = navigator.userAgent.toLowerCase();
if(detect.indexOf('safari') > 0){
    effects = true;
}

jQuery.fn.center = function () {
    this.css("position","absolute");
    this.css("top", ( $(window).height() - this.height() ) / 2+$(window).scrollTop() + "px");
    this.css("left", ( $(window).width() - this.width() ) / 2+$(window).scrollLeft() + "px");
    return this;
}

function checkpwchange(check){
    if(check){
        $('.change_password_tr').show();
        $('#preference_current_password').focus().select();
    }else{
        $('.change_password_tr').hide();
    }
}

function add_newsletter(id,context,is_tag,is_subscription){
    dialog('newsletter_dialog',{ id: 0 });
}

function add_folder(id,context,is_tag,is_subscription,organization_id){
    show_dialog('folder_dialog',{ folder_id: 0, feed_id: id, context: context, is_tag: is_tag, is_subscription: is_subscription, organization_id: organization_id});
}

function edit_folder(id,context,organization_id){
    show_dialog('folder_dialog',{ folder_id: id, context: context, organization_id: organization_id });
}

function edit_subscription(id,context){
    show_dialog('subscription_dialog',{ subscription_id: id, context: context});
}

function check_preferences_tab(dialog,params,tab_id){
    var ajax_tabs = [2,3,5,7,8];
    if(inArray(preference_tab_indexes[tab_id],ajax_tabs)){
        do_loading();
        xajax_fill_dialog_async(dialog,params,preference_tab_indexes[tab_id]);
    }
}
function inArray(needle, haystack) {
    var length = haystack.length;
    for(var i = 0; i < length; i++) {
        if(haystack[i] == needle) return true;
    }
    return false;
}

function filter_preferences_subscriptions(delay){
    if(filter_preferences_subscriptions_delay) clearTimeout(filter_preferences_subscriptions_delay);
    if(delay){
        filter_preferences_subscriptions_delay = setTimeout(function(){
            filter_preferences_subscriptions_exec();
        },250);
    }else{
        filter_preferences_subscriptions_exec();
    }
}

function filter_preferences_subscriptions_exec(){
    do_loading();
    var filter = $('#subscriptions_list_filter').val();
    var folder_id = $('#subscriptions_list_folder_id').val();
    var feed_type = $('#subscriptions_list_feed_type').val();
    var limit = $('#subscriptions_list_limit').val();
    var feed_type = $('#subscriptions_list_feed_type').val();
    var urls = ($('#subscriptions_list_view_urls').is(':checked')) ? 1 : 0;
    var list_filter = $('input[name="subscriptions_list_filter_radios"]:checked').val();
    set_feed_param('subscriptions_list_filter',filter);
    set_feed_param('subscriptions_list_folder_id',folder_id);
    set_feed_param('subscriptions_list_feed_type',feed_type);
    set_feed_param('subscriptions_list_limit',limit);
    set_feed_param('subscriptions_list_feed_type',feed_type);
    set_feed_param('subscriptions_list_view_urls',urls);
    set_feed_param('subscriptions_list_list_filter',list_filter);
    xajax_fill_dialog_async('preferences_subscriptions',feed_params);
}

function reorder_subscriptions_table(column){
    do_loading();
    set_feed_param('subscriptions_list_order',column);
    set_feed_param('subscriptions_list_asc', feed_params.subscriptions_list_asc == 'desc' ? 'asc' : 'desc');
    xajax_fill_dialog_async('preferences_subscriptions',feed_params);
}

function reload_subscriptions_table(){
    do_loading();
    xajax_fill_dialog_async('preferences_subscriptions',feed_params);
}

function guest_alert(){
    show_dialog('account_dialog');
    stop_loading();
    return false;

    xalert(_js("This function is only available to registered users.")+'<p><a class=bluelink href=javascript:void(0) onclick=inno_dialog_close(\'xalert\');show_dialog(\'account_dialog\')>'+_js("Register now")+'</a>',1);
    stop_loading();
    return false;
}

function send_share_email(){
    var form = xajax.getFormValues('send_email_form');
    if(form.user_email_to == ''){
        xalert(_js("Please enter valid email")+'!',0,'$(\'#user_email_to\').focus().select();');
        return false;
    }


    var user_email_to = JSON.parse($('#user_email_to').val());

    var recipients = [];
    if(user_email_to){
        for(var i in user_email_to){
            recipients.push(user_email_to[i].value);
        }
    }

    if(recipients.length == 0){
        xalert(_js("Please enter an email address. You might have to press Enter after the email."),0,'$(\'#user_email_to\').focus().select();');
        return false;
    }

    $('#user_email_recipients').val(JSON.stringify(recipients));

    do_loading(_js('Sending...'));
    if(!user_access[access_starter]){
        grecaptcha.execute();
    }else{
        send_share_email_execute();
    }
}

function send_share_email_execute(recipients){
    var form = xajax.getFormValues('send_email_form');
    form.send_email_keep_open = $('#send_email_keep_open').is(':checked');
    form.send_email_cc_me = $('#send_email_cc_me').is(':checked');
    form.send_email_separate = $('#send_email_separate').is(':checked');
    form.send_email_pdf = $('#send_email_pdf').is(':checked');
    form.send_email_replyto = $('#send_email_replyto').is(':checked');
    form.user_email_captcha = $('#user_email_captcha').val();
    if($.isNumeric(form.user_email_article_id)){
        form.article_content = $('#article_contents_inner_' + form.user_email_article_id).html();
    }else{
        form.article_content = '';
    }

    disable_dialog_button('send_email_dialog',0);
    xajax_send_share_email(form);
}

function print_changelog(limit,loading){
    if(loading){
        $('#changelog_next20').html(_js('Loading') + '...');
    }
    var filter = $('#changelog_filter').val();
    if(!limit){
        limit = 20;
    }
    xajax_print_changelog(limit,filter);
}

function filter_changelog(val){
    if(ftimer) clearTimeout(ftimer);
    if(val == foldval) return;
    ftimer = setTimeout(function(){ print_changelog(20,false); },100);
}

function changelog_clear_filter(){
    $('#changelog_filter').val('');
    print_changelog(20,false);
}

function save_folder(){
    var form = xajax.getFormValues('folder_form');
    if(form.folder_name == ''){
        xalert(_js("Please enter folder name"),0,'$(\'#folder_name\').focus().select();');
        return false;
    }
    if(form.folder_id == 0 && form.folder_is_tag == 0 && (!form.feed_id || form.feed_id == ',')){
        xalert(_js("Please add at least one feed to this folder"),0,'$(\'#new_folder_feeds_search\').focus().select();');
        return false;
    }
    disable_dialog_button('folder_dialog',0);
    xajax_save_folder(form);
    jumper_loaded = false;
}

function save_evernote_notebook(){
    var form = xajax.getFormValues('folder_form');
    if(form.notebook_name == ''){
        xalert(_js("Please enter notebook name")+'!',0,'$(\'#notebook_name\').focus().select();');
        return false;
    }
    disable_dialog_button('evernote_notebook_dialog',0);
    evernote_article(form.article_id,'add','new',form.notebook_name);
}

function save_instapaper_folder(){
    var form = xajax.getFormValues('folder_form');
    if(form.folder_name == ''){
        xalert(_js("Please enter folder name")+'!',0,'$(\'#folder_name\').focus().select();');
        return false;
    }
    disable_dialog_button('instapaper_folder_dialog',0);
    instapaper_article(form.article_id,'new_folder',false,false,form.folder_name);
}

function save_subscription(){
    var form = xajax.getFormValues('subscription_form');
    if(form.subscription_name == ''){
        xalert(_js("Please enter feed name")+'!',0,'$(\'#subscription_name\').focus().select();');
        return false;
    }
    do_loading();
    disable_dialog_button('subscription_dialog',0);
    xajax_save_subscription(form);
    jumper_loaded = false;
}

function resend_confirmation_email(){
    var form = xajax.getFormValues('email_confirmation_form');
    if(form.new_confirmation_email == ''){
        xalert(_js("Please enter valid email")+'!',0,'$(\'#new_confirmation_email\').focus().select();');
        return false;
    }
    do_loading(_js('Sending...'));
    disable_dialog_button('resend_confirmation_dialog',0);
    xajax_resend_confirmation_email(form.new_confirmation_email);
}

function resend_confirmation_email_yjp(){
    var form = xajax.getFormValues('email_confirmation_form');
    do_loading('Confirming...');
    disable_dialog_button('resend_confirmation_dialog',0);
    xajax_resend_confirmation_email(form,true);
}

function send_password_reset_email(){
    do_loading(_js('Sending...'));
    disable_dialog_button('reset_password_dialog',0);
    xajax_send_password_reset_email_frontend();
}

function save_user_profile(){
    var form = {};
    form.preference_email = $('#preference_email').val();
    form.preference_username = $('#preference_username').val();
    form.preference_name = $('#preference_name').val();
    form.preference_summary = $('#preference_summary').val();
    form.preference_current_password = $('#preference_current_password').val();
    form.preference_password = $('#preference_password').val();
    form.preference_password2 = $('#preference_password2').val();
    form.password_change_check_tokens = ($('#password_change_check_tokens').is(':checked')) ? 1 : 0;

    if(form.preference_email == ''){
        xalert(_js("Please enter valid email")+'!',0,'$(\'#preference_email\').focus().select();');
        return false;
    }
    if(form.preference_username == ''){
        xalert(_js("Please enter username")+'!',0,'$(\'#preference_username\').focus().select();');
        return false;
    }
    if(form.preference_name == ''){
        xalert(_js("Please enter name")+'!',0,'$(\'#preference_name\').focus().select();');
        return false;
    }

    if(form.preference_password && form.preference_password != form.preference_password2){
        xalert(_js("Passwords do not match")+'!',0,'$(\'#preference_password\').focus().select();');
        return false;
    }

    if(form.preference_password && !form.preference_current_password){
        xalert(_js("Please enter your current password!"),0,'$(\'#preference_current_password\').focus().select();');
        return false;
    }

    xajax_save_user_profile(form);
}

function save_user_preferences(close_dialog,callback){
    var form = xajax.getFormValues('preferences_form');
    $('#preferences_form').find('input[type="checkbox"]').each(function(){
        if(form[$(this).attr('name')] != '1'){
            form[$(this).attr('name')] = '0';
        }
    });

    form.integration_set = 0;
    form.integration_set_pocket = 0;
    form.integration_set_evernote = 0;
    form.integration_set_onenote = 0;
    form.integration_set_instapaper = 0;
    form.integration_set_gdrive = 0;
    form.integration_set_youtube = 0;

    if($('#evernote_default_notebook')[0]){
        form.integration_set = 1;
        form.integration_set_evernote = 1;
        form.evernote_default_notebook = $('#evernote_default_notebook').val();
        form.evernote_transfer_tags = ($('#evernote_transfer_tags').is(':checked')) ? 1 : 0;
        form.evernote_auto_mobilize = ($('#evernote_auto_mobilize').is(':checked')) ? 1 : 0;
        form.advanced_menu_evernote = ($('#advanced_menu_evernote').is(':checked')) ? 1 : 0;
    }

    if($('#pocket_transfer_tags')[0]){
        form.integration_set = 1;
        form.integration_set_pocket = 1;
        form.pocket_transfer_tags = ($('#pocket_transfer_tags').is(':checked')) ? 1 : 0;
        form.advanced_menu_pocket = ($('#advanced_menu_pocket').is(':checked')) ? 1 : 0;
    }

    if($('#onenote_default_section')[0]){
        form.integration_set = 1;
        form.integration_set_onenote = 1;
        form.onenote_default_section = $('#onenote_default_section').val();
        form.onenote_auto_mobilize = ($('#onenote_auto_mobilize').is(':checked')) ? 1 : 0;
        form.advanced_menu_onenote = ($('#advanced_menu_onenote').is(':checked')) ? 1 : 0;
    }

    if($('#dropbox_auto_mobilize')[0]){
        form.integration_set = 1;
        form.integration_set_dropbox = 1;
        form.dropbox_auto_mobilize = ($('#dropbox_auto_mobilize').is(':checked')) ? 1 : 0;
        form.advanced_menu_dropbox = ($('#advanced_menu_dropbox').is(':checked')) ? 1 : 0;
    }

    if($('#instapaper_default_folder')[0]){
        form.integration_set = 1;
        form.integration_set_instapaper = 1;
        form.instapaper_default_folder = $('#instapaper_default_folder').val();
        form.advanced_menu_instapaper = ($('#advanced_menu_instapaper').is(':checked')) ? 1 : 0;
    }

    if($('#gdrive_auto_mobilize')[0]){
        form.integration_set = 1;
        form.integration_set_gdrive = 1;
        form.gdrive_auto_mobilize = ($('#gdrive_auto_mobilize').is(':checked')) ? 1 : 0;
        form.advanced_menu_gdrive = ($('#advanced_menu_gdrive').is(':checked')) ? 1 : 0;
    }

    if($('#youtube_subscriptions_sync')[0]){
        form.integration_set = 1;
        form.integration_set_youtube= 1;
        form.youtube_subscriptions_sync = ($('#youtube_subscriptions_sync').is(':checked')) ? 1 : 0;
        form.youtube_subscriptions_sync_folder_id = $('#youtube_subscriptions_sync_folder_id').val();
        form.youtube_subscriptions_sync_new_folder_name = $('#youtube_subscriptions_sync_new_folder_name').val();

        if(form.youtube_subscriptions_sync_folder_id == -1 && !form.youtube_subscriptions_sync_new_folder_name){
            xalert(_js("Please enter folder name"),0,'$(\'#youtube_subscriptions_sync_new_folder_name\').focus().select();');
            return false;
        }
    }

    if(typeof $('#article_translate_from_input').textext()[0] != 'undefined'){
        form.article_translation_result_tags = $('#article_translate_from_input').textext()[0].tags()._formData;
    }
    disable_dialog_button('preferences_dialog',0);
    if(callback){
        form.callback = callback;
    }
    form.close_dialog = close_dialog;

    do_loading(_js("Saving")+'...');

    xajax_save_user_preferences(form);
}

function disable_dialog_button(id,button){
    if(!button){
        button = 0;
    }
    $('#' + id).closest('.ui-dialog').find('.ui-dialog-buttonpane button').eq(button).attr('disabled',true).addClass('ui-state-disabled');
    $('#' + id + '_buttonbar_container').find('button').eq(button).attr('disabled',true);
}

function enable_dialog_button(id,button){
    if(!button){
        button = 0;
    }
    $('#' + id).closest('.ui-dialog').find('.ui-dialog-buttonpane button').eq(button).attr('disabled',false).removeClass('ui-state-disabled');
    $('#' + id + '_buttonbar_container').find('button').eq(button).attr('disabled',false);
}

function show_dialog_loader(id){
    $('#' + id + '_wrapper').append('<div id="' + id + '_modal_mask" class="dialog_modal_mask"></div><div id="' + id + '_modal_loader" class="dialog_modal_mask_loader"><div class="inno_loader inno_loader_high"></div></div>');
}

function remove_dialog_loader(id){
    $('#' + id + '_modal_mask').remove();
    $('#' + id + '_modal_loader').remove();
}

function set_dialog_button_state (id, button, state) {
    state ? enable_dialog_button(id, button) : disable_dialog_button(id, button);
}

function focus_dialog_button(id,button){
    if(!button){
        button = 0;
    }
    $('#' + id + '_buttonbar_container').find('button').eq(button).focus();
}

function send_feedback(){
    var form = xajax.getFormValues('feedback_form');
    if(form.attach_screenshot) {
      form.screenshot = $('#screenshot')
        .css('background-image')
        .replace('url(','')
        .replace(')','')
        .replace(/\"/gi, "");
    }

    if(form.debug == 1){
        form.debug_info = $('#feedback_debug_info').text();
    }

    disable_dialog_button('feedback_dialog',0);
    do_loading();
    xajax_send_feedback(form);
}

function delete_subscription(id,context,params){
    if(context == 'folder'){
        xconfirm(_js("Unfollow all feeds in this folder?"),'xajax_delete_subscription(' + id + ', "' + context + '", ' + JSON.stringify(params) + ',$(\'#unsubscribe_from_all_delete_folder\').is(\':checked\'));');
    }else{
        var title = '';
        if(params != undefined && params.title){
            title = params.title;
        }else{
            if($('#link_1_' + id)[0]){
                title = $('#link_1_' + id).text();
            }else if($('#subscription_title_' + id)[0]){
                title = $('#subscription_title_' + id).text();
            }
        }
        var confirm_text = '';
        if(title != ''){
            confirm_text = '<p><b>' + htmlentities(title) + '</b></p>'
        }
        xconfirm(_js("Do you want to unfollow this feed?") + confirm_text,'xajax_delete_subscription(' + id + ', "' + context + '", ' + JSON.stringify(params) + ');$("#preferences_subscriptions_tr_' + id + '").fadeOut()');
    }
}

function remove_feed_from_team_folder(id, folder_id, organization_id, context){
    var confirm_text = _js("Remove feed from Team folder?");
    confirm_text += '<p class="redlink">' + _js('Warning:') + ' ' + _js('The feed will be removed for all team members.') + '</p>';
    xconfirm(confirm_text,'remove_feed_from_team_folder_execute(' + id + ', ' + folder_id + ', ' + organization_id + ' ,"' + context + '");');
}

function remove_feed_from_team_folder_execute(id, folder_id, organization_id, context){
    do_loading();
    xajax_remove_feed_from_team_folder(id, folder_id, organization_id, context);
}

function delete_folder_from_organization(id, organization_id, context){
    var confirm_text = _js("Are you sure you want to remove this folder from your team?");
    confirm_text += '<p class="redlink">' + _js('Warning:') + ' ' + _js('The folder and its feeds will be removed from all team members.') + '</p>';
    xconfirm(confirm_text,'delete_folder_from_organization_execute(' + id + ', ' + organization_id + ' ,"' + context + '");');
}

function delete_folder_from_organization_execute(id, organization_id, context){
    do_loading();
    xajax_delete_folder_from_organization(id, organization_id, context);
}

function delete_folder(id,context,forced_title){
    var title = '';
    if(forced_title){
        title = forced_title;
    }else if($('#link_0_' + id)[0]){
        title = $('#link_0_' + id).text();
    }
    var is_folder = true;
    var confirm_text = _js("Are you sure you want to delete this folder?");
    if($('#nodeimg_0_' + id).hasClass('icon-add-menu-tag') || $('#nodeimg_0_' + id).hasClass('icon-tree_team_tag')){
        is_folder = false;
        confirm_text = _js("Are you sure you want to delete this tag?");
    }else if($('#nodeimg_0_' + id).hasClass('icon-loupe_small') || $('#nodeimg_0_' + id).hasClass('icon-monitored-keyword') || $('#nodeimg_0_' + id).hasClass('icon-monitored-keyword-public') || context == 'monitored_keywords_inline'){
        is_folder = false;
        confirm_text = _js("Are you sure you want to delete this keyword?");
    }
    if(title != ''){
        confirm_text += '<p><b>' + title + '</b></p>'
    }

    if(is_folder){
        confirm_text += '<p><input type="checkbox" value="1" id="delete_folder_unsubscribe"><label for="delete_folder_unsubscribe">'+_js("Unfollow all feeds.")+'</label></p>';
        xconfirm(confirm_text,'xajax_delete_folder(' + id + ',$(\'#delete_folder_unsubscribe\').is(\':checked\'),"' + context + '")');
    }else{
        xconfirm(confirm_text,'xajax_delete_folder(' + id + ',false,"' + context + '")');
    }
}

function create_team_folder_from_personal_folder(folder_id){
    do_loading();
    xajax_create_team_folder_from_personal_folder(folder_id);
}

function follow_team_folder(folder_id, organization_id, context){
    do_loading();
    xajax_follow_team_folder(folder_id, organization_id, context);
}

function unfollow_team_folder_prompt(folder_id, organization_id, context){
    var confirm_text = _js("Are you sure?");
    xconfirm(confirm_text,'unfollow_team_folder(' + folder_id + ', ' + organization_id + ' ,"' + context + '");');
}

function unfollow_team_folder(folder_id, organization_id, context){
    do_loading();
    xajax_unfollow_team_folder(folder_id, organization_id, context);
}

function dock_tree_pane(){
    var tree_width = $('#tree_pane').outerWidth() + 10; // 10 pixels for the shadow
    $('#tree_pane').addClass('tree_pane_flyout');
    $('#wraper').addClass('tree_pane_docked');
    // $('#sb_rp_front_spacer').hide();
    if(float_left == 'left'){
        $('#tree_pane').css({position: 'absolute', top: '0px', left: (tree_width *-1) + 'px'});
        $('#reader_pane').css('left','0');
    }else{
        $('#tree_pane').css({position: 'absolute', top: '0px', right: (tree_width *-1) + 'px'});
        $('#reader_pane').css('right','0');
    }

    tree_docked = 1;

    // $('#sb_tree_part').hide();
    $('#tree_announce').hide();
    $('#tree_ad').hide();
    // $('#sb_rp_show').off('mouseenter');
    // $('#sb_rp_show').show();

    // $('#sb_tree_part').show();
    // $('#sb_rp_show').hide();
    // resize_toolbar_heading();

    // setTimeout(function(){
    //  $('#sb_rp_show').on('mouseenter',function(e){
    //      tree_menu_mouse_enter(e);
    //  });
    // },100);

    bind_dock_tree_events();
    resize();
    if(device_type != 'phone'){
        createCookie('tree_docked',tree_docked,31);
    }
}

function undock_tree_pane(){
    if(device_type == 'phone'){
        return;
    }
    tree_docked = 0;
    if(tree_slide_timeout){
        clearTimeout(tree_slide_timeout);
    }
    $('#tree_pane').removeClass('tree_pane_flyout');
    $('#wraper').removeClass('tree_pane_docked');
    // $('#sb_rp_front_spacer').show();
    if($($('#tree_pane')).is(':animated')){
        $('#tree_pane').finish();
    }
    if(float_left == 'left'){
        $('#tree_pane').css({position: 'relative', top: null, left: '0px'});
        $('#reader_pane').css('left','');
    }else{
        $('#tree_pane').css({position: 'relative', top: null, right: '0px'});
        $('#reader_pane').css('right','');
    }

    //$('#tree_width_css').attr('href','css/tree_width_'  + tree_width + '.css?ts=' + Math.random());

    // $('#sb_tree_part').show();
    $('#tree_announce').show();
    $('#tree_ad').show();
    // $('#sb_rp_show').hide();
    unbind_dock_tree_events();
    resize();
    if(device_type != 'phone'){
        createCookie('tree_docked',tree_docked,31);
    }
}

function dock_undock_tree_pane(from_shortcut){
    if(user_is_guest){
        return;
    }
    if(tree_docked == 1){
        undock_tree_pane();
        if(from_shortcut){
            create_bottom_notification(_js('Sidebar undocked.'),'info',true,1000);
        }
    }else{
        if(from_shortcut){
            create_bottom_notification(_js('Sidebar docked.') + ' ' + sprintf(_js('Press %s to undock.'),from_shortcut),'info',true,1000);
        }
        dock_tree_pane();
    }
}

function bind_dock_tree_events(){
    if(device_type == 'phone'){
        return;
    }
    $('#subscriptions_buttons, #tree_pane, #subscriptions_options_menu').on('mouseleave.tree_dock',function(event){
        slide_tree();
    });

    $('#subscriptions_buttons, #tree_pane, #subscriptions_options_menu').on('mouseenter.tree_dock',function(event){
        if(tree_slide_timeout && device_type == 'normal'){
            clearTimeout(tree_slide_timeout);
        }
    });

    $(document).on('mousemove.tree_dock',function(e){
        if(!tree_docked){
            return;
        }

        if((direction == 'ltr' && e.clientX <= 2) || (direction == 'rtl' && $(window).width() - e.clientX <= 2)){
            if(mouse_in_dock == false){
                tree_show_timer = setTimeout(function(){
                    tree_menu_mouse_enter(e);
                },250);
                mouse_in_dock = true;
            }
        }else{
            if(mouse_in_dock){
                if(tree_show_timer){
                    clearTimeout(tree_show_timer);
                }
                mouse_in_dock = false;
            }
        }
    });

    $('#tree_pane').on('mouseover.tree_dock',function(){
        if(tree_slide_timeout && device_type == 'normal'){
            clearTimeout(tree_slide_timeout);
        }
    });
}

function unbind_dock_tree_events(){
    if(device_type == 'phone'){
        return;
    }
    $('#subscriptions_buttons, #tree_pane, #subscriptions_options_menu').off('mouseleave.tree_dock');
    $('#subscriptions_buttons, #tree_pane, #subscriptions_options_menu').off('mouseenter.tree_dock');
    $(document).off('mousemove.tree_dock');
    $('#tree_pane').off('mouseover.tree_dock');
}

function collapse_tree(id,parent_id,depth){
    var child = document.getElementById('child_' + id);
    var plus = document.getElementById('plus_' + id);
    var img = document.getElementById('nodeimg_' + id);
}

function set_loading_progressbar(suffix){
    if(!suffix){
        suffix = '';
    }
    do_loading(_js('Loading') + '...');
    $('#loading_progressbar' + suffix).progressbar().show();
    $('#import_progress' + suffix).show();
}

function hide_loading_progressbar(suffix){
    if(!suffix){
        suffix = '';
    }
    stop_loading();
    $('#loading_progressbar' + suffix).hide();
    $('#import_progress' + suffix).hide();
}

function expand_tree(id,parent_id,depth,force,callback,no_collapse){
    var child = document.getElementById('child_' + id);
    var plus = document.getElementById('plus_' + id);
    var img = document.getElementById('nodeimg_' + id);
    force = true; // disable animations

    if(img && $(img).hasClass('icon-add-menu-tag')){
        return;
    }else if(plus && $(plus).hasClass('icon-expand-arrow-down-circle')){
        if(no_collapse){
            return;
        }

        if(child){
            child.style.display='none';
        }

        set_col_exp(id,parent_id,depth,0);
        try{
            $(plus).removeClass('icon-expand-arrow-down-circle').addClass('icon-expand-arrow-' + float_right + '-circle');
        }catch(e){}
    }else{
        if(child){
            if(child.className.indexOf('showed') == -1){
                child.style.display='block';
                if(id != 'tags' && id != 'active_searches' && id != 'library'){
                    build_tree(id,depth,force,false,callback);
                }
            }else{
                child.style.display='block';
            }
        }

        try{
            $(plus).removeClass('icon-expand-arrow-' + float_right + '-circle').addClass('icon-expand-arrow-down-circle');
        }catch(e){}
        set_col_exp(id,parent_id,depth,1);
        var proto = document.location.protocol;
    }
}

function fix_node_img(id){
    // legacy
    return;
}

function remove_focus(){
    var $tree = $('#tree_pane');
    $tree.find('.parent_div_inner_selected').removeClass('parent_div_inner_selected');
    $tree.find('.selected_parent').removeClass('selected_parent');
    $tree.find('.selected').removeClass('selected').addClass('normal');
}

function focusit(id,scroll,elem,from_ajax){
    remove_focus();
    var elink = '';
    var elparent = '';
    var elpdinner = '';
    if(id){
        elink = '#link_' + id;
        elparent = '#parent_' + id;
        elpdinner = '#pdinner_' + id;
    }else{
        elink = $(elem).children().eq(1);
        elparent = $(elem).parent().parent();
        elpdinner = $(elem).parent();
    }

    if(scroll && !from_ajax){
        if(!$(elparent)[0]){
            xajax_find_subscription_parent(id);
        }else if(!$(elparent).is(':visible')){
            var tmp_parent = $(elparent).parent().parent();
            if(tmp_parent){
                var parent_id = $(tmp_parent).attr('id').replace(/parent\_/,'').replace(/child\_/,'');
                expand_tree(parent_id,0,1,1);
            }
        }
    }
    try{
        $(elink).removeClass('normal').addClass('selected');
        $(elparent).addClass('selected_parent');
        $(elpdinner).addClass('parent_div_inner_selected');
        $(elpdinner).removeClass('tree_unseen');

        var bottom = $(elparent).offset().top + $(elparent).height();
        var height = $('#tree_pane').height();
        var top = $(elparent).offset().top - $('#subscriptions_buttons').outerHeight();

        if(scroll === true && (bottom > height || top < 0)){
            $('#tree_pane').scrollTo(elparent, 500, {axis : 'y' });
            // tree_pane_instance.scroll(elparent, 500, {axis : 'y' });
        }
    }catch(e){
    }
}

function tree_drop(src,dst){
    xajax_tree_drop(src,dst);
}

function conf_tree_drop(s,d,t){
    if(confirm(t)){
        xajax_move_tree(s,d);
    }
}
function reload_tree(delay){
    if(delay){
        setTimeout(function(){ build_tree(); },250);
    }else{
        //$('#tree').html('');
        build_tree();
    }
}

function build_expand_cookie(id,parent_id,depth,exp_children){
    for(var i in exp_children){
        if(i == parent_id){
            if(exp_children[i].children == undefined){
                exp_children[i].children = {};
            }
            exp_children[i].children[id] = {};
            exp_children[i].children[id].depth = depth;
            return;
        }else{
            if(exp_children[i].children != undefined){
                for(var ii in exp_children[i].children){
                    build_expand_cookie(id,parent_id,depth,exp_children[i].children);
                }
            }
        }
    }
}

function jump_to_subscription(type,fallback_to_all_articles){
    close_snackbar();
    var first_unread = null;
    var hit_current = false;
    var hit_next = false;
    var current_id = false;
    var current_element = false;
    if(feed_params.filter_type == 'folder'){
        current_id = '0_' + feed_params.filter_id;
    }else if(feed_params.filter_type == 'subscription'){
        current_id = '1_' + feed_params.filter_id;
        var divs = $('#tree_pane').find('.parent_div[id=parent_' + current_id + ']');
        if(divs.length > 1){
            $(divs).each(function(){
                if($(this).hasClass('selected_parent')){
                    current_element = $(this)[0];
                }
            });
        }
    }

    if($('#article_dialog')[0]){
        inno_dialog_close('article_dialog');
    }

    $('#tree_pane').find('.parent_div').each(function(){
        if($(this).attr('id') == undefined || (!$(this).parents('#tree')[0] && !$(this).parents('#tree_team')[0] && !$(this).parents('#child_channel')[0] && !$(this).parents('#child_active_searches')[0] && !$(this).parents('#child_library')[0] && !$(this).parents('#child_team_tags')[0] && !$(this).parents('#child_tags')[0])){
            return true;
        }
        var id = $(this).attr('id').replace(/parent\_/,'');

        var parent_id = ($(this).parent().attr('id') != 'tree') ? $(this).parent().attr('id').replace(/child\_/,'') : 0;
        if(parent_id != 0){
            //return true;
        }

        if($('#link_' + id).hasClass('tree_unread')){
            if(id == 'keyword_monitoring' || id == 'tags'){
                return true;
            }
            if(hit_current == true && id != null){
                focusit(id,true);
                var id_split = id.split(/\_/);
                if(id_split[0] == 0){
                    focusit('0_' + id_split[1],true);
                    view_tree_element('folder',id_split[1],1);
                }else if(id_split[0] == 1){
                    focusit('1_' + id_split[1],true);
                    view_tree_element('subscription',id_split[1],1);
                }

                hit_next = true;
                return false;
            }
            if(first_unread == null){
                first_unread = id;
            }
        }
        if(current_element){
            if(current_element === $(this)[0]){
                hit_current = true;
            }
        }else{
            if(id == current_id){
                hit_current = true;
            }
        }
    });

    if(hit_next === false && first_unread != null){
        id = first_unread;

        focusit(id,true);
        var id_split = id.split(/\_/);
        if(id_split[0] == 0){
            focusit('0_' + id_split[1],true);
            view_tree_element('folder',id_split[1],1);
        }else if(id_split[0] == 1){
            focusit('1_' + id_split[1],true);
            view_tree_element('subscription',id_split[1],1);
        }
    }else if(hit_next === false && fallback_to_all_articles){
        do_loading(_js("Refreshing")+'...');
        view_all_items();
        $('#tree_pane').scrollTo($('#subscriptions_fieldset'), 500, {axis : 'y' });
    }
}

function delete_from_expand_cookie(id,parent_id,exp_children){
    for(var i in exp_children){
        if(i == parent_id){
            delete exp_children[i].children[id];
        }else{
            if(exp_children[i].children != undefined){
                for(var ii in exp_children[i].children){
                    delete_from_expand_cookie(id,parent_id,exp_children[i].children);
                }
            }
        }
    }
}

function set_col_exp(id,parent_id,depth,op){
    if(!parent_id){
        parent_id = 0;
    }
    var tmp_exp = readCookie('tree_expands');
    if(tmp_exp && tmp_exp != 'all'){
        var exp = JSON.parse(tmp_exp);
    }else{
        var exp = {"0":{"children":{}}};
    }
    if(op == 0){
        delete_from_expand_cookie(id,parent_id,exp);
    }else if(op == 1){
        if(parent_id == 0){
            exp[parent_id].children[id] = {};
            exp[parent_id].children[id].depth = depth;
        }else{
            build_expand_cookie(id,parent_id,depth,exp);
        }
    }

    createCookie('tree_expands',JSON.stringify(exp),999);
}


function focus_subscription(dir,go){
    if(tree_move_cooldown == true){
        return;
    }
    tree_move_cooldown = true;
    setTimeout(function(){
        tree_move_cooldown = false;
    },50);

    var current_element = $('.parent_div_inner_focused')[0];
    if(!current_element){
        current_element = $('.parent_div_inner_selected')[0];
    }
    var current = '';
    var current_focused = null;
    var next_element = null;
    var prev_element = null;

    if(dir == 'next' && $('#pdinner_all_articles').hasClass('parent_div_inner_focused')){
        next_element = $('#tree').children('.parent_div:visible').first().children().eq(0);
    }else if(dir == 'next' && $(current_element).is($('#tree').children('.parent_div:visible').last().children().eq(0)) && !$('#tree').children('.parent_div:visible').last().children().eq(2).hasClass('showed')){
        next_element = $('#pdinner_all_articles');
    }else if(dir == 'next' && $(current_element).is($('#tree').find('.child_div .parent_div:visible').last().children().eq(0)) && $(current_element).parents('.parent_div').is($('#tree').children('.parent_div:visible').last())){
        next_element = $('#pdinner_all_articles');
    }else if(dir == 'prev' && $(current_element).is($('#tree').children('.parent_div:visible').first().children().eq(0))){
        next_element = $('#pdinner_all_articles');
    }else if(dir == 'next' && $('.tree_anchors:visible').last().parent().is($(current_element).parent())){
        $('#tree').children().each(function(){
            if($(this).css('display') != 'none'){
                next_element = $(this).first().children().eq(0);
                return false;
            }
        });
        //next_element = $('#child_tags, #child_active_searches, #tree').children(':visible').first().children().eq(0);
    }else if(dir == 'prev' && $('.tree_anchors:visible').first().parent().is($(current_element).parent())){
        $('#tree').children().each(function(){
            if($(this).css('display') != 'none'){
                next_element = $(this).first().children().eq(0);
                //return true;
            }
        });

        //next_element = $('#child_tags, #child_active_searches, #tree').children(':visible').last().children().eq(0);
    }else{
        if(current_element && !$(current_element).is(':visible')){
            current_element = $(current_element).parent().parent()[0];
        }

        $('.tree_anchors:visible').each(function(){
            if(dir == 'next' && current_focused != null){
                if($(this).parent()[0]){
                    if($(this).last().parent().css('display') == 'none'){
                        return true;
                    }
                }

                if($(this).parent().parent()[0]){
                    if($(this).parent().parent().css('display') == 'none'){
                        return true;
                    }
                }

                next_element = $(this).siblings().eq(0);
                return false;
            }

            if($(this).parent().is($(current_element).parent())){
                if(dir == 'prev' && prev_element != null){
                    next_element = $(prev_element).siblings().eq(0);
                    return false;
                }
                current_focused = $(this);
            }

            if($(this).parent()[0] && $(this).last().parent().css('display') != 'none' && $(this).parent().parent()[0] && $(this).last().parent().parent().css('display') != 'none'){
//                  if($(this).is(':visible')){
                prev_element = $(this);
            }
        });
    }

    if(!next_element || !next_element[0]){
        if(dir == 'next'){
            // next_element = $('#tree').children(':visible').eq(0).children().eq(0);
            next_element = $('#pdinner_all_articles');
        }else{
            if($('#pdinner_all_articles').hasClass('parent_div_inner_focused')){
                if($('#tree').children('.parent_div:visible').last().children().eq(2).hasClass('showed')){
                    next_element = $('#tree').find('.child_div .parent_div:visible').last().children().eq(0);
                }else{
                    next_element = $('#tree').children('.parent_div:visible').last().children().eq(0);
                }
            }else{
                next_element = $('#pdinner_all_articles');
            }
        }
    }

    if(next_element && next_element[0]){
        $('.parent_div_inner_focused').removeClass('parent_div_inner_focused');
        $(next_element).addClass('parent_div_inner_focused');

        var top = $(next_element).offset().top;
        var bottom = (top + $(next_element).outerHeight());
        var bottom_delta = $('#tree_pane').height() + $('#subscriptions_buttons').outerHeight() - bottom;

        if(bottom_delta < 0){
            next_element.get(0).scrollIntoView(0);
        }else if(top < $('#subscriptions_buttons').outerHeight()){
            next_element.get(0).scrollIntoView(1);
        }
        if(go){
            open_focused_tree_element();
        }
    }
}

function focus_article_url(id){
    // [INO-2869] When the browser is zoomed (and not in full screen) it causes the wider body than the window size.
    return;
    if($('#aurl_' + id)[0] && $('#aurl_' + id).is(':visible')){
        $('#aurl_' + id).focus();
    }else if($('#article_title_link_' + id)[0] && $('#article_title_link_' + id).is(':visible')){
        $('#article_title_link_' + id).focus();
    }
}

function open_focused_tree_element(){
    var selectors = ($('.parent_div_inner_focused')[0]) ? $('.parent_div_inner_focused') : $('.parent_div_inner_selected');
    $(selectors).each(function(){
        var id = $(this).attr('id').replace(/pdinner\_/,'');
        if(id == 'all_articles'){
            focusit('all_articles');
            view_all_items();
            return false;
        }
        var id_split = id.split(/_/);
        focusit(false,false,$(this).children().eq(1));
        if(id_split[0] == 0){
            view_tree_element('folder',id_split[1],true,$(this).children().eq(1));
        }else{
            view_tree_element('subscription',id_split[1],true,$(this).children().eq(1));
        }
        $('.parent_div_inner_focused').removeClass('parent_div_inner_focused');
        return false;
    });
}

function clear_article_contents(no_params){
    // if(prev_theme){
    //  theme = prev_theme;
    //  prev_theme = null;
    //  init_theme();
    // }
    if(!no_params){
        if(!feed_params.filter_pinned && !feed_params.tmp_search && feed_params.filter_type != 'old_search'){
            delete_feed_param('search_term');
            if(feed_params.search_options){
                delete_feed_param('search_options');
            }
        }
        if(feed_params.last_load_date){
            delete_feed_param('last_load_date');
        }
    }

    if(feed_params.start_from_date){
        delete_feed_param('start_from_date');
    }

    if(feed_params.first_article_date){
        delete_feed_param('first_article_date');
    }

    // if(feed_params.organization_id){
    //     delete_feed_param('organization_id');
    // }

    var article_contents_keys = Object.keys(article_contents);
    for(var i = 0; i < article_contents_keys.length; ++i) {
        delete article_contents[article_contents_keys[i]];
    }
    clear_article_timers();
    if(next_articles_timeout){
        clearTimeout(next_articles_timeout);
    }
    tmp_folders = [];
    $('#next_articles').css('opacity','0.0');
}

function clear_article_timers(){
    $('#reader_pane').finish();
    articles_moving = false;
    if(mark_current_timer){
        clearTimeout(mark_current_timer);
    }
    if(scroll_cooldown){
        clearTimeout(scroll_cooldown);
    }
}

function clear_racing_xajax_requests(){
    if(current_xajax_requests.print_articles){
        stop_loading();
        xajax.abortRequest(current_xajax_requests.print_articles);
        current_xajax_requests.print_articles = null;
        console_log('xAjax print_articles request in progress. Aborting previous...');
    }

    if(current_xajax_requests.reload_articles){
        xajax.abortRequest(current_xajax_requests.reload_articles);
        current_xajax_requests.reload_articles = null;
        console_log('xAjax reload_articles request in progress. Aborting previous...');
    }

    if(current_xajax_requests.discover){
        xajax.abortRequest(current_xajax_requests.discover);
        current_xajax_requests.discover = null;
        console_log('xAjax discover request in progress. Aborting previous...');
    }

    if(current_xajax_requests.do_search){
        xajax.abortRequest(current_xajax_requests.do_search);
        current_xajax_requests.do_search = null;
        console_log('xAjax do_search request in progress. Aborting previous...');
    }

    if(current_xajax_requests.print_dashboard){
        xajax.abortRequest(current_xajax_requests.print_dashboard);
        current_xajax_requests.print_dashboard = null;
        console_log('xAjax print_dashboard request in progress. Aborting previous...');
    }

    if(current_xajax_requests.print_teams){
        xajax.abortRequest(current_xajax_requests.print_teams);
        current_xajax_requests.print_teams = null;
        console_log('xAjax print_teams request in progress. Aborting previous...');
    }

    if(current_xajax_requests.build_searcher_content){
        xajax.abortRequest(current_xajax_requests.build_searcher_content);
        current_xajax_requests.build_searcher_content = null;
        console_log('xAjax build_searcher_content request in progress. Aborting previous...');
    }

    if(current_xajax_requests[atob('YnVpbGRfYWRtaW4=')]){
        xajax.abortRequest(current_xajax_requests[atob('YnVpbGRfYWRtaW4=')]);
        current_xajax_requests[atob('YnVpbGRfYWRtaW4=')] = null;
        console_log('xAjax YnVpbGRfYWRtaW4= request in progress. Aborting previous...');
    }

    if(current_xajax_requests[atob('YWRtaW5fY21k')]){
        xajax.abortRequest(current_xajax_requests[atob('YWRtaW5fY21k')]);
        current_xajax_requests[atob('YWRtaW5fY21k')] = null;
        console_log('xAjax YWRtaW5fY21k request in progress. Aborting previous...');
    }

    if(current_xajax_requests[atob('Z2VzdGFwbw==')]){
        xajax.abortRequest(current_xajax_requests[atob('Z2VzdGFwbw==')]);
        current_xajax_requests[atob('Z2VzdGFwbw==')] = null;
        console_log('xAjax Z2VzdGFwbw== request in progress. Aborting previous...');
    }
}


// function purge_ads(class_name){
//     if(!ads_enabled){
//         return;
//     }
//     if(timer13){
//         clearTimeout(timer13);
//     }
//     if(!class_name){
//         class_name = 'sinner';
//     }
//     var now = unix_timestamp();
//     $('#ads_purgatory').find('.' + class_name).each(function(){
//         /*var $element = $(this);
//         if(now - $element.data('entry') > 10){
//             $element.find('iframe').each(function(){
//                 $(this).attr('src','about:blank');
//             });
//             $element.remove();
//         }*/
//         if(now - $(this).data('entry') > 10){
//             $(this).find('iframe').attr('src','about:blank');
//             $(this).remove();
//         }
//         /*if(now - $(this).data('entry') > 10){
//             $(this).remove();
//         }*/
//     });

//     $('#reader_pane').find('.' + class_name).each(function(){
//         $(this).appendTo('#ads_purgatory').data('entry',unix_timestamp());
//         /*$(this).appendTo('#ads_purgatory').data('entry',unix_timestamp()).find('script').remove().end()
//             .find('div').remove().end()
//             .find('iframe').attr('src','about:blank').contents().find('html').html('');*/
//     });

//     $('#sinner_container').find('.' + class_name).each(function(){
//         $(this).appendTo('#ads_purgatory').data('entry',unix_timestamp());

//         // Using empty() of $(this) doesn't solve the memory overhead problem. Found that find('iframe').remove() doesn't optimize as expected also. The best performance on iframe remove I'v got with attr('src','about:blank').contents().find('html').html('')
//         /*$(this).appendTo('#ads_purgatory').data('entry',unix_timestamp()).find('script').remove().end()
//             .find('div').remove().end()
//             .find('iframe').attr('src','about:blank').contents().find('html').html('');*/
//     });
// }

function purge_ads(class_name){
    if(!ads_enabled){
        return;
    }
    if(timer13){
        clearTimeout(timer13);
    }
    if(!class_name){
        class_name = 'sinner';
    }
    var now = unix_timestamp();
    $('#ads_purgatory').find('.' + class_name).each(function(){
        var $element = $(this);
        if(now - $element.data('entry') > 10){
            $element.find('iframe').each(function(){
                $(this).attr('src','about:blank');
            });
            $element.remove();
        }
    });

    $('#reader_pane').find('.' + class_name).each(function(){
        $(this).appendTo('#ads_purgatory').data('entry',unix_timestamp());
    });

    $('#sinner_container').find('.' + class_name).each(function(){
        $(this).appendTo('#ads_purgatory').data('entry',unix_timestamp());
    });

    $('#article_below_dialog').find('.' + class_name).each(function(){
        $(this).appendTo('#ads_purgatory').data('entry',unix_timestamp());
    });
}


function purge_ox(){
    return;
    for(var i in window){
        if(i.indexOf('OX') === 0){
            window[i] = null;
        }
    }
}

function clear_article_divs(){
    purge_ads();
    if(old_location_hash !== null){
        set_location_hash(old_location_hash);
        doc_title = old_location_hash_title;
        set_title(title_num);
        old_location_hash = null;
        old_location_hash_title = null;
    }

    // $('#reader_pane').html('');
    $('#reader_pane').html('').removeClass('reader_pane_sinner');
    $('#static_search_menu').hide();
    $('#sinner_container').hide();
    $('#three_way_contents').html('<div id="no_article_selected" class="reader_pane_message">'+_js("No article selected")+'</div>');
    $('#no_article_selected').hide();
    $('#single_article_holster').html('');
    $('#sb_tp_search_overlay').show();
    if($('#article_dialog')[0]){
        inno_dialog_close('article_dialog');
    }
    hide_new_articles_overlay(0);
    clear_article_contents();
    adsense_height_fixer_cleanup();
    remove_deduplicator_hint();
    discovery_clicked = false;
    older_articles_hint_showed = true;
    onboard_stop_tour();
    hide_discovery_overlay(false);
    // clear_toolbar();
    if(ads_static_refresh_timer){
        clearTimeout(ads_static_refresh_timer);
        ads_static_refresh_timer = null;
    }
    tmp_search_section = null;

    // Topics count progress bar
    if(topics_progress_bar){
        topics_progress_bar.remove_bar_clean_topicall();
    }
    $('#fo_control_buttons').html('');

    // clear translation object
    bing_originals = {};
    current_article_num = 0;

    inno_dialog_close('article_text_preferences');
    check_bulk_articles();
    last_bulk_selected_article = null;
}

function clear_view_styles(){
    $('#reader_pane').removeClass('tiles_wrapper');
    $("#reader_pane").width('auto').css(float_right,'0px');
    $('#three_way_contents').hide();
    if(ads_enabled && $('#three_way_contents_ad')[0]){
        $('#three_way_contents_ad').hide();
    }
}

function view_tree_element(type,id,clear_article,elem,event,scroll){
    var new_heading = '';
    var new_icon = '';
    var $new_icon = false;
    var tree_type = false;
    if(type == 'subscription'){
        tree_type = 1;
    }else if(type == 'folder'){
        tree_type = 0;
    }else if(type == 'team'){
        tree_type = 4;
    }

    if(tree_type !== false){
        if(elem){
            focusit(false,scroll,elem);
            new_heading = $(elem).find('.tree_node').text();
            $new_icon = $(elem).find('.feed_favicon');
        }else{
            if(is_numeric(id)){
                focusit(tree_type + '_' + id,scroll);
                new_heading = $('#link_' + tree_type + '_' + id).text();
                $new_icon = $('#nodeimg_' + tree_type + '_' + id);
            }
        }

        if(type == 'folder' && !$new_icon[0]){
            new_heading = '<span class="sb_rp_heading_icon icon16 icon-preferences-folder"></span>' + new_heading;
        }else if($new_icon){
            if($new_icon.is('span')){
                var classes = $new_icon.attr('class').split(/\s+/);
                if(classes.length){
                    for(var i in classes){
                        if(classes[i].match(/icon\-.*?/)){
                            new_heading = '<span class="sb_rp_heading_icon icon16 ' + classes[i] + '"></span>' + new_heading;
                            break;
                        }
                    }
                }
            }else if($new_icon.is('img')){
                new_heading = '<img class="sb_rp_heading_icon icon16" src="' + $new_icon.attr('src') + '">' + new_heading;
            }
        }
    }


    seen_ids_hash = '';
    clear_article_divs();

    if(new_heading){
        $('#sb_rp_heading').html('<a href="javascript:void(0);" onclick="scroll_reader_pane_to_top();" title="' + _js('Scroll to top') + '">' + new_heading + '</a>');
    }

    if(type == 'feed'){
        if(window.hasOwnProperty('found_subcscription_id_by_feed_url') && found_subcscription_id_by_feed_url && found_subcscription_id_by_feed_url[decodeURIComponent(id)]){
            type = 'subscription';
            id = found_subcscription_id_by_feed_url[decodeURIComponent(id)];
        }else{
            var decoded_feed = decodeURIComponent(id);
            $('.parent_div_link').each(function(){
                if($(this).data('feedid') == decoded_feed){
                    type = 'subscription';
                    id = $(this).attr('id').replace(/linkdiv\_1\_/,'');
                    return false;
                }
            });
        }

        // When all else fail
        if(type == 'feed'){
            id = decodeURIComponent(id);
        }
    }

    set_feed_param('filter_type',type);
    set_feed_param('filter_id',id);

    var found_override_id = false;
    if(type == 'subscription'){
        if($('#linkdiv_1_' + id).data('feedid')){
            found_override_id = true;
            set_location_hash('/feed/' + rawurlencode($('#linkdiv_1_' + id).data('feedid')));
        }else if($('#linkdiv_1_' + id).data('userid')){
            found_override_id = true;
            if(feed_params.channel_section){
                set_location_hash('/u/' + rawurlencode($('#linkdiv_1_' + id).data('userid')) + '/' + feed_params.channel_section);
            }else{
                set_location_hash('/u/' + rawurlencode($('#linkdiv_1_' + id).data('userid')));
            }
        }else if($('#linkdiv_1_' + id).data('teamid')){
            found_override_id = true;
            set_location_hash('/team/' + rawurlencode($('#linkdiv_1_' + id).data('teamid')));
        }
    }else if(type == 'folder' && is_numeric(id)){
        if($('#linkdiv_0_' + id).data('folderid')){
            found_override_id = true;
            set_location_hash('/folder/' + rawurlencode($('#linkdiv_0_' + id).data('folderid')));
        }
    }

    if(found_override_id == false){
        set_loc();
    }

    if(feed_params.channel_section){
        delete_feed_param('channel_section');
    }

    if(feed_params.filter_tag_more){
        delete_feed_param('filter_tag_more');
    }

    print_articles();
    if(clear_article == 1){
        delete_feed_param('opened_article');
    }
    close_search_overlay();
    clear_search_box();

    if(event){
        event.returnValue = false;
        event.stopPropagation();
        return false;
    }
}

function reader_pane_loading(){
    $('#reader_pane').html('<div class="reader_pane_message"><div class="loader">' + _js('Loading articles...') + '</div></div>');
    check_reader_pane_message();
}

function close_search_overlay(){
    return;
    if(feed_params.filter_type != 'old_search' && feed_params.tmp_search != 1){
        if(user_is_guest){
            // $('#sb_tp_search_overlay').hide();
        }
        hide_discovery_overlay(true);
        // $('#feed_searcher').val('');
        if(tree_docked == 1){
            $('#sb_tree_part').hide();
            $('#sb_rp_show').show();
            resize_toolbar_heading();
        }
    }
}

function clear_search_box(){
    if(!feed_params.filter_pinned){
        $('#feed_searcher').val('');
        $('#reader_pane').focus();
    }
}

function hide_discovery_overlay(set_location){

    if(discovery_clicked == true){
        return;
    }

    if($('#discovery_overlay').is(':animated')){
        $('#discovery_overlay').finish();
    }
    $('#discovery_overlay').scrollTop(0).hide();

    if(set_location && hash_disabled == false){
        if(previous_location){
            set_location_hash(previous_location);
        }
        if(previous_heading){
            $('#sb_rp_heading').html(previous_heading);
        }
    }
    previous_location = '';
    previous_heading = '';
    if(device_type != 'phone'){
        $('#sb_rp_refresh').show();
    }
    $('#sb_rp_subscribe').show();
    $('#discovery_popular_bundles').html('');
}

function show_discovery_overlay(){
    return;
    if(force_no_discovery){
        return;
    }

    $('#discovery_overlay').find('.discovery_section_thumb').each(function(){
        var $this = $(this);
        if($this.data('imgsrc')){
            $this.html('<img src="' + $this.data('imgsrc') + '">').removeData('imgsrc').removeAttr('data-imgsrc');
        }
    });

    if($('#discovery_overlay').is(':animated')){
        $('#discovery_overlay').finish();
    }
    $('#discovery_overlay').fadeIn('fast');

    if($('#discovery_popular_bundles').html() == '' && device_type != 'phone'){
        //xajax_fill_discovery_overlay();
    }

    var loc = get_location_hash();
    //if(previous_heading.indexOf('sb_rp_discovery') == -1){
    if(loc != 'discovery'){
        if(!$('#sb_rp_heading')[0]){
            $('#sb_rp_ribbon').append('<div class="inno_toolbar_spacer"></div><div id="sb_rp_heading" class="inno_toolbar_text_node inno_toolbar_rp_heading">&nbsp;</div>');
        }
        previous_location = loc;
        previous_heading = $('#sb_rp_heading').html();
        set_location_hash('discovery');
        var button = '<div id="sb_rp_discovery_button" class="inno_toolbar_button inno_toolbar_button_subscribe" style="top:9px;"><span class="inno_toolbar_button_caption">'+_js("Close")+'</span></div>';
        $('#sb_rp_heading').html('<div id="sb_rp_discovery" class="pull_left">'+_js("Discovery")+'</div><div class="inno_toolbar_spacer"></div><div class="inno_toolbar_spacer"></div><div class="inno_toolbar_spacer"></div> ' + button);
        $('#sb_rp_refresh').hide();
        $('#sb_rp_subscribe').hide();
    }
}

function view_all_items(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    delete_feed_param('filter_type');
    delete_feed_param('filter_id');
    delete_feed_param('opened_article');
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
    focusit("all_articles");
}

function view_all_items_team(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    set_feed_param('filter_type', 'all_articles_team');
    delete_feed_param('filter_id');
    delete_feed_param('opened_article');
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
    focusit("all_articles_team");
}

function view_trending(tab){
    if(!tab){
        tab = 'hot';
    }
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("trending");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','trending');
    set_feed_param('trending_tab',tab);
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_recent(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("recent");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','recent');
    print_articles();
    set_loc();
    close_search_overlay();
}

function view_annotated(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("annotated");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','annotated');
    print_articles();
    set_loc();
    close_search_overlay();
}

function view_web_pages(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("web_pages");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','web_pages');
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_tags(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("tags");
    delete_feed_param('opened_article');
    delete_feed_param('organization_id');
    set_feed_param('filter_type','tags');
    set_feed_param('filter_id','');
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_team_tags(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("all_team_tags");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','tags');
    set_feed_param('filter_id','');
    set_feed_param('organization_id', joined_organization_id);
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_active_searches(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("keyword_monitoring");
    delete_feed_param('opened_article');
    delete_feed_param('organization_id');
    set_feed_param('filter_type','active_searches');
    set_feed_param('filter_id','');
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_commented(open_id){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("commented");
    if(open_id){
        set_feed_param('search_comment',open_id);
    }else{
        delete_feed_param('opened_article');
    }
    set_feed_param('filter_type','commented');
    print_articles();
    delete_feed_param('search_article');
    delete_feed_param('search_comment');
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_profile(id,params){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    set_feed_param('filter_type','profile');
    set_feed_param('filter_id',id);
    set_feed_param('profile_params',params);
    if(params.tab){
        set_feed_param('channel_section',params.tab);
    }
    print_articles();
    if(params.tab){
        set_feed_param('channel_section',params.tab);
    }
    delete_feed_param('search_article');
    delete_feed_param('search_comment');
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_article(id,comment_id,unsubscribe,broadcast_teams){
    seen_ids_hash = '';
    remove_focus();
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    if(comment_id){
        set_feed_param('search_comment',comment_id);
    }
    set_feed_param('search_article',id);
    set_feed_param('filter_type','article');
    set_feed_param('filter_id',id);
    if(unsubscribe){
        set_feed_param('unsubscribe_comments',1);
    }
    if(broadcast_teams){
        set_feed_param('broadcast_teams',broadcast_teams);
    }
    set_loc();
    print_articles();
    delete_feed_param('search_article');
    delete_feed_param('search_comment');
    if(unsubscribe){
        delete_feed_param('unsubscribe_comments');
    }
    if(broadcast_teams){
        delete_feed_param('broadcast_teams');
    }
    close_search_overlay();
    clear_search_box();
}

function view_liked(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("liked");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','liked');
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_feed(id,from_catalog){
    seen_ids_hash = '';
    remove_focus();
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','feed');
    set_feed_param('filter_id',id);
    if(from_catalog){
        set_feed_param('from_catalog',1);
    }
    print_articles();
    if(from_catalog){
        delete_feed_param('from_catalog');
    }
    set_loc();
    close_search_overlay();
}

function view_feeds(ids,from_catalog){
    seen_ids_hash = '';
    remove_focus();
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','feeds');
    set_feed_param('filter_id',ids);
    print_articles();
    close_search_overlay();
}

function view_bundle(id){
    seen_ids_hash = '';
    remove_focus();
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','bundle');
    set_feed_param('filter_id',id);

    print_articles();

    set_loc();
    close_search_overlay();
}

function view_team_folder(id){
    seen_ids_hash = '';
    remove_focus();
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','team_folder');
    set_feed_param('filter_id',id);

    print_articles();

    set_loc();
    close_search_overlay();
}

function open_searcher(params){
    clear_racing_xajax_requests();
    seen_ids_hash = '';
    $('#reader_pane').removeClass();
    clear_article_divs();
    clear_view_styles();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();

    if(document.getElementById('searcher_input')){
        document.getElementById('searcher_input').dataset.search_lang = '';
    }

    // TODO - comment this out to make search in all searctions by default
    // if(feed_params.filter_type == '' || feed_params.filter_type == 'starred' || feed_params.filter_type == 'web_pages' || feed_params.filter_type == 'annotated' || feed_params.filter_type == 'tags' || feed_params.filter_type == 'active_searches' || feed_params.filter_type == 'channel' || feed_params.filter_type == 'subscription' || feed_params.filter_type == 'folder'){
    //     set_feed_param('search_filter_type', feed_params.filter_type);
    //     set_feed_param('search_filter_id', feed_params.filter_id);
    // }

    if(params && params.search_type == 'local'){
        set_feed_param('search_filter_type', feed_params.filter_type);
        set_feed_param('search_filter_id', feed_params.filter_id);
    }else if(params && (params.search_type == 'global' || params.tab == 'global')){
        set_feed_param('search_filter_type', '');
        set_feed_param('search_filter_id', '');
        set_feed_param('search_options', 4);
        search_options = 4;
    }else{
        set_feed_param('search_filter_type', '');
        set_feed_param('search_filter_id', '');
    }

    set_feed_param('filter_type','search');
    set_feed_param('view_style',view_style_search);
    view_style = view_style_search;
    build_searcher(params);
    setTimeout(function(){
        $('#searcher_input').focus().click();
    },0);
}

function view_ril(service){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit(service);
    delete_feed_param('opened_article');
    set_feed_param('filter_type',service);
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_channel(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("channel");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','channel');
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

function view_teams(params){
    seen_ids_hash = '';
    $('#reader_pane').removeClass();
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    focusit("team_dashboard");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','teams');
    set_feed_param('filter_id',joined_organization_id);
    if(params && params.action){
        set_feed_param('team_action',params.action);
    }
    current_teams_params = params;
    print_teams(params);
    set_loc();
    delete_feed_param('team_action');
    close_search_overlay();
    clear_search_box();
}

function view_hub(){
    cancel_articles_request();
    seen_ids_hash = '';
    clear_article_divs();
    //do_loading();
    focusit("hub");
    set_feed_param('filter_type','hub');
    print_hub();
    set_loc();
    close_search_overlay();
}

function view_friend_finder(params){
    cancel_articles_request();
    seen_ids_hash = '';
    clear_article_divs();
    clear_view_styles();
    remove_focus();
    set_feed_param('filter_type','friend_finder');
    xajax_print_friend_finder(params);
    set_loc();
    close_search_overlay();
}

function view_my_channel(open_id){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    focusit("my_channel");
    if(open_id){
        set_feed_param('search_article',open_id);
    }else{
        delete_feed_param('opened_article');
    }
    set_feed_param('filter_type','my_channel');

    print_articles();
    delete_feed_param('search_article');
    set_loc();
    close_search_overlay();
}

function view_unseen_items(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    //do_loading();
    set_feed_param('filter_type','unseen');
    delete_feed_param('opened_article');
    print_articles();
    set_loc();
    close_search_overlay();
}

function view_favourite_items(){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    delete_feed_param('filter_type');
    delete_feed_param('filter_id');
    delete_feed_param('opened_article');
    set_feed_param('filter_type','starred');
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
    focusit("starred");
}

function view_today(tab){
    seen_ids_hash = '';
    clear_article_divs();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    delete_feed_param('filter_type');
    delete_feed_param('filter_id');
    delete_feed_param('opened_article');
    set_feed_param('filter_type','today');
    set_feed_param('today_tab',tab);
    print_articles();
    set_loc();
    close_search_overlay();
    clear_search_box();
    focusit("today");
}

function view_welcome(){
    seen_ids_hash = '';
    clear_article_divs();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','welcome');
    clear_view_styles();
    xajax_print_welcome();
    set_loc();
    close_search_overlay();
}

function view_library(){
    seen_ids_hash = '';
    clear_article_divs();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','library');
    focusit('library');
    clear_view_styles();
    xajax_print_library();
    set_loc();
    close_search_overlay();
}

function view_tags_dashboard(params){
  open_section('tags_dashboard', xajax_print_tags, params)
}

function view_team_tags_dashboard(params){
    if(!params){
        params = {};
    }
    if(!params.organization_id){
        params.organization_id = joined_organization_id;
    }
    focusit('team_tags');
    open_section('team_tags_dashboard', xajax_print_tags, params)
}

function view_rules(){
    seen_ids_hash = '';
    clear_article_divs();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','rules');
    focusit('rules');
    clear_view_styles();
    xajax_print_rules({type: 'rules'});
    set_loc();
    close_search_overlay();
}

function view_filters(){
    seen_ids_hash = '';
    clear_article_divs();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','filters');
    focusit('filters');
    clear_view_styles();
    xajax_print_rules({type: 'filters'});
    set_loc();
    close_search_overlay();
}

function view_highlighters(){
    seen_ids_hash = '';
    clear_article_divs();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','highlighters');
    focusit('highlighters');
    clear_view_styles();
    xajax_print_highlighters();
    set_loc();
    close_search_overlay();
}

function build_covid19_alert(){
    seen_ids_hash = '';
    clear_article_divs();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','covid19_alert');
    clear_view_styles();
    xajax_print_highlighters();
    set_loc();
    close_search_overlay();
}

function view_monitored_keywords(){
    seen_ids_hash = '';
    clear_article_divs();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','monitored_keywords');
    focusit('active_searches');
    clear_view_styles();
    xajax_print_monitored_keywords();
    set_loc();
    close_search_overlay();
}

function view_dashboard(){
    seen_ids_hash = '';
    $('#reader_pane').removeClass();
    clear_article_divs();
    clear_view_styles();
    clear_racing_xajax_requests();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    focusit("dashboard");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','dashboard');
    remove_article_classes();
    xajax_print_dashboard();
    set_loc();
    close_search_overlay();
    clear_search_box();
}

// var prev_theme = null;
function view_upgrade(params){
    inno_dialog_close_all();
    hide_add_options();
    seen_ids_hash = '';
    $('#reader_pane').removeClass();
    clear_article_divs();
    clear_view_styles();
    clear_racing_xajax_requests();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','upgrade');
    remove_article_classes();
    upgrade_params = params;
    if(params === undefined)
      params = {}
    params.query = getQueryParams();
    xajax_print_upgrade(params);
    set_loc();
    close_search_overlay();
}

function view_apps(params){
    inno_dialog_close_all();
    hide_add_options();
    seen_ids_hash = '';
    $('#reader_pane').removeClass();
    clear_article_divs();
    clear_view_styles();
    clear_racing_xajax_requests();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','apps');
    remove_article_classes();
    upgrade_params = params;
    xajax_print_apps();
    set_loc();
    close_search_overlay();
}

function reload_upgrade(){
  if(feed_params.filter_type != 'upgrade' && feed_params.filter_type != 'upgrade_teams') {
    return false;
  }
  if(!upgrade_params){
      upgrade_params = {}
  }
  if(feed_params.filter_type == 'upgrade') {
    view_upgrade(upgrade_params);
  } else {
    view_upgrade_teams(upgrade_params);
  }
}

function view_upgrade_from_tree(){
    view_upgrade();
    set_location_hash('upgrade/feature/from_tree');
}

function view_upgrade_teams(params){
    inno_dialog_close_all();
    hide_add_options();
    seen_ids_hash = '';
    clear_racing_xajax_requests();
    clear_article_divs();
    clear_view_styles();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','upgrade_teams');
    upgrade_params = params;
    if(params === undefined)
      params = {}
    params.query = getQueryParams();
    xajax_print_upgrade_teams(params);
    set_loc();
    close_search_overlay();
}

function view_keyboard_shortcuts(){
    inno_dialog_close_all();
    hide_add_options();
    seen_ids_hash = '';
    clear_racing_xajax_requests();
    $('#reader_pane').removeClass();
    clear_article_divs();
    close_search_overlay();
    clear_view_styles();
    remove_article_classes();
    articles_order = global_articles_order;
    group_article_list = global_group_article_list;
    init_articles_order();
    init_group_article_list();
    do_loading();
    delete_feed_param('opened_article');
    set_feed_param('filter_type','keyboard_shortcuts');
    xajax_print_keyboard_shortcuts();
    set_loc();
}

function upgrade_loaded(params){
    var rewrites = {};
    rewrites.tag_email_message = 'mail2tag';
    if(params){
        if(params.feature){
            if(rewrites[params.feature]){
                params.feature = rewrites[params.feature];
            }
            $('#feature_' + params.feature).addClass('tr_hl');
        }
    }
}

function view_stats(reset){
    clear_racing_xajax_requests();
    seen_ids_hash = '';
    $('#reader_pane').removeClass();
    clear_article_divs();
    clear_view_styles();
    do_loading();
    focusit("stats");
    delete_feed_param('opened_article');
    set_feed_param('filter_type','stats');
    xajax_print_stats(reset);
    if(element_for_hide != null){
        if(!$('#link_' + element_for_hide).hasClass('selected')){
            $('#parent_' + element_for_hide).hide();
            element_for_hide = null;
        }
    }
    set_loc();
    close_search_overlay();
}

function color_tree_active_element(scroll){
    if(feed_params.filter_type == 'folder'){
        if(feed_params.filter_id && !is_numeric(feed_params.filter_id)){
            $('#tree').find('.tree_link_folder').each(function(){
                if($(this).text() == feed_params.filter_id.replace(/&gt;/,'>').replace(/&lt;/,'<')){
                    feed_params.filter_id = $(this).attr('id').replace(/link_0_/,'');
                    return false;
                }
            });
        }
        focusit('0_' + feed_params.filter_id,scroll);
    }else if(feed_params.filter_type == 'subscription'){
        focusit('1_' + feed_params.filter_id,scroll);
    }else if(feed_params.filter_type == 'starred'){
        focusit('starred',scroll);
    }else if(feed_params == undefined || feed_params.filter_type == undefined){
        focusit('all_articles',scroll);
    }
}

function check_star_icon(id){
    var selector = '#article_' + id;
    if(view_style == 2 && id == get_aid()){
        selector += ', #article_full_contents_' + id;
    }else if($('#article_dialog')[0]){
        selector += ', #article_dialog';
    }

    // if(feed_params.filter_type === 'library') {
        selector += ', .article' + id + '-fav';
    // }

    $(selector).each(function(){
        var $sel = $(this);

        if($sel.data('fav') == undefined){
            return true;
        }

        if($sel.data('fav') == 1){
            $(selector).find('.star_img').each(function(){
                $(this).removeClass('icon-article_topbar_read_later_empty').addClass('icon-article_topbar_read_later_full').addClass('star_full').attr({title: _js("Remove star") + ' (' + _js('Hotkey') + ': F)'});
            });
        }else{
            $(selector).find('.star_img').each(function(){
                $(this).addClass('icon-article_topbar_read_later_empty').removeClass('icon-article_topbar_read_later_full').removeClass('star_full').attr({title: _js("Star article") + ' (' + _js('Hotkey') + ': F)'});
            });
        }
    });
}

function check_broadcast_icon(id){
    if(joined_teams.length == 0){
        return;
    }
    var selector = '#article_' + id;
    if(view_style == 2 && id == get_aid()){
        selector += ', #article_full_contents_' + id;
    }else if($('#article_dialog')[0]){
        selector += ', #article_dialog';
    }

    // if(feed_params.filter_type === 'library') {
        selector += ', .article' + id + '-fav';
    // }

    $(selector).each(function(){
        var $sel = $(this);

        if($sel.data('brd') == undefined){
            return true;
        }

        if($sel.data('brd') == 1){
            $(selector).find('.broadast_img').each(function(){
                $(this).removeClass('icon-artcile_topbar_team_broadcast').addClass('icon-artcile_topbar_team_broadcast_full').addClass('broadcast_full');
            });
        }else{
            $(selector).find('.broadast_img').each(function(){
                $(this).addClass('icon-artcile_topbar_team_broadcast').removeClass('icon-artcile_topbar_team_broadcast_full').removeClass('broadcast_full');
            });
        }
    });
}

function check_tags_icon(id){
    var selector = '#article_' + id;
    if(view_style == 2 && id == get_aid()){
        selector += ', #article_full_contents_' + id;
    }else if($('#article_dialog')[0]){
        selector += ', #article_dialog';
    }

    // if(feed_params.filter_type === 'library') {
        selector += ', .article' + id + '-fav';
    // }

    $(selector).each(function(){
        var $sel = $(this);

        if($sel.data('mtags') == undefined){
            return true;
        }

        if($sel.data('mtags') && Object.size($sel.data('mtags')) > 0){
            $(selector).find('.tags_img').each(function(){
                $(this).removeClass('icon-all-tags').addClass('icon-all-tags-full').addClass('tags_full');
            });
        }else{
            $(selector).find('.tags_img').each(function(){
                $(this).addClass('icon-all-tags').removeClass('icon-all-tags-full').removeClass('tags_full');
            });
        }
    });

}

function toggle_starred_counter(){
    if(starred_counter){
        starred_counter = 0;
    }else{
        starred_counter = 1;
    }
    xajax_save_user_pref('starred_counter',starred_counter);
    apply_subscriptions_cnt(subscriptions_cnt,false,null,false,true);
    rebuild_toolbar();
    if(starred_counter){
        rechecksum();
    }
}

function set_fav(id, new_state){
    if(user_is_guest){
        return guest_alert();
    }

    var set = 0;

    if($('#article_' + id).data('fav') == 0){
        $('#article_' + id).data('fav',1).addClass('article_fav');
        totals_cnt[1]++;
        // totals_cnt[4]++; // library
        blink_starred();
        if(mixpanel_enabled && mixpanel){
            mixpanel.track('starred', {'Article ID': id});
        }
        add_score_queue(id,'star');
        set = 1;
    }else if($('#article_' + id).data('fav') == '1') {
        $('#article_' + id).data('fav','').removeClass('article_fav');
        if(totals_cnt[1] < max_unread){
            totals_cnt[1]--;
            // totals_cnt[4]--; // library
        }
    }

    if(new_state !== undefined) {
      var items = $('.article' + id + '-fav');
      if(items.length && new_state == 1) {
        $(items).data('fav', 1).addClass('article_fav');
        totals_cnt[1]++;
        blink_starred();
        if(mixpanel_enabled && mixpanel){
          mixpanel.track('starred', {'Article ID': id});
        }
        add_score_queue(id,'star');
        set = 1;
      } else {
        $(items).data('fav', '').removeClass('article_fav');
        if(totals_cnt[1] < max_unread){
          totals_cnt[1]--;
        }
      }

      // $(items).find('.star_img')
      //   .removeClass('icon-button-star-full star_full icon-button-star-empty')
      //   .addClass(new_state == 1 ? 'icon-button-star-full star_full' : 'icon-button-star-empty')
    }

    apply_subscriptions_cnt(subscriptions_cnt,false,null,false,true);
    check_star_icon(id);
    check_bulk_articles();
    xajax_set_fav(id,set);
}

function set_like(id,post_id){
    if($('#article_' + id).data('liked') == 0){
        $('#article_' + id).data('liked',1);
        $('#article_' + id).data().likes++;
        add_score_queue(id,'like');
    }else{
        $('#article_' + id).data('liked',0);
        $('#article_' + id).data().likes--;
    }
    xajax_set_like(id,$('#article_' + id).data('liked'),post_id);
    build_article_social_bar(id);
}

function mark_read(article_id,no_ajax,force_read_only){
    var $article = $('#article_' + article_id);

    if(!$article[0]){
        $article = $('.article_' + article_id).eq(0);
    }

    if($article.data('sunk') == 1){
        return;
    }

    if(!$article[0]){
        return;
    }

    if($article.data('blanked') == 1){
        $article.html(blanked_cache[article_id]).data('blanked', 0);
        setTimeout(function () {
            $article.css('height', '').css('min-height', '');
        }, 250);
        delete blanked_cache[article_id];
    }

    cancel_checksum_request();
    var unread = 2;
    if($article.data('read') == 1 && force_read_only != true){
        // Mark as unread
        $article.data('read',0);
        keep_unread[article_id] = true;
        try{
            check_checkbox('#mark_unread_button_' + article_id);
        }catch(e){}
        try{
            $('#unread_img_' + article_id).removeClass('icon-article_topbar_mark_as_read_empty').addClass('icon-article_topbar_mark_as_read_full').attr('title',_js("Mark as read"));
            $('#article_unread_dot_' + article_id).attr('title',_js("Mark as read") + ' (' + _js('Hotkey') + ': M)');
        }catch(e){}
        try{
            $('#article_stripe_' + article_id).attr('title',_js("Unread article")+'. '+_js("Click to mark it as read")).removeClass('article_stripe_read');
        }catch(e){}

        $article.removeClass('article').addClass('article_unreaded').css('border-left-color', '');
        $('#article_header_text_' + article_id).removeClass('article_header_text_read');
        $('#article_favicon_' + article_id).removeClass('transparent_icon');
        if($article.data('brd') == 1){
            totals_cnt[2]++;
        }
        // if($article.data('fav') == 1){
        //  totals_cnt[1]++;
        // }
        set_subscriptions_cnt('1_' + $article.data('suid'),'increment',$article.data('tags'));
        if(linked_subscriptions && linked_subscriptions[$article.data('suid')]){
            set_subscriptions_cnt('1_' + linked_subscriptions[$article.data('suid')],'increment',null,true);            
        }
        unread = 1;

        if(feed_params.filter_type == 'monitored_keywords'){
            if($article.data('tags')){
                for(var i in $article.data('tags')){
                    var unread = parseInt($('#monitored_keyword_unread_' + i).html());
                    unread++;
                    $('#monitored_keyword_unread_' + i).html(unread);
                }
            }
        }
    }else if($article.data('read') == 0){
        // Expanded view keep unread
        if(check_scroll_tracking() && view_style == 1 && $article.data('init') == 1){
            keep_unread[article_id] = true;
            try{
                check_checkbox('#mark_unread_button_' + article_id);
            }catch(e){}
            try{
                $('#unread_img_' + article_id).removeClass('icon-article_topbar_mark_as_read_empty').addClass('icon-article_topbar_mark_as_read_full').attr('title',_js("Mark as read"));
                $('#article_unread_dot_' + article_id).attr('title',_js("Mark as read") + ' (' + _js('Hotkey') + ': M)');
            }catch(e){}
            try{
                $('#article_stripe_' + article_id).attr('title',_js("Unread article")+'. '+_js("Click to mark it as read")).removeClass('article_stripe_read');
            }catch(e){}
            $article.data('init',0);
            return;
        }


        // Mark as read
        $article.data('init',0);
        $article.data('read',1);
        try{
            uncheck_checkbox('#mark_unread_button_' + article_id);
        }catch(e){}
        try{
            $('#unread_img_' + article_id).removeClass('icon-article_topbar_mark_as_read_full').addClass('icon-article_topbar_mark_as_read_empty').attr('title',_js("Mark as unread"));
            $('#article_unread_dot_' + article_id).attr('title',_js("Mark as unread") + ' (' + _js('Hotkey') + ': M)');
        }catch(e){}
        $('#article_stripe_' + article_id).attr('title',_js("Read article")+'. '+_js("Click to mark it as unread")).addClass('article_stripe_read');
        $article.removeClass('article_unreaded').removeClass('article_unseen').addClass('article').css('border-left-color', '');
        $('#article_header_text_' + article_id).addClass('article_header_text_read');
        $('#article_favicon_' + article_id).addClass('transparent_icon');
        if($article.data('brd') == 1){
            totals_cnt[2]--;
        }
        // if($article.data('fav') == 1){
        //  totals_cnt[1]--;
        // }

        set_subscriptions_cnt('1_' + $article.data('suid'),'decrement',$article.data('tags'));            
        if(linked_subscriptions && linked_subscriptions[$article.data('suid')]){
            set_subscriptions_cnt('1_' + linked_subscriptions[$article.data('suid')],'decrement',null,true);            
        }

        if(feed_params.filter_type == 'monitored_keywords'){
            if($article.data('tags')){
                for(var i in $article.data('tags')){
                    var unread = parseInt($('#monitored_keyword_unread_' + i).html());
                    unread--;
                    if(unread < 0){
                        unread = 0;
                    }
                    $('#monitored_keyword_unread_' + i).html(unread);
                }
            }
        }
    }
    if(no_ajax !== true){
        read_article(article_id,0,feed_params,false,unread);
    }
}

String.prototype.replaceArray = function(find, replace) {
    var replaceString = this;
    for (var i = 0; i < find.length; i++) {
        replaceString = replaceString.replace(find[i], replace[i]);
    }
    return replaceString;
};

function show_sharer(id){
    if($('#share_div_' + id).is(':visible')){
        $('#share_div_' + id).hide();
        //$('#article_tags_' + id).show();
    }else{
        $('#share_div_' + id).show();
        //$('#article_tags_' + id).hide();
        if($('#share_div_' + id).hasClass('share_init')){
            $('#share_div_' + id).removeClass('share_init');
            xajax_print_share_buttons(id);
        }
    }
}

function open_share_window(url,w,h,post,query,article_id,nopopup){
    if(post != 1){
        if(nopopup == 1){
            document.location = url;
        }else{
            var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
            var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;

            width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
            height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

            var left = ((width / 2) - (w / 2)) + dualScreenLeft;
            var top = ((height / 2) - (h / 2)) + dualScreenTop;
            var newWin = window.open(url,url,'status=0, toolbar=0, scrollbars=1, resizeable=1, menubar=0, location=0, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);

            if(window.focus){
                newWin.focus();
            }
        }
    }else{
        if(nopopup != 1){
            var newWin = window.open('','out','status=0, toolbar=0, scrollbars=1, resizeable=1, menubar=0, location=0, height=' + h + 'px, width=' + w + 'px');
        }
        var form = document.createElement("form");
        form.setAttribute("method", "post");

        if(nopopup != 1){
            form.setAttribute("target", "out");
        }
        form.setAttribute("action", url);
        form.style.display = 'none';

        var form_fields = new Array();
        for(var i in query){
            var value = '';
            if(query[i] == '[TITLE]'){
                value = $('#article_title_link_' + article_id).html();
                value = $('<div />').html(value).text();
            }else if(query[i] == '[CONTENT]'){
                value = $('#article_contents_inner_' + article_id).html();
            }else if(query[i] == '[URL]'){
                value = $('#article_title_link_' + article_id).attr('href');
            }
            form_fields[i] = document.createElement("input");
            form_fields[i].setAttribute("name", i);
            form_fields[i].setAttribute("type", 'hidden');
            form_fields[i].setAttribute("value", value);
            form.appendChild(form_fields[i]);
        }
        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);
    }
    if((!newWin || newWin.closed || typeof newWin.closed == 'undefined')){
        return false;
    }
    return true;
}

function open_blog(){
    window.open('https://www.inoreader.com/blog?utm_source=inoreader&utm_medium=inoreader&utm_campaign=open_blog_from_gear');
}

function open_howto(){
    window.open('https://www.inoreader.com/blog/2015/06/inoreader-how-to.html?utm_source=inoreader&utm_medium=inoreader&utm_campaign=open_howto_from_gear');
}

function open_api(){
    window.open('/developers/');
}

function open_advertising(){
    window.open('https://www.inoreader.com/advertising/');
}

function reset_account(operation){
    if(operation == 'subscriptions'){
        var html = _js("Clear all feeds and folders?");
    }else if(operation == 'preferences'){
        var html = _js("Reset preferences to defaults?");
    }else if(operation == 'view_styles'){
        var html = _js("Reset custom view styles to default?");
    }else if(operation == 'articles_orders'){
        var html = _js("Reset custom ordering to default?");
    }else if(operation == 'view_unread'){
        var html = _js("Reset custom unread filters to default?");
    }else if(operation == 'group_article_list'){
        var html = _js("Reset custom grouping to default?");
    }else if(operation == 'delete'){
        dialog('delete_account_dialog');
        return;
        var html = '<div style=font-size:17px;font-weight:bold;>' + _js("Are you sure you want to cancel your account?")+'</div><div class="alert_state state_block delete_account_alert"><span class="icon16 icon-exclamation-mark"></span>'+_js("All your data will be immediately deleted from the service and you will not be able to restore this account!")+'</div>'+_js("Will you spend a minute to tell us why you are not happy")+'?<br><br><textarea id=cancel_reason placeholder=\''+_js("Describe shortly why you are cancelling you account...")+'\' style=\'height:80px;width:100%\'></textarea></div>';
    }else{
        return;
    }
    xconfirm(html,'reset_account_exec("' + operation + '")');

    if(operation == 'delete'){
        $('#xconfirm_wrapper').css('width',400);
        resize();
    }
}

function reset_account_exec(operation){
    var reason = '';
    if(operation == 'subscriptions'){
        inno_dialog_close('preferences_dialog');
        eraseCookie('feed_params');
        eraseCookie('tree_expands');
    }

    if(operation == 'delete'){
        reason = $('#cancel_reason').val();
    }
    do_loading();
    xajax_reset_account(operation,reason);
    l('Reset options',operation)
}

function set_search_filter_section(val){
    if(!val || val == ''){
        toggle_search_options(1);
    }else if(val == 'public'){
        toggle_search_options(4);
    }else if(val == 'starred'){
        // ignore
    }else{
        toggle_search_options(3);
    }

    tmp_search_section = val;
    do_search();
}

function do_search_enter(){
    var search_options_mapping = [];
    search_options_mapping[0] = 0;
    search_options_mapping[1] = 1;
    search_options_mapping[2] = 4;
    search_options_mapping[3] = 2;
    search_options_mapping[4] = 5;
    search_options_mapping[5] = 6;
    search_options_mapping[6] = 7;
    search_options_mapping[7] = 1;
    search_options_mapping[8] = 8;
    search_options_mapping[9] = 9;
    search_options = search_options_mapping[search_action];
    feed_params_cache.filter_type = null;
    feed_params_cache.filter_id = null;

    if(search_action == 7){
        if(feed_params.filter_type == 'folder' || feed_params.filter_type == 'feed' || feed_params.filter_type == 'subscription' || feed_params.filter_type == 'starred' || feed_params.filter_type == 'web_pages' || feed_params.filter_type == 'annotated'){
            feed_params_cache.filter_type = feed_params.filter_type;
            feed_params_cache.filter_id = feed_params.filter_id;
            search_options = 3;
            set_feed_param('search_options',search_options);
        }else{
            search_action = 1;
        }
    }

    var $wrapper = $('.inno_autocomplete_wrapper').eq(0);

    if($wrapper[0]){
        if(!$wrapper.find('.inno_autocomplete_item_selected')[0]){
            var menu_types_mapping = [];
            menu_types_mapping[0] = 'feed_url';
            menu_types_mapping[1] = 'subscriptions';
            menu_types_mapping[2] = 'global';
            menu_types_mapping[3] = 'users';
            menu_types_mapping[4] = 'bundles';
            menu_types_mapping[7] = 'current';
            if(is_url($('#feed_searcher').val())){
                var default_type = 'feed_url';
            }else{
                var default_type = menu_types_mapping[search_action];
            }
            $wrapper.find('.inno_autocomplete_item').each(function(){
                var $this = $(this);
                if($this.data('type') && $this.data('type') == default_type){
                    if(global_autocomplete_ajax){
                        global_autocomplete_ajax.abort();
                    }

                    $this.addClass('inno_autocomplete_item_selected');
                    setTimeout(function(){ $this.removeClass('inno_autocomplete_item_selected'); }, 100);
                    setTimeout(function(){ $this.addClass('inno_autocomplete_item_selected'); }, 200);
                    autocomplete_force_no_close = true;
                    setTimeout(function(){
                        autocomplete_force_no_close = false;
                        inno_autocomplete_destroy();
                        do_search();
                    },300);

                    if(is_url($('#feed_searcher').val())){
                        l('Search start', 'From sidebar', 'URL (return)');
                    }else{
                        l('Search start', 'From sidebar', 'Keyword (return)');
                    }

                    return false;
                }
            });
        }
    }else{
        if(is_url($('#feed_searcher').val())){
            l('Search start', 'From sidebar', 'URL (return)');
        }else{
            l('Search start', 'From sidebar', 'Keyword (return)');
        }
        do_search();
    }

    if(device_type == 'phone'){
        slide_tree();
        $('#reader_pane').focus().click();
    }
}

function do_search(){
    var term = $('#feed_searcher').val();
    if(term.length <= 1){
        $('#feed_searcher').focus();
        if(!$('#feed_searcher').is(':animated')){
            $('#feed_searcher').effect('highlight',{color: '#F78181'});
        }
        return;
    }

    if(is_url(term)){
        add_subscription(term);
        return false;
    }

    open_searcher({tab: 'subscriptions', term: term});
    return;






    if(feed_params.filter_pinned){
        delete_feed_param('filter_pinned');
    }

    $('.selected').removeClass('selected').addClass('normal');
    if(search_options == 1){
        //$('#feed_searcher').autocomplete('close');
    }

    //close_search_overlay();
    if(search_options == 0){
        add_subscription();
        hide_discovery_overlay(true);
        return;
    }

    if(user_is_guest && search_options != 2 && search_options != 5){
        return guest_alert();
    }

    if(search_options == 1 || search_options == 4){
        if(feed_params.filter_type == 'folder' || feed_params.filter_type == 'subscription' || feed_params.filter_type == 'starred' || feed_params.filter_type == 'web_pages' || feed_params.filter_type == 'annotated'){
            feed_params_cache.filter_type = feed_params.filter_type;
            feed_params_cache.filter_id = feed_params.filter_id;
        }
        set_feed_param('filter_type','old_search');
    }

    if(search_options == 1){
        focusit('all_articles');
    }else if(search_options == 3 && tmp_search_section == null){
        if(feed_params.filter_type == 'folder'){
            focusit('0_' + feed_params.filter_id);
            tmp_search_section = 'folder_' + feed_params.filter_id;
        }else if(feed_params.filter_type == 'subscription'){
            focusit('1_' + feed_params.filter_id);
            tmp_search_section = 'subscription_' + feed_params.filter_id;
        }else if(feed_params.filter_type == 'starred'){
            focusit('starred');
            tmp_search_section = 'starred';
        }else if(feed_params.filter_type == 'web_pages'){
            focusit('web_pages');
            tmp_search_section = 'web_pages';
        }else if(feed_params.filter_type == 'annotated'){
            focusit('annotated');
            tmp_search_section = 'annotated';
        }else if(feed_params.filter_type == 'tags'){
            focusit('tags');
            tmp_search_section = 'tags';
        }else if(feed_params.filter_type == 'active_searches'){
            focusit('active_searches');
            tmp_search_section = 'active_searches';
        }else if(feed_params.filter_type == 'channel'){
            focusit('channel');
            tmp_search_section = 'channel';
        }else if(feed_params.filter_type == 'my_channel'){
            focusit('my_channel');
            tmp_search_section = 'my_channel';
        }else if(feed_params.filter_type == 'teams'){
            focusit('team_dashboard');
            tmp_search_section = 'teams';
        }else if(feed_params.filter_type == 'feed'){
            tmp_search_section = 'feed_' + feed_params.filter_id;
        }
    }else{
        remove_focus();
    }
    set_feed_param('search_term',term);
    set_feed_param('search_options',search_options);
    if(search_options == 1 || search_options == 3 || search_options == 4){
        if(tmp_search_section !== null){
            if(tmp_search_section == ""){
                toggle_search_options(1);
                focusit("all_items",true);
                set_feed_param('filter_type','old_search');
                delete_feed_param('filter_id');
            }else if(tmp_search_section == "public"){
                toggle_search_options(4);
                focusit("all_items",true);
                set_feed_param('filter_type','old_search');
                delete_feed_param('filter_id');
            }else if(tmp_search_section == "starred"){
                focusit("starred");
                delete_feed_param('opened_article');
                set_feed_param('filter_type','starred');
                set_feed_param('tmp_search',1);
            }else if(tmp_search_section == "web_pages"){
                focusit("web_pages");
                delete_feed_param('opened_article');
                set_feed_param('filter_type','web_pages');
                set_feed_param('tmp_search',1);
            }else if(tmp_search_section == "tags"){
                focusit("tags");
                delete_feed_param('opened_article');
                set_feed_param('filter_type','tags');
                set_feed_param('tmp_search',1);
            }else if(tmp_search_section == "active_searches"){
                focusit("active_searches");
                delete_feed_param('opened_article');
                set_feed_param('filter_type','active_searches');
                set_feed_param('tmp_search',1);
            }else if(tmp_search_section == "channel"){
                focusit("channel");
                delete_feed_param('opened_article');
                set_feed_param('filter_type','channel');
                set_feed_param('tmp_search',1);
            }else if(tmp_search_section == "my_channel"){
                focusit("my_channel");
                delete_feed_param('opened_article');
                set_feed_param('filter_type','my_channel');
                set_feed_param('tmp_search',1);
            }else if(tmp_search_section == "teams"){
                focusit("team_dashboard");
                delete_feed_param('opened_article');
                set_feed_param('filter_type','teams');
                set_feed_param('tmp_search',1);
            }else{
                toggle_search_options(3);
                var tmp_section = tmp_search_section.split(/\_/);
                if(tmp_section[0] == 'folder'){
                    focusit('0_' + tmp_section[1],true);
                }else if(tmp_section[0] == 'subscription'){
                    focusit('1_' + tmp_section[1],true);
                }
                set_feed_param('filter_type',tmp_section[0]);
                set_feed_param('filter_id',tmp_section[1]);
                set_feed_param('tmp_search',1);
            }
            //tmp_search_section = null;
        }

        set_feed_param('search_filters',search_filters);
        set_feed_param('search_match',search_match);
        set_feed_param('search_feed_popularity',search_feed_popularity);
        set_feed_param('search_order',search_order);
        set_feed_param('search_range',search_range);
        set_feed_param('search_language',search_language);

        if(search_range_from > 0){
            set_feed_param('search_range_from',search_range_from);
        }
        if(search_range_to > 0){
            set_feed_param('search_range_to',search_range_to);
        }

        clear_article_divs();
        print_articles();
        set_feed_param('search_term',term);
        set_loc();
        do_loading(_js("Searching")+'...');
        setTimeout(function(){
            document.title = _js("Searching")+'...';
        },11);
    }else if(search_options == 2){
        if($('#preferences_dialog')[0]){
            inno_dialog_close('preferences_dialog');
        }
        do_people_search(term);
        set_feed_param('search_term',term);
        set_loc();
    }else if(search_options == 5){
        do_bundle_search(term);
        set_feed_param('search_term',term);
        set_loc();
    }else if(search_options == 6){
        do_twitter_search(term);
        set_feed_param('search_term',term);
        set_loc();
    }else if(search_options == 7){
        do_google_plus_search(term);
        set_feed_param('search_term',term);
        set_loc();
    }else if(search_options == 8){
        do_google_news_search(term);
        set_feed_param('search_term',term);
        set_loc();
    }else if(search_options == 9){
        do_facebook_pages_search(term);
        set_feed_param('search_term',term);
        set_loc();
    }
}

function stackTrace(){
    var err = new Error();
    return err.stack;
}

function do_people_search(term){
    clear_article_divs();
    if(view_style == 0){
        num = prefetch_list_view;
    }else if(view_style == 1){
        num = prefetch_expanded_view;
    }else if(view_style == 2){
        num = prefetch_column_view;
    }else if(view_style == 3){
        num = prefetch_tiles_view;
    }else if(view_style == 4){
        num = prefetch_magazine_view;
    }
    set_feed_param('filter_type','old_search');
    set_feed_param('filter_id',term);
    xajax_do_search(term,2,num);
}

function do_bundle_search(term){
    clear_article_divs();
    set_feed_param('filter_type','old_search');
    set_feed_param('filter_id',term);
    set_feed_param('search_term',term);
    xajax_do_search(term,5);
}

function do_twitter_search(term){
    clear_article_divs();
    set_feed_param('filter_type','old_search');
    set_feed_param('filter_id',term);
    xajax_do_search(term,6);
}

function do_google_plus_search(term){
    clear_article_divs();
    set_feed_param('filter_type','old_search');
    set_feed_param('filter_id',term);
    xajax_do_search(term,7);
}

function do_google_news_search(term){
    clear_article_divs();
    set_feed_param('filter_type','old_search');
    set_feed_param('filter_id',term);
    xajax_do_search(term,8);
}

function do_facebook_pages_search(term){
    do_loading(_js("Searching")+'...');
    clear_article_divs();
    set_feed_param('filter_type','old_search');
    set_feed_param('filter_id',term);
    xajax_do_search(term,9);
}

function create_active_search(){
    var html = '';
    html += '<label for="active_search_feed_title" style="font-weight:bold;font-size:16px;">' + _js('Set a name for the keyword monitoring feed') + '</label>';
    html += '<p><input id="active_search_feed_title" type="text"></p>';
    dialog('create_active_search_dialog', {content: html});
    $('#active_search_feed_title').val($('#searcher_input').val()).click().focus();
}

function create_active_search_execute(){
    var max_article_num = 100;
    var post = {};
    post.title = $('#active_search_feed_title').val();

    if(!post.title){
        xalert(_js('Please enter a name'),0, "$('#active_search_feed_title').click().focus()");
        return;
    }

    post.search_filters = $('#search_content_filters_search_filters').val();
    post.search_match = $('#search_content_filters_search_match').val();
    post.search_language = $('#search_content_filters_language').val();
    post.title = $('#active_search_feed_title').val();
    post.used_query_builder = $('#searcher_input').data('used_query_builder');
    post.term = feed_params.search_term;
    post.filter_type = '';
    post.filter_id = 0;

    if(search_options == 4){
        post.filter_type = 'public';
        post.search_feed_popularity = $('#search_content_filters_search_feed_popularity').val();
    }else{
        var search_filter_type_full = $('#search_content_filters_filter_type').val();
        if(search_filter_type_full.indexOf('folder_') === 0 || search_filter_type_full.indexOf('subscription_') === 0){
            search_filter_exploded = search_filter_type_full.split(/\_/);
            post.filter_type = search_filter_exploded[0];
            post.filter_id = search_filter_exploded[1];
        }
    }

    post.article_ids = [];
    current_article_num_active_search = 1;
    $('#reader_pane').find('.ar').each(function(){
        var $this = $(this);
        if(current_article_num_active_search > max_article_num){
            return false;
        }
        current_article_num_active_search++;
        if(!$this.hasClass('hidden')){
            post.article_ids.push($this.data('aid'));
        }
    });

    $('#create_active_search_button').prop('disabled',true);
    inno_dialog_close('create_active_search_dialog');
    do_loading();
    xajax_create_active_search(post);
}

function set_search_match(val){
    for (var i = 3; i >= 0; i--) {
        menu_checkbox_uncheck('#search_matches_check_' + i);
    }
    menu_checkbox_check('#search_matches_check_' + val);
    search_match = val;
    createCookie('search_match',search_match,31);
    do_search();
}

function set_search_feed_popularity(val){
    for (var i = 1; i >= 0; i--) {
        menu_checkbox_uncheck('#search_feed_popularity_' + i);
    }
    menu_checkbox_check('#search_feed_popularity_' + val);
    search_feed_popularity = val;
    createCookie('search_feed_popularity',search_feed_popularity,31);
    do_search();
}

function set_search_filter(val){
    var filter = 0;
    var full_filter = 0;
    var filter_bits = [1,2];
    var old_filter = search_filters;

    menu_checkbox_toggle('#search_filters_check_' + val);

    for(var i in filter_bits){
        full_filter += parseInt(filter_bits[i]);
        if(!menu_checkbox_is_checked('#search_filters_check_' + filter_bits[i])){
            filter += parseInt(filter_bits[i]);
        }
    }

    if(filter == full_filter){
        filter = old_filter;
    }

    search_filters = filter;
    createCookie('search_filters',search_filters,31);
    do_search();
}

function set_search_order(val){
    menu_checkbox_toggle('#search_order_check_' + val);

    search_order = val;

    createCookie('search_order',search_order,31);
    do_search();
}

function set_search_range_from_to(){
    search_range_from = parseInt($('#search_range_from_value').val() / 1000);
    search_range_to = parseInt($('#search_range_to_value').val() / 1000);

    inno_dialog_close('search_range_dialog');

    if(search_range_from > search_range_to){
        search_range_from = search_range_to;
    }
    if(search_range_to < search_range_from){
        search_range_to = search_range_from;
    }

    createCookie('search_range_from',search_range_from,31);
    createCookie('search_range_to',search_range_to,31);
    set_feed_param('search_range_from',search_range_from);
    set_feed_param('search_range_to',search_range_to);

    set_search_filters(search_options,true);

}

function gotoarticle(subscription_id,id){
    clear_article_divs();
    set_feed_param('search_term',$('#feed_searcher').val());
    set_feed_param('filter_type','subscription');
    set_feed_param('filter_id',subscription_id);
    set_feed_param('search_article',id);
    set_feed_param('opened_article',id);
    print_articles();
    delete_feed_param('search_article');
    //delete_feed_param('opened_article');
    //delete_feed_param('filter_type');
    //delete_feed_param('filter_id');
}

function gotoarticle_search(term,id){
    clear_article_divs();

    set_feed_param('filter_type','old_search');
    set_feed_param('filter_id',term);
    do_loading();
    set_feed_param('opened_article',id);

    print_articles();
    delete_feed_param('search_article');
    //delete_feed_param('opened_article');
    //delete_feed_param('filter_type');
    //delete_feed_param('filter_id');
}


function set_subscriptions_cnt(hash,dir,tags,dont_alter_total){
    if(hash == '0_0'){
        return;
    }
    if(max_unread == 0){
        return;
    }

    var processed_keys = [];
    var subscriptions_cnt_new = clone_object(subscriptions_cnt);
    if(subscriptions_cnt_new[hash] != undefined){
        if(subscriptions_cnt_new[hash].organization_id){
            dont_alter_total = true;
        }
        if(dir == 'increment'){
            subscriptions_cnt_new[hash].cnt++;
            if(!dont_alter_total){
                totals_cnt[0]++;
            }
        }else{
            if(subscriptions_cnt_new[hash].cnt < max_unread){
                subscriptions_cnt_new[hash].cnt--;
            }
            if(!dont_alter_total && totals_cnt[0] < max_unread){
                totals_cnt[0]--;
            }
        }
        processed_keys = [];
        if(subscriptions_cnt_new[hash].parents != undefined){
            if(dir == 'increment'){
                for(var i in subscriptions_cnt_new[hash].parents){
                    subscriptions_cnt_new[subscriptions_cnt_new[hash].parents[i]].cnt++;
                    processed_keys[subscriptions_cnt_new[hash].parents[i]] = true;
                }
            }else{
                for(var i in subscriptions_cnt_new[hash].parents){
                    if(subscriptions_cnt_new[subscriptions_cnt_new[hash].parents[i]].cnt < max_unread){
                        subscriptions_cnt_new[subscriptions_cnt_new[hash].parents[i]].cnt--;
                        processed_keys[subscriptions_cnt_new[hash].parents[i]] = true;
                    }
                }
            }
        }
    }
    if(tags != null){
        if(dir == 'increment'){
            for(var i in tags){
                if(processed_keys['0_' + i] !== true){
                    if(subscriptions_cnt_new['0_' + i] == undefined){
                        subscriptions_cnt_new['0_' + i] = {};
                        subscriptions_cnt_new['0_' + i].cnt = 0;
                    }
                    subscriptions_cnt_new['0_' + i].cnt++;
                }

                if(separate_tags == 1){
                    if(subscriptions_cnt_new['0_' + i] != undefined){
                        if(subscriptions_cnt_new['0_' + i].parents != undefined){
                            for(var c in subscriptions_cnt_new['0_' + i].parents){
                                subscriptions_cnt_new[subscriptions_cnt_new['0_' + i].parents[c]].cnt++;
                            }
                        }
                    }
                }
            }
        }else{
            for(var i in tags){
                if(subscriptions_cnt_new['0_' + i] == undefined){
                    subscriptions_cnt_new['0_' + i] = {};
                    subscriptions_cnt_new['0_' + i].cnt = 1;
                }
                if(processed_keys['0_' + i] !== true && subscriptions_cnt_new['0_' + i].cnt < max_unread){
                    subscriptions_cnt_new['0_' + i].cnt--;
                }

                if(separate_tags == 1){
                    if(subscriptions_cnt_new['0_' + i] != undefined){
                        if(subscriptions_cnt_new['0_' + i].parents != undefined){
                            for(var c in subscriptions_cnt_new['0_' + i].parents){
                                if(isie8){
                                    if(!subscriptions_cnt_new[subscriptions_cnt_new['0_' + i].parents[c]].cnt){
                                        subscriptions_cnt_new[subscriptions_cnt_new['0_' + i].parents[c]].cnt = 0;
                                    }
                                }
                                if(subscriptions_cnt_new[subscriptions_cnt_new['0_' + i].parents[c]].cnt < max_unread){
                                    subscriptions_cnt_new[subscriptions_cnt_new['0_' + i].parents[c]].cnt--;
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    apply_subscriptions_cnt(subscriptions_cnt_new,false,null,false,true);
}


function remove_unread_counts(){
    if(subscriptions_cnt.length > 0){
        for(var key in subscriptions_cnt){
            subscriptions_cnt[key] = {};
            subscriptions_cnt[key].cnt = 0;
            subscriptions_cnt[key].unseen = 0;
        }
    }

    apply_subscriptions_cnt(subscriptions_cnt,true,[0,0,0,0],true,true);
}

function apply_subscriptions_cnt(arr,force,totals,force2,no_blink){
    var $tree_pane = $('#tree_pane');
    var has_been_peeked = ($tree_pane.hasClass('has_been_peeked')) ? true : false;

    for(var key in arr){
        if(subscriptions_cnt[key] == undefined){
            subscriptions_cnt[key] = {};
            subscriptions_cnt[key].cnt = 0;
            subscriptions_cnt[key].unseen = 0;
        }

        if(subscriptions_cnt[key].cnt != arr[key].cnt || subscriptions_cnt[key].unseen != arr[key].unseen || force || force2){
            if(!$('#parent_' + key)[0]){
                continue;
            }
            var count = arr[key].cnt;
            var unseen = arr[key].unseen;
            if(count < 0){
                count = 0;
            }

            if(count == 0 || max_unread == 0){
                $tree_pane.find('.unread_cnt[id=unread_cnt_' + key + ']').each(function(){
                    if($(this).html() != ''){
                        $(this).html('').find('.unread_cnt_wrapper').css('visibility', 'hidden');
                    }
                });
                $tree_pane.find('.tree_link[id=link_' + key + ']').each(function(){
                    if(!$(this).hasClass('tree')){
                        $(this).removeClass('tree_unread').addClass('tree');
                    }
                });
                if(max_unread > 0 && hide_read_feeds == 2){
                    $tree_pane.find('.feed_favicon[id=nodeimg_' + key + ']').each(function(){
                        if(!$(this).hasClass('feed_favicon_transparent')){
                            $(this).addClass('feed_favicon_transparent');
                        }
                    });
                }

                if(max_unread > 0 && hide_read_feeds == 1 && (key.substr(0,1) != 0 || (key.substr(0,1) == 0 && hide_read_feeds_hides_tags == 1))){
                    var _continue = true;
                    if(key == 'tags' && hide_read_feeds_hides_tags == 0){
                        _continue = false;
                    }

                    if(key == 'keyword_monitoring' && hide_read_feeds_hides_tags == 0){
                        _continue = false;
                    }

                    if(key == 'tags' && hide_read_feeds_hides_tags == 1 && separate_tags == 1){
                        _continue = false;
                    }

                    if(key == 'library'){
                        _continue = false;
                    }

                    if($('#parent_' + key).parent().is('#child_tags') && hide_read_feeds_hides_tags == 1 && separate_tags == 1){
                        _continue = false;
                    }

                    if(_continue){
                        var forhide = true;
                        if($('#parent_' + key).not('.parent_div_hidden') && key != 'channel' && key != 'teams'){
                            $tree_pane.find('.tree_link[id=link_' + key + ']').each(function(){
                                if($(this).hasClass('selected')){
                                    element_for_hide = key;
                                    forhide = false;
                                }
                            });
                            if(forhide){
                                $tree_pane.find('.parent_div[id=parent_' + key + ']').each(function(){
                                    if(has_been_peeked){
                                        $(this).addClass('parent_div_should_be_hidden');
                                    }else{
                                        $(this).addClass('parent_div_hidden');
                                        $(this).find('.parent_div').not('.parent_div_hidden').each(function(){
                                            $(this).addClass('parent_div_hidden');
                                        });
                                    }
                                });
                            }
                        }
                    }
                }
            }else{
                if(count >= max_unread){
                    count = max_unread + '+';
                }

                $tree_pane.find('.unread_cnt[id=unread_cnt_' + key + ']').each(function(){
                    $(this).html('' + count + '');
                });

                $tree_pane.find('.tree_link[id=link_' + key + ']').each(function(){
                    if(!$(this).hasClass('tree_unread')){
                        $(this).removeClass('tree').addClass('tree_unread');
                    }
                });

                if(hide_read_feeds == 2){
                    $tree_pane.find('.feed_favicon[id=nodeimg_' + key + ']').each(function(){
                        if($(this).hasClass('feed_favicon_transparent')){
                            $(this).removeClass('feed_favicon_transparent');
                        }
                    });
                }else if(hide_read_feeds == 1){
                    $tree_pane.find('.parent_div.parent_div_hidden[id=parent_' + key + ']').each(function(){
                        $(this).removeClass('parent_div_hidden');
                    });
                }
                if(element_for_hide == key){
                    element_for_hide = null;
                }
            }

            fix_tree_node_width(key,count);

            if(unseen == 0 || max_unread == 0){
                $tree_pane.find('.parent_div_inner[id=pdinner_' + key + ']').each(function(){
                    $(this).removeClass('tree_unseen');
                });
            }else{
                $tree_pane.find('.parent_div_inner[id=pdinner_' + key + ']').each(function(){
                    if(!$(this).hasClass('tree_unseen')){
                        $(this).addClass('tree_unseen');
                    }
                });
            }

            if(no_blink !== true && arr[key].cnt > subscriptions_cnt[key].cnt){
                if(!force){
                    $tree_pane.find('.parent_div_inner[id=pdinner_' + key + ']').each(function(){
                        blink_tree_element(this);
                    });
                }
            }
        }
    }

    if(totals){
        totals_cnt = totals;
    }
    var items = ['all_items', 'starred', 'my_channel', 'web_pages'];

    for(var i=0; i<items.length; i++){
        var new_key = items[i];
        if(starred_counter == 0 && new_key == 'starred'){
            totals_cnt[i] = 0;
        }
        if(totals_cnt[i] < 0){
            totals_cnt[i] = 0;
        }
        if(totals_cnt[i] == 0){
            $('#unread_cnt_' + new_key).html('');
            if(!$('#link_' + new_key).hasClass('tree')){
                $('#link_' + new_key).removeClass('tree_unread').addClass('tree');
            }
        }else{
            var totals_cnt_display = (totals_cnt[i] >= max_unread) ? max_unread + '+' : totals_cnt[i];
            $('#unread_cnt_' + new_key).html('' + totals_cnt_display + '');
            if(!$('#link_' + new_key).hasClass('tree_unread')){
                $('#link_' + new_key).removeClass('tree').addClass('tree_unread');
            }
        }
        if(new_key == 'all_items'){
            if(title_counter != 0){
                set_title(totals_cnt[i]);
            }
            $('#total_unread_cnt').html(parseInt(totals_cnt[i])).attr('data-last-update',Math.round(new Date().getTime()/1000));
            total_unread_cnt = parseInt(totals_cnt[i]);
        }
    }

    subscriptions_cnt = clone_object(arr);
    setTimeout(function(){update_unread_button_count();},1);
    update_ff_addon_counters();
}

function update_ff_addon_counters(){
    if(is_firefox){
        setTimeout(function(){
            var event = document.createEvent('CustomEvent');
            event.initCustomEvent("mozilla-addon-message", true, true, { total_unread_cnt: total_unread_cnt ,total_unseen_cnt: total_unseen_cnt });
            document.documentElement.dispatchEvent(event);
        },1);
    }
}

var node_width_cache = [];
function fix_tree_node_width(key,count){
    return;
    var count_txt = count + ''; // make it a string
    var len = count_txt.length;
    var offset = 0;
    //if(node_width_cache[key] != undefined && node_width_cache[key] == len){
    //return;
    //}
    node_width_cache[key] = len;

    if(display_density == 1){
        offset = 2;
    }else if(display_density == 2){
        offset = 5;
    }else if(display_density == 3){
        offset = 5;
    }

    var width = $("#tree_pane").width() - 65 + offset;
    if(tree_hide_folder_icons){
        width += 16;
    }

    if(count > 0 || len > 1){
        width -= 16; // brackets
        width -= 6*len;
    }

    $('#tree_pane').find('.tree_link[id=link_' + key + ']').each(function(){
        if($(this).hasClass('tree_sub_node')){
            width -= 22;
            width += offset;
        }
        $(this).css('max-width',width + 'px');
    });
//          $('#link_' + key).css('max-width',width + 'px');
}

function activate_sound_slider(){
    $('#sound_volume_slider').slider({value: sound_volume, animate: true, range: 'min', max: 100, change: set_sound });
}

function activate_line_height_slider(){
    $('#line_height_slider').slider({value: line_height, animate: true, range: 'min', min: 10, max: 20, change: set_line_height });
}

function activate_keep_unread_days_slider(value,disabled, selector){
    var slider_object = {
      value: value,
      animate: true,
      range: 'min', min: 1,
      max: 30,
      change: save_keep_unread_days,
      slide: set_keep_unread_days
    }
    if(disabled == 'disabled'){
        slider_object.disabled = true;
    }

    if(!selector) {
      selector = '#keep_unread_days_slider';
    }

    $(selector).slider(slider_object);


    if(disabled == 'disabled'){
        $(selector).on('click',function(){
            if(!$('#keep_unread_disclaimer_row').is(':visible')){
                $('#keep_unread_disclaimer_row').css('display','table-row');
            }
        });

        $(selector).on('dragstart',function(e){
            if(!$('#keep_unread_disclaimer_row').is(':visible')){
                $('#keep_unread_disclaimer_row').css('display','table-row');
            }
            return false;
        });

        $(selector).append('<div class="keep_unread_days_padlock" data-tippy-content="' + _js('This feature is only available to Pro users.') + '<br><a class=\'underlink ajaxed\' href=/upgrade/feature/keep_unread_days>' + _js('Upgrade now') + '.</a>" data-tippy-interactive="true"><span class="icon-toggle-locked"></span></div>');

        var $slider = $(selector).find('a.ui-slider-handle').eq(0);

        tippy('.keep_unread_days_padlock');
    }

}

function activate_custom_plan_slider(feat,value,min,max,step){
    var slider_object = {value: value, animate: true, range: 'min', min: min, max: max, step: step, slide: set_custom_plan_feature, range: 'min', change: calculate_custom_plan_price}
    $('#custom_plan_slider_' + feat).slider(slider_object);
    setTimeout(function(){
        bind_slider_scroll('#custom_plan_slider_' + feat);
    },10);
}

function set_custom_plan_feature(event, ui){
    var feat = $(this).data('feat');
    var min = $(this).data('min');
    var min_hard = custom_plan_features[feat].min;

    if(ui.value < parseInt(min)){
        return false
    }

    setTimeout("calculate_custom_plan_price()",1);
}

function bind_slider_scroll(el){
    $(el).bind('mousewheel DOMMouseScroll', function (e) {
        var delta = 0, element = $(this), value, result, oe;
        var step = $(el).data('step');
        var min = $(el).data('min');
        oe = e.originalEvent; // for jQuery >=1.7
        value = element.slider('value');

        if (oe.wheelDelta) {
            delta = -oe.wheelDelta;
        }
        if (oe.detail) {
            delta = oe.detail * 40;
        }

        if(delta > 0){
            value += step;
        }else{
            value -= step;
        }

        if(value < parseInt(min)){
            return false
        }

        element.slider('option', 'animate', false);
        element.slider('value', value);
        element.slider('option', 'animate', true);

        return false;
    });
}

function calculate_custom_plan_price(){
    var overmin = false;
    var total_price = custom_plan_base_price;
    for(var i in custom_plan_features){
        var current = parseInt($('#custom_plan_slider_' + i).slider("option", "value"));
        var min = parseInt($('#custom_plan_slider_' + i).data('min'));
        var min_hard = custom_plan_features[i].min;

        if(!current || current < min_hard){
            current = min;
        }

        if(current > min){
            overmin = true;
        }

        if(current == parseInt(min_hard)){
            $('#custom_plan_value_' + i).addClass('graylink');
        }else{
            $('#custom_plan_value_' + i).removeClass('graylink');
        }

        if(current == parseInt(min)){
            $('#custom_plan_value_' + i).addClass('graylink');
            $('#custom_plan_slider_' + i).find('.ui-slider-range').addClass('ui-state-disabled');
        }else{
            $('#custom_plan_value_' + i).removeClass('graylink');
            $('#custom_plan_slider_' + i).find('.ui-slider-range').removeClass('ui-state-disabled');
        }

        $('#custom_plan_value_' + i).html(current);

        var plu = custom_plan_features[i].plu;
        var qty = current - min_hard;
        var price = qty * plu;
        total_price += price;
    }

    total_price = Math.floor(total_price)+0.99;

    if(overmin === true){
        enable_dialog_button('custom_plan_dialog');
    }else{
        disable_dialog_button('custom_plan_dialog');
    }
}

function reset_custom_plan(){
    for(var i in custom_plan_features){
        $('#custom_plan_slider_' + i).slider('value',custom_plan_current_defaults.features[i]);
    }
}

function save_custom_plan(){
    var post = {};
    post.features = {};
    post.message = $('#custom_plan_text').val();
    for(var i in custom_plan_features){
        if($('#custom_plan_slider_' + i)[0]){
            post.features[i] = parseInt($('#custom_plan_slider_' + i).slider("option", "value"));
        }
    }
    do_loading();
    disable_dialog_button('custom_plan_dialog');
    xajax_save_custom_plan(post);
}

function set_keep_unread_days(event, ui){
    $(this).slider('value', ui.value);
    $($(this).data('valueSelector') || '#keep_unread_days_value').html(__js('%s day', '%s days', ui.value));
}

function save_keep_unread_days(){
    var folder_id = $(this).data('folderId');
    if(folder_id) {
      do_loading();
      var value = $(this).slider('value');
      xajax_save_keep_unread_days(folder_id, value);
    }
}

function set_sound(){
    var volume = $('#sound_volume_slider').slider('value');
    $('#preference_sound_volume').val(volume);
    $('#sound_volume_value').html(volume + '%');
    sound_volume = volume;
    play_sound('notification_beep');
    xajax_save_user_pref('sound_volume', volume);
}

function set_line_height(){
    var height = $('#line_height_slider').slider('value');
    $('#preference_line_height').val(height);
    $('#line_height_value').html(height * 10 + '%');
    line_height = height;
}

function activate_tile_width_slider(val){
    $('#tile_width_slider').slider({value: val, animate: true, range: 'min', min: 10, max: 98, slide: set_tile_size });
}

function activate_tile_height_slider(val){
    $('#tile_height_slider').slider({value: val, animate: true, range: 'min', min: 0, max: 500, slide: set_tile_size });
}

var view_options_tmp = {};

function set_tile_size(){
    view_options_tmp.tile_width = $('#tile_width_slider').slider('value');
    view_options_tmp.tile_height = $('#tile_height_slider').slider('value');
    init_view_options();
}

function init_view_options(){
    var css_obj = {};
    var base_width = 23;
    var base_height = 350;
    var base_picture_height = 230;
    var base_content_height = 312;
    var base_feed_name_width = 130;

    if(view_options_tmp.tile_width != 0){
        css_obj['min-width'] = 0;
        css_obj['max-width'] = 2000;
        css_obj.width = view_options_tmp.tile_width;
        css_obj.width += '%';

    }
    if(view_options_tmp.tile_height != 0){
        css_obj.height = base_height += view_options_tmp.tile_height;
        css_obj.height += 'px';

        var picture_height = base_picture_height + view_options_tmp.tile_height;
        $('.article_tile_picture').css({height: picture_height + 'px'});

        var content_height = base_content_height + view_options_tmp.tile_height;
        $('.article_tile_content_wraper').css({height: content_height + 'px'});
    }



    $('.article_tile').css(css_obj);

}

function reply_comment(content_id,type,comment_id,div_id){
    if(user_is_guest){
        return guest_alert();
    }

    if($('#user_comments_commenter_' + div_id)[0]){
        cancel_comment_reply(div_id);
        return;
    }

    var html = ' \
            <div id="user_comments_commenter_' + div_id + '" class="user_comments_commenter user_comments_commenter_reply"> \
                <div class="user_comments_avatar"> \
                    <img src="' + profile_picture + '"> \
                </div> \
                <div class="user_comments_textarea"> \
                     <textarea tabindex=-1 id="user_comment_input_' + div_id + '" class="comment_textarea boxsizing_border" onfocus="check_comments_disclaimer(this);bind_comment_autocomplete(this,' + content_id + ',' + type + ')" onblur="unbind_comment_autocomplete(this)" onkeyup="comment_keyup(false,this,event);" placeholder="' + _js('Mention users by typing @ and their name.') + '"></textarea> \
                </div> \
                <div class="user_comments_commenter_buttons"> \
                    <div style="float:' + float_right + ';"> \
                        <a style="font-size:13px;" href="javascript:void(0)" onclick="cancel_comment_reply(\'' + div_id + '\')">'+_js("Cancel")+'</a>&nbsp;&nbsp;&nbsp; \
                        <button tabindex=-1 class="bluebutton" onclick="reply_comment_do(\'' + div_id + '\', \'' + content_id + '\', ' + comment_id + ', \'' + type + '\')" onfocus="unbind_hotkeys()" onblur="bind_hotkeys()" class="smallradius article_footer_buttons">'+_js("Save comment")+'</button> \
                    </div> \
                    <div class="clearfix"> \
                    </div> \
                </div> \
            </div>';

    $('#reply_div_' + div_id).html(html);
    $('#user_comment_input_' + div_id).focus();
    autosize($('#user_comment_input_' + div_id));
}

function reply_comment_do(div_id, content_id, comment_id, type){
    $('#user_comment_input_' + div_id).attr('disabled',true).addClass('comm_working');
    var private_commenting_tmp = ($('#article_' + content_id).data('tm') != null) ? 2 : private_commenting;
    var broadcast_teams = ($('#article_' + content_id).data('tm') != null) ? JSON.parse($('#article_' + content_id).attr('data-tm')) : null;

    xajax_user_comment($('#user_comment_input_' + div_id).val(),content_id, comment_id, type, div_id, private_commenting_tmp, broadcast_teams);
}

function flag_comment(article_id,id,el,username){
    if(user_is_guest){
        return guest_alert();
    }
    $(el).html(_js("Flagged"));
    el.onclick = function(){};
    create_bottom_notification(_js("Comment is flagged as inappropriate.")+' <a class="bluelink underlink" href="javascript:void(0);" onclick="xajax_block_comment_user(' + id + ')">'+_js("Block")+' ' + username + '</a>','info',true,10000);
    xajax_flag_comment(article_id,id);
}


function user_comment(id){
    bind_hotkeys();
    var private_commenting_tmp = ($('#article_' + id).data('tm') != null) ? 2 : private_commenting;
    var broadcast_teams = ($('#article_' + id).data('tm') != null) ? JSON.parse($('#article_' + id).attr('data-tm')) : null;
    $('#user_comment_input_' + id).attr('disabled',true).addClass('comm_working');
    do_loading(_js("Saving comment")+"...");
    xajax_user_comment($('#user_comment_input_' + id).val(),id,0,1,id,private_commenting_tmp,broadcast_teams);
}


function edit_comment_prepare(id){
    do_loading();
    xajax_edit_comment_prepare(id);
}

function set_subscription_filter(filter){
    hide_read_feeds = filter;
    do_loading();
    xajax_set_subscription_filter(filter);
    check_new_update_subscriptions_radio_buttons();
    if(tree_has_hidden_sections){
        $('#tree_pane').addClass('has_hidden_sections');
    }else{
        if(filter == 1){
            $('#tree_pane').addClass('has_hidden_sections');
        }else{
            $('#tree_pane').removeClass('has_hidden_sections');
        }
    }
}

function set_hide_tags(){
    if(hide_read_feeds_hides_tags){
        hide_read_feeds_hides_tags = 0;
    }else{
        hide_read_feeds_hides_tags = 1;
    }
    init_hide_tags();
    xajax_save_user_pref('hide_read_feeds_hides_tags',hide_read_feeds_hides_tags,'build_tree();');
}

function init_hide_tags(){
    if(hide_read_feeds_hides_tags){
        menu_checkbox_check('#subscriptions_check_hide_empty_tags');
    }else{
        menu_checkbox_uncheck('#subscriptions_check_hide_empty_tags');
    }
}

function set_favicons(){
    if(favicons){
        favicons = 0;
    }else{
        favicons = 1;
    }
    init_favicons();
    xajax_save_user_pref('favicons',favicons,'build_tree();');
}

function init_favicons(){
    if(favicons){
        menu_checkbox_check('#subscriptions_favicons');
    }else{
        menu_checkbox_uncheck('#subscriptions_favicons');
    }
}

function set_lock_dragdrop(){
    if(lock_dragdrop){
        lock_dragdrop = 0;
    }else{
        lock_dragdrop = 1;
    }
    init_lock_dragdrop();
    xajax_save_user_pref('lock_dragdrop',lock_dragdrop,'build_tree();');
}

function init_lock_dragdrop(){
    if(lock_dragdrop){
        menu_checkbox_check('#subscriptions_lock_dragdrop');
    }else{
        menu_checkbox_uncheck('#subscriptions_lock_dragdrop');
    }
}

function init_tree_scrollbar(){
    // var scrollbar_theme = (theme == 2) ? 'dark' : 'light';
    // tree_pane_instance = $('#tree_pane').overlayScrollbars({
    //     overflowBehavior: {x: 'hidden'},
    //     scrollbars: {autoHide: 'leave'},
    //     className: 'os-theme-' + scrollbar_theme
    // });

    // return;

    if(device_type == 'phone'){
        $('#tree_pane').addClass('scrollbar');
        return;
    }

    if(tree_scrollbar){
        $('#tree_pane').addClass('scrollbar');
        //$('#tree_pane').off('mouseover',tree_show_scroll);
        //$('#tree_pane').off('mouseout',tree_hide_scroll);
        $('#tree_pane').off('mouseenter.scroll',tree_show_scroll);
        $('#tree_pane').off('mouseleave.scroll',tree_hide_scroll);
    }else{
        $('#tree_pane').removeClass('scrollbar');
        //$('#tree_pane').on('mouseover',tree_show_scroll);
        //$('#tree_pane').on('mouseout',tree_hide_scroll);
        $('#tree_pane').on('mouseenter.scroll',tree_show_scroll);
        $('#tree_pane').on('mouseleave.scroll',tree_hide_scroll);
    }
}

function tree_show_scroll(){
  $(this).css('overflow','auto');
}

function tree_hide_scroll(){
  $(this).css('overflow','hidden');
}

function toggle_footer(){
    if(show_footer){
        show_footer = 0;
    }else{
        show_footer = 1;
    }
    reinit_footer();
    xajax_save_user_pref('show_footer',show_footer);
}

function reinit_footer(){
    init_footer();
    resize();
    rebuild_toolbar();
    // Topics count progress bar
    $('#wraper').trigger({type: "toggled_pane_footer", show_footer: show_footer});
}

function set_group_article_list(val){
    // TODO
    group_article_list = val;
    init_group_article_list();
    set_feed_param('change_group_article_list',val);
    print_articles();
    delete_feed_param('change_group_article_list',val);
}

function init_group_article_list(){
    set_feed_param('group_article_list',group_article_list);
    set_feed_param('global_group_article_list',global_group_article_list);
}

function hide_footer(){
    show_footer = 1;
    toggle_footer();
    create_bottom_notification(_js("You can turn on the footer again from the Preferences menu"),'info',true);
}

function set_footer(set){
    show_footer = !set;
    toggle_footer();
}

function init_footer(){
    if(show_footer || device_type == 'phone'){
        $('#footer').removeClass('hidden');
    }else{
        $('#footer').addClass('hidden');
    }
}

function show_tags_section(){
    $('#parent_tags').show();
    $('#sidebar_hr_tags').show();
}

function hide_tags_section(){
    $('#parent_tags').hide();
    $('#sidebar_hr_tags').hide();
}

function show_active_searches_section(){
    $('#parent_active_searches_plus').html('<span onclick="expand_tree(\'active_searches\',0,1)" id="plus_active_searches" class="plus_img icon-expand-arrow-' + float_right + '-circle"></span>');
}

function hide_active_searches_section(){
    $('#parent_active_searches_plus').html('<span onclick="" class="plus_img icon-monitored-keyword-public"></span>');
}

function show_team_tags_section(){
    $('#parent_team_tags_plus').html('<span onclick="expand_tree(\'team_tags\',0,1)" id="plus_team_tags" class="plus_img icon-expand-arrow-' + float_right + '-circle"></span>');
}

function hide_team_tags_section(){
    $('#parent_team_tags_plus').html('<span onclick="" class="plus_img icon-tree_team_tags"></span>');
}

function show_teams_section(){
    $('#parent_teams').show();
    // $('#parent_teams_plus').html('<span onclick="expand_tree(\'teams\',0,1)" id="plus_teams" class="plus_img icon-expand-arrow-' + float_right + '-circle"></span>');
}

function hide_teams_section(){
    $('#parent_teams').hide();
    // $('#parent_teams_plus').html('<span onclick="" class="plus_img icon-tree_teams"></span>');
}

function set_separate_tags(force_separate_off){
    if(separate_tags || force_separate_off){
        separate_tags = 0;
    }else{
        separate_tags = 1;
    }
    init_separate_tags();
    do_loading();
    xajax_save_user_pref('separate_tags',separate_tags,'build_tree("",0,0,true,"stop_loading();");');
}

function init_separate_tags(){
    if(separate_tags){
        menu_checkbox_check('#subscriptions_tree_separate_tags');
    }else{
        menu_checkbox_uncheck('#subscriptions_tree_separate_tags');
        $('#parent_tags').hide();
        $('#sidebar_hr_tags').hide();
        $('#parent_active_searches').hide();
        $('#child_tags').html('');
        $('#child_active_searches').html('');
    }
}


function set_tree_ordering(order){
    tree_ordering = order;
    do_loading();
    xajax_set_tree_ordering(order);
    check_tree_ordering_radio_buttons();
}

function init_font_settings(){
    var $body = $('body');
    $body.removeClass('font_size_-1').removeClass('font_size_0').removeClass('font_size_2').removeClass('font_size_4').removeClass('font_size_6').addClass('font_size_' + font_size);
    if(font_size_titles){
        $body.addClass('font_size_titles');
    }else{
        $body.removeClass('font_size_titles');
    }

    for(var i in font_sizes){
        if(font_size == font_sizes[i].id){
            $body.addClass('font_size_' + font_sizes[i].id);
        }else{
            $body.removeClass('font_size_' + font_sizes[i].id);
        }
    }

    for(var i in fonts){
        if(font_id == i){
            $body.addClass('font_family_' + fonts[i].class_name);
        }else{
            $body.removeClass('font_family_' + fonts[i].class_name);
        }
    }

    for(var i in line_heights){
        if(line_height == line_heights[i]){
            $body.addClass('line_height_' + line_heights[i]);
        }else{
            $body.removeClass('line_height_' + line_heights[i]);
        }
    }

    for(i=0;i<=2;i++){
        if(article_alignment == i){
            $body.addClass('article_alignment_' + i);
        }else{
            $body.removeClass('article_alignment_' + i);
        }
    }

    $body.addClass('theme_' + get_theme_name());

    if(opened_dialogs.article_text_preferences){
        var aid = opened_dialogs.article_text_preferences.params.id;
        $('#article_footer_text_preferences_' + aid).html('');
        toggle_text_preferences(aid,true);
    };
}

function set_font_size(dir){
    var toast = true;
    if(dir == 'up'){
        if(font_size == -2){
            font_size = -1;
        }else if(font_size == -1){
            font_size = 0;
        }else if(font_size == 0){
            font_size = 2;
        }else if(font_size == 2){
            font_size = 4;
        }else if(font_size == 4){
            font_size = 6;
        }else{
            font_size = 6;
            toast = false;
        }
    }else if(dir == 'down'){
        if(font_size == 6){
            font_size = 4;
        }else if(font_size == 4){
            font_size = 2;
        }else if(font_size == 2){
            font_size = 0;
        }else{
            font_size = -1;
            toast = false;
        }
    }else if(dir == 'reset'){
        font_size = 0;
    }else{
        toast = false;
        font_size = dir;
    }
    if(font_size < -2){
        font_size = -2;
    }
    if(font_size > 10){
        font_size = 10;
    }
    xajax_save_user_pref('font_size',font_size);
    if(toast){
        if(dir == 'up'){
            var toast_txt = _js("Font size increased.");
        }else if(dir == 0){
            var toast_txt = _js("Font size reset.");
        }else{
            var toast_txt = _js("Font size decreased.");
        }
        create_bottom_notification(toast_txt,'info',true,1000);
    }

    init_font_settings();
    build_article_annotations();
}

function init_articles_order(){
    set_feed_param('articles_order',articles_order);
    set_feed_param('global_articles_order',global_articles_order);
}

function init_view_after_del(type,id,feed_id,feed_type){
    if(feed_params.filter_type == type && feed_params.filter_id == id){
        if(type == 'folder'){
            view_dashboard();
        }else{
            if(feed_type == 'rss'){
                view_feed(feed_id);
            }else{
                view_dashboard();
            }
        }
    }

    if(type == 'folder'){
        $('#parent_0_' + id).remove();
    }else if(type == 'subscription'){
        $('div[id=parent_1_' + id + ']').remove();
    }
}

function check_view_refresh(type,id){
    if(type == 'active_search'){
        type = 'folder';
    }
    if(feed_params.filter_type == type && feed_params.filter_id == id){
        view_tree_element(type, id);
    }
}

function init_view_style(){
    document.body.classList.remove('view_style_' + document.body.dataset['lastView']);
    document.body.classList.add('view_style_' + view_style);
    document.body.dataset['lastView'] = view_style;

    set_feed_param('view_style',view_style);
    $('#no_article_selected').hide();
    if(articles_initial_load == true){
        if(view_style == 2){
            $("#three_way_contents").show();
            if(ads_enabled && $('#three_way_contents_ad')[0]){
                $('#three_way_contents_ad').show();
            }
        }else if(view_style == 3 || view_style == 3){
            $("#three_way_contents").hide();
            if(ads_enabled && $('#three_way_contents_ad')[0]){
                $('#three_way_contents_ad').hide();
            }
        }else{
            $("#three_way_contents").hide();
            if(ads_enabled && $('#three_way_contents_ad')[0]){
                $('#three_way_contents_ad').hide();
            }
        }
    }
    if(view_style == 2){
        $('#no_article_selected').show();
    }
}

function set_view_style(style){
    if(feed_params.filter_type == 'stats' || feed_params.filter_type == 'discovery' || feed_params.filter_type == 'catalog'){
        return false;
    }

    clear_article_divs();
    if(style == undefined){
        if(view_style == 1){
            var style = 2;
        }else if(view_style == 2){
            var style = 3;
        }else if(view_style == 3){
            var style = 4;
        }else if(view_style == 4){
            var style = 0;
        }else if(view_style == 0){
            var style = 1;
        }
    }
    do_loading();
    view_style = style;
    init_view_style();
    set_feed_param("view_style_change",true);
    print_articles();
    delete_feed_param("view_style_change");
    resize();
}

function set_articles_order_from_tree(order,filter_type,filter_id){
    if(order == 2 && !user_access[access_pro]){
        xalert(_js("This feature is only available to Pro users.")+'<p><a class="bluelink ajaxed" href="/upgrade/feature/sort_by_magic">'+_js("Upgrade now")+'</a>',1);
        return;
    }

    if(feed_params.filter_type == filter_type && feed_params.filter_id == filter_id){
        set_articles_order(order);
        last_toolbar_params.articles_order = order;
        rebuild_toolbar();
    }else{
        xajax_save_articles_order(order,filter_type,filter_id);
    }
    var hash = (filter_type == 'subscription') ? '1_' + filter_id : '0_' + filter_id;
    if(params_hash[hash]){
        params_hash[hash].articles_order = order;
    }
}

function set_stream_params(_articles_order, _group_article_list, _view_style, _view_unread){
    if(_articles_order != -1){
        articles_order = _articles_order;
        set_feed_param('articles_order',articles_order);
    }

    if(_group_article_list != -1){
        group_article_list = _group_article_list;
        set_feed_param('group_article_list',group_article_list);
    }

    if(_view_style != -1){
        view_style = _view_style;
        set_feed_param('view_style',view_style);
    }

    if(_view_unread != -1){
        view_unread = _view_unread;
        set_feed_param('view_unread',view_unread);
    }

    init_articles_order();
    init_group_article_list();
    init_view_style();
}

function set_articles_order(order,global,dont_refresh){
    if(order == 2 && !user_access[access_pro]){
        xalert(_js("This feature is only available to Professional users.")+'<p><a class="bluelink ajaxed" href="/upgrade/feature/sort_by_magic">'+_js("Upgrade now")+'</a>',1);
        return;
    }

    if(feed_params.filter_type == 'stats' || feed_params.filter_type == 'discovery' || feed_params.filter_type == 'catalog' || feed_params.filter_type == 'trending' || feed_params.filter_type == 'recent' || feed_params.filter_type == 'annotated' || feed_params.filter_type == 'commented' || feed_params.filter_type == 'liked' || feed_params.filter_type == 'old_search' || feed_params.filter_type == 'welcome' || feed_params.filter_type == 'dashboard' || feed_params.filter_type == 'upgrade' || feed_params.filter_type == 'upgrade_teams'){
        xalert(_js("This function is not available for the current selection!"),1);
        return false;
    }
    if(order == undefined){
        if(articles_order == 1){
            order = 0;
        }else{
            order = 1;
        }
    }
    articles_order = order;

    init_articles_order();

    set_feed_param('change_articles_order',articles_order);

    if(dont_refresh != true){
        do_loading();
        print_articles();
        delete_feed_param('change_articles_order');
    }

    //var dir = (order) ? 'ASC' : 'DESC';
}

var is_mobilizing = false;
function mobilize(id,no_helpers){
    if(is_mobilizing == true){
        return;
    }
    var mobilized = 0;
    // if($('#article_contents_inner_' + id).hasClass('translated')){
    //     back_to_origin_lang(id);
    // }
    if($('#article_contents_inner_' + id).hasClass('embeded_article')){
        embed_article(id);
    }

    if($('#article_contents_inner_' + id).hasClass('mobilized')){
        mobilized = 1;
        $('#mobilize_button_' + id).addClass('icon-article_topbar_mobilize_empty').removeClass('icon-article_topbar_mobilize_full');
        $('#article_contents_inner_' + id).removeClass('mobilized');
        if(user_access[access_pro]){
            $('#article_' + id).data('mobilized',0);
        }

        $('#article_full_contents_' + id).removeClass('show-translator')
        $('#article_full_contents_' + id).find('.translation-container').html('');
    }else{
        $('#mobilize_button_' + id).removeClass('icon-article_topbar_mobilize_empty').addClass('icon-article_topbar_mobilize_full');
        $('#article_contents_inner_' + id).addClass('mobilized');
        if(user_access[access_pro]){
            $('#article_' + id).data('mobilized',1);
        }
    }
    is_mobilizing = true;

    if(!$('#article_dialog_wrapper').find('.article_helper_left')[0]){
        no_helpers = true;
    }

    do_loading();

    xajax_mobilize(id,mobilized,no_helpers);
}

function mobilize_callback(id,content,no_helpers){
    is_mobilizing = false;
    if(view_style == 2){
        var container = '#three_way_contents';
        var container_p = '#three_way_contents';
    }else if(view_style == 3 || view_style == 4){
        var container = '#article_dialog';
        var container_p = '#article_dialog';
    }else{
        var container = '#article_' + id;
        var container_p = '#reader_pane';
    }

    $('#translate_tippy').remove();
    $('#mobilize_tippy').remove();

    var found_paragraphs = [];
    $('#article_contents_inner_' + id).find('p').each(function(){
        found_paragraphs.push({
            excerpt: $.trim($(this).text()).substr(0, 20),
            position: $(this).position().top - $(container_p).scrollTop()
        });
    });

    // We need 6 tabs to be consistent with the backend because otherwise annotations get messed up.
    $('#article_contents_inner_' + id).html("\n\t\t\t\t\t\t" + content);
    sanitize_article(id,true,no_helpers);
    build_article_annotations(id);

    if(user_access[access_pro]){
        var tmpdiv = document.createElement('div');
        tmpdiv.id = 'tmpdiv_for_full_content';
        tmpdiv.innerHTML = article_contents[id];

        // We need 6 tabs to be consistent with the backend because otherwise annotations get messed up.
        $(tmpdiv).find('#article_contents_inner_' + id).html("\n\t\t\t\t\t\t" + content).toggleClass('mobilized');
        article_contents[id] = $(tmpdiv).html();
        tmpdiv = null;
    }

    var found_matching_paragraph = false;
    if(found_paragraphs.length > 0){
        $('#article_contents_inner_' + id).find('p').each(function(){
            for(var i in found_paragraphs){
                if(found_paragraphs[i].excerpt == $.trim($(this).text()).substr(0, 20)){
                    $(container_p).scrollTo($(this).position().top - found_paragraphs[i].position, 0, {axis : 'y'});
                    found_matching_paragraph = true;
                }
            }
            if(found_matching_paragraph){
                return false;
            }
        });
    }

    if(!found_matching_paragraph){
        var top = $(container).position().top - 20;
        if((scroll_top > 0 || top < 0) && force_no_scroll == 0){
            if(view_style == 2){
                $(container).scrollTo('0px');
            }else if(view_style == 3 || view_style == 4){
                $(container).scrollTo('0px');
            }else{
                scroll_to_article(id,false,true);
            }
        }
    }

    check_bottom();
    // activate_inner_ads(id);
}

function show_article_share_menu(id, el, e) {
  var article_menu_data = getArticleShareMenu(id, true);
  $('#list_menu_article_shares').remove();
  $('#list_menu').remove();

  var menu_id = 'list_menu_article_shares';
  var share_menu_html = inno_toolbar_button(false, false, '', article_menu_data.context_menu, null, null, menu_id);
  document.body.appendChild(share_menu_html);
  $('#' + menu_id)
    .css({ maxWidth: '250px', maxHeight: '320px'})
    .show();
  var menu = new Popper(el, $('#' + menu_id), { placement: 'bottom-end' });
  menu.scheduleUpdate();
  e.preventDefault();
  e.stopPropagation();

  $(document).one('mouseup', function() {
    if(!document.getElementById('list_menu_article_shares'))
      return false;
    setTimeout(function() {
      $('#list_menu_article_shares').remove();
    }, 10);
  });
}

function build_share_buttons(id){
    var menu_button_ctx = create_dom_element('div', {
      className: 'share_wrapper',
      innerHTML: '<span class="icon16 icon-article_topbar_more_menu"></span>',
      id: 'article_context_menu_' + id,
      onclick: function(e){
        var article_menu_data = getArticleShareMenu(id);

        var menu_id = 'list_menu_article';
        if($('#list_menu_article')[0]){
          $('#list_menu_article').remove();
        }
        var share_menu_html = inno_toolbar_button(false, false, '', article_menu_data.context_menu, null, null, menu_id);
        document.body.appendChild(share_menu_html);
        $('#' + menu_id)
          .css({ maxWidth: '250px', maxHeight: '320px'})
          .show();
        var menu = new Popper($('#article_context_menu_' + id).get(0), $('#' + menu_id), { placement: 'bottom-end' });
        menu.scheduleUpdate();
        e.preventDefault();
        e.stopPropagation();

        var closeMenuFn = function(e) {
          var is_same = e.target.id === 'list_menu_article'
          if(!document.getElementById('list_menu_article') || is_same) {
            if(is_same) {
              $(document).one('mouseup', closeMenuFn);
            }
            return false;
          }
          setTimeout(function() {
            $('#list_menu_article').remove();
          }, 10);
        };

        $(document).one('mouseup', closeMenuFn);
      }
    });

    var article_menu_data = getArticleShareMenu(id);

    $('#sd_' + id).html(article_menu_data.menu_html);
    $('#sd_' + id).append(menu_button_ctx);
}

function getArticleShareMenu(id, full) {
  var share_cnt = 0;
  var article_url = '';
  var share_main_html = '';
  var share_menu_html = '';
  var article_menu = [];
  var $article = $('#article_' + id);
  var data = $article.data();

  for(var i in share_buttons){
    var icon_class = '';
    if(!share_buttons[i].icon){
      share_buttons[i].icon = 'share';
    }
    var icon = icon_path + '/service_icons_16x16/' + share_buttons[i].icon;
    var raster_icon = false;
    if(share_buttons[i].custom == 1){
      raster_icon = true;
      if(share_buttons[i].icon == 'share' || !share_buttons[i].icon){
        raster_icon = false;
        share_buttons[i].icon = 'share';
      }else{
        icon = share_buttons[i].icon;
      }
    }
    var extra_class = '';
    if(share_cnt < 3 && !full){
      extra_class = ' share_img_main';
    }

    var onclick = 'share_article(' + id + ',' + i + ');l(\'Article header buttons\', \'Share to ' + share_buttons[i].name + '\');';


    if(share_buttons[i].social_network_id > 0) {
      var slug = share_buttons[i].icon.substring(0, share_buttons[i].icon.indexOf('-'));
      icon_class += ' article-share-' + slug + '-' + id;
      if(connected_services.indexOf(parseInt(share_buttons[i].social_network_id)) === -1 ) {
        // console.log(share_buttons[i].name, share_buttons[i].social_network_id, connected_services[share_buttons[i].social_network_id]);
        onclick = 'article_social_connect(' + share_buttons[i].social_network_id + ');';
      } else {
        // console.log('connected', share_buttons[i].name);
      }
      //check for share
      if(
        (data.pocket == 1 && share_buttons[i].social_network_id == pocket_network_id) ||
        (data.evernote == 1 && share_buttons[i].social_network_id == evernote_network_id) ||
        (data.instapaper == 1 && share_buttons[i].social_network_id == instapaper_network_id) ||
        (data.onenote == 1 && share_buttons[i].social_network_id == onenote_network_id) ||
        (data.dropbox == 1 && share_buttons[i].social_network_id == dropbox_network_id) ||
        (data.gdrive == 1 && share_buttons[i].social_network_id == google_network_id)
      ) {
        icon_class = ' article_footer_buttons_active';
      }
    }

    if(raster_icon){
      var tmp_html = '<img class="share_img' + extra_class + '" src="' + icon + '" title="' + share_buttons[i].name + '">';
    }else{
      if(share_buttons[i].icon == 'share'){
        icon_class += ' icon-share';
      }else{
        icon_class += ' icon-service_' + share_buttons[i].icon.replace(/\.png/,'');
      }
      var tmp_html = '<span class="icon16 share_img' + extra_class + icon_class + '" title="' + share_buttons[i].name + '"></span>';
    }

    if(share_cnt < 3 && !full){
      share_main_html += '<a class="share_wrapper" onclick="' + onclick + '" />' + tmp_html + '</a>';
    }else{
      article_menu.push({ type: 'link', text: '<span class="item_service_name">' + share_buttons[i].name + '</span>', click: onclick, icon: 'icon16 ' + icon_class });
    }
    share_cnt++;
  }

  function getDeviceCb (device_id, token, text) {
    return function () {
      push_article_to_device(device_id, token, text);
    }
  }

  if(!user_is_guest){
    //send to device section
    if(user_auth_tokens.length) {
      article_menu.push({ type: 'heading', text: _js('Send to device')})
      for(var i in user_auth_tokens) {
        article_menu.push({
          type: 'link',
          text: user_auth_tokens[i].display,
          click: getDeviceCb(id, user_auth_tokens[i].push_notifications_token, user_auth_tokens[i].display_clean),
          icon: 'icon16 icon-service_send_to_device '
        });
      }
    }

        article_menu.push({type: 'line'});
        article_menu.push({ type: 'link', text: _js("Organize sharing options"), click: "show_dialog('share_buttons_reorder_dialog')", icon: 'icon16 icon-share_menu_organize' });
    }

  return { menu_html: share_main_html, context_menu: article_menu }
}

function article_social_connect(network_id) {
  var network = false;
  for(var i in share_buttons){
    if(share_buttons[i].social_network_id == network_id) {
      network = share_buttons[i];
      break;
    }
  }
  if(network) {
    // console.log(network);
    var icon = '<span class="icon28 icon-service_' + network.icon.replace(/\.png/,'') + '" title="' + network.name + '"></span>'

    var content = '<div style="text-align: center;" class="p-5">';
    content += '<div class="flex justify-content-center">';
    content += '<div class="popup_integrate_service_icon"><span class="icon40 icon-circle_icon_logo"></span></div>';
    content += '<span class="icon40 icon-integrate-service-popup-arrow mx-3"></span>';
    content += '<div class="popup_integrate_service_icon service_'+network_id+'">'+icon+'</div>';
    content += '</div>';
    var heading = _js('Connect your %s account').replace('%s', network.name);
    var subheading = _js('Save articles in your %s account with a single click.').replace('%s', network.name);
    content += `<h2 class="service-connect-heading">${heading}</h2>`;
    content += `<div class="service-connect-subheading graylink_darker">${subheading}</div>`;

    var click_action = 'connect_service('+network_id+');';
    if(network_id == instapaper_network_id) {
      content += '<div class="form_group w-100">';
      content += '<input type="text" id="instapaper_username" class="form-control w-100 mb-2" placeholder="Instapaper username" /> ';
      content += '<input type="password" id="instapaper_password" class="form-control w-100" placeholder="Instapaper password" /> ';
      content += '<div class="instapaper-hint flex justify-content-center py-3"><span class="icon14 icon-feed-info mr-1"></span> Inoreader won’t store your credentials</div>';
      content += '</div>';
      click_action = 'do_loading();xajax_connect_service(17,{username: $(\'#instapaper_username\').val(), password:$(\'#instapaper_password\').val()})';
    }

    var btn_title = _js('Connect your %s account').replace('%s', network.name);
    content += '<button class="bluebutton integration_edit_button d-block w-100" onclick="'+click_action+'">'+btn_title+'</button>'
    if(network_id == evernote_network_id) {
      content += '<button class="whitebutton integration_edit_button d-block w-100 mt-2" onclick="connect_service(10,{chinese:true})">Connect with 印象笔记 (Evernote China)</button>';
    }

    content += '</div>';

    dialog('article_social_connect', {network_id: network_id, content: content});
  }
}

function replace_tag(tag) {
    var tags_to_replace = {'&': '&amp;', '<': '&lt;', '>': '&gt;'};
    return tags_to_replace[tag] || tag;
}

function safe_tags_replace(str) {
    return str.replace(/[&<>]/g, replace_tag);
}

function build_article_tags(id,top_bar){
    // if(!article_display_tags){
    //     return;
    // }
    var tags = $('#article_' + id).data('mtags');

    var bar = document.getElementById('article_tags_' + id);

    if(!bar){
        return;
    }
    bar.innerHTML = '';

    if(tags){
        for(var i in tags){
            var tag_html = fix_tag_name(tags[i]);
            if(is_team_tag(tags[i])){
                tag_html = '<span class="icon16 bluelink icon-add-menu-team-tag-full"></span> ' + tag_html;
            }

            bar.appendChild(create_dom_element('span', {
                innerHTML: tag_html,
                className: 'article_tag',
                dataset: {id: i},
                onclick: function(){ view_tree_element('folder', this.dataset.id); }
            }));
        }
    }

    // bar.appendChild(create_dom_element('span', {
    //     innerHTML: _js('Add tags'),
    //     className: 'article_tag article_add_tags_button',
    //     onclick: function(){ build_article_add_tags(id); }
    // }));
}

function save_article_tags(id){

    var tags = {};
    var result_tags = [];

    try{
        result_tags = JSON.parse($('#article_tags_input_' + id).val());
    }catch(e){}

    var all_tags_object = get_folders_from_tree(true);
    for(var i in all_tags_object){
        for(var t in result_tags){
            if(result_tags[t] && result_tags[t].id == all_tags_object[i].id){
                result_tags[t].value = all_tags_object[i].name
            }
        }
    }
    result_tags = result_tags.reverse();

    if(result_tags){
        for(var i in result_tags){
            if(result_tags[i].id){
                tags[result_tags[i].id] = result_tags[i].value;
            }else{
                var random = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 8);
                tags[random] = result_tags[i].value;
            }
        }
    }

    $('#article_' + id).data('tags',tags);
    build_article_tags(id);
    xajax_save_tags(id,tags);
}

function build_article_add_tags(id){
    // if(!article_display_tags){
    //     return;
    // }
    var tags = $('#article_' + id).data('tags');
    var bar = document.getElementById('article_tags_' + id);
    bar.innerHTML = '';

    var tags_input_wrapper = create_dom_element('div', { className: 'article_tags_input_wrapper' });
    bar.appendChild(tags_input_wrapper);

    var tags_input = create_dom_element('input', {
        id: 'article_tags_input_' + id,
        className: 'article_tags_input'
    });

    tags_input_wrapper.appendChild(tags_input);

    var all_tags_object = get_folders_from_tree(true);
    var all_folders_object = get_folders_from_tree(false,true);

    article_tag_tree_wait_cycle = 0;
    var all_tags = [];
    for(var i in all_tags_object){
        all_tags.push({id: all_tags_object[i].id, value: all_tags_object[i].name});
    }

    var folder_tags = [];
    for(var i in all_folders_object){
        var add = true;
        for(var c in tags){
            if(all_folders_object[i].name == tags[c]){
                add = false;
            }
        }
        if(add){
            folder_tags.push(all_folders_object[i].name);
        }
    }

    var $input = $(tags_input)
        .tagify({
                whitelist: all_tags,
                blacklist: folder_tags,
                delimiters: null,
                dropdown: {
                    classname : "article_tags_input_dropdown",
                    enabled   : 0,
                    closeOnSelect: false,
                    highlightFirst: true,
                    maxItems: 1000
                }
            })
            .on('dropdown:show', function(e, k){
                tagify_has_dropdown = true;

            })
            .on('dropdown:hide', function(e, k){
                tagify_has_dropdown = false;
            })
            .on('keydown', function(e, k){
                if(k.key === "Escape"){
                    build_article_tags(id);
                }
                if(k.key === "Enter" && (!tagify_has_dropdown || !$('.tagify__dropdown__item--active')[0])){
                    if($.trim($('#article_tags_' + id).find('span.tagify__input').eq(0).html()) == ''){
                        save_article_tags(id);
                    }
                }
            });

    var tagify = $input.data('tagify');
    if(tags){
        var current_tags = [];
        var tree_tags = get_folders_from_tree(true);
        for(var i in tags){
            var readonly = true;
            for(var c in tree_tags){
                if(tree_tags[c].name == tags[i]){
                    readonly = false;
                    break;
                }
            }
            current_tags.push({id: i, value: tags[i], readonly: readonly});
        }

        tagify.addTags(current_tags);
    }

    var tags_input_wrapper2 = create_dom_element('div', {
        className: 'article_tags_input_wrapper'
    });

    bar.appendChild(tags_input_wrapper2);

    tags_input_wrapper2.appendChild(create_dom_element('span', {
        innerHTML: _js('Done'),
        className: 'article_tag article_add_tags_button',
        onclick: function(){ save_article_tags(id); }
    }));

    $('#article_tags_' + id).find('span.tagify__input').eq(0).focus().click();
}

function check_comment_buttons(el,div_id,focus){
    if(focus){
        $('#user_comments_commenter_buttons_' + div_id).show();
    }else{
        // if($.trim($(el).val()) == ''){
        //     $('#user_comments_commenter_buttons_' + div_id).hide();
        // }
    }
}

function build_article_comments_bar(id){
    if(disable_social == 1 && forced_team_social_features == 1 && !$('#article_' + id).data('tm')){
        return;
    }
    var div_id = id + '_1';
    var html = ' \
            <div id="user_comments_commenter_' + div_id + '" class="user_comments_commenter"> \
                <div class="user_comments_avatar"> \
                    <img src="' + profile_picture + '"> \
                </div> \
                <div class="user_comments_textarea"> \
                     <textarea tabindex=-1 id="user_comment_input_' + id + '" class="comment_textarea boxsizing_border" onfocus="check_comment_buttons(this,\'' + div_id + '\',true);bind_comment_autocomplete(this,' + id + ')" onblur="check_comment_buttons(this,\'' + div_id + '\',false);unbind_comment_autocomplete(this)" onkeyup="comment_keyup(false,this,event);" placeholder="' + _js('Add your comment...') + '" title="' + _js('Mention users by typing @ and their name.') + '"></textarea> \
                </div> \
                <div class="user_comments_commenter_buttons user_comments_commenter_buttons_hidden" id="user_comments_commenter_buttons_' + div_id + '"> \
                    <div style="float:' + float_right + ';"> \
                        <button tabindex=-1 class="bluebutton" onclick="user_comment(' + id + ')" class="smallradius article_footer_buttons">'+_js("Save comment")+'</button> \
                    </div> \
                    <div class="comment_privacy_menu" style="float:' + float_right + '" id="comment_privacy_menu_' + id + '"></div> \
                    <div class="clearfix"> \
                    </div> \
                </div> \
            </div>';

    $('#article_comment_bar_' + id).html(html);

    autosize($('#user_comment_input_' + id));

    build_comment_privacy_menu(id);
}

function build_article_social_bar(id){
    var bar = document.getElementById('article_social_bar_' + id);
    if(!bar){
        return;
    }
    bar.innerHTML = '';

    var $article = $('#article_' + id);
    var data = $article.data();

    if(disable_social == 0){
        var like_button_wrapper = document.createElement('span');
        like_button_wrapper.className = 'article_footer_buttons';
        like_button_wrapper.onclick = function(){ set_like(id); };

        var like_button = document.createElement('span');
        like_button.className = ' like_button icon16 icon-button-like';

        var like_caption = document.createElement('span');
        like_caption.innerHTML = (data.liked == 1) ? _js('Liked') : _js('Like');
        like_caption.className = 'like_button_caption';

        like_button_wrapper.appendChild(like_button);
        like_button_wrapper.appendChild(like_caption);

        bar.appendChild(like_button_wrapper);

        var like_cnt = null;
        if($article.data('likes') > 0){
            like_cnt = document.createElement('span');
            like_cnt.innerHTML = '(' + $article.data('likes') + ')';
            like_cnt.title = _js('View likes');
            like_cnt.className = 'article_footer_buttons like_button_like_cnt';

            like_cnt.onclick = function(){ view_likes(id,1); };

            bar.appendChild(like_cnt);
            like_button_wrapper.className += ' article_footer_like_with_cnt';
        }

        if(data.liked == 1){
            like_button_wrapper.className += ' article_footer_buttons_active_opacity';
            if(like_cnt){
                like_cnt.className += ' article_footer_buttons_active_opacity';
            }
        }
    }

    var brd_button_wrapper = document.createElement('span');
    brd_button_wrapper.className = 'article_footer_buttons';
    if(data.brd == 1){
        brd_button_wrapper.className += ' article_footer_buttons_active_opacity';
    }
    brd_button_wrapper.onclick = function(){ broadcast_article(id); };

    var brd_button = document.createElement('span');
    brd_button.className = ' brd_button icon16 icon-button-broadcast';

    var brd_caption = document.createElement('span');

    if(data.brd == 1){
        if(joined_teams.length > 0){
            brd_caption.innerHTML = _js('Edit broadcast');
        }else{
            brd_caption.innerHTML = _js('Broadcasted');
        }
    }else{
        brd_caption.innerHTML = _js('Broadcast');
    }

    brd_caption.className = 'like_button_caption';

    brd_button_wrapper.appendChild(brd_button);
    brd_button_wrapper.appendChild(brd_caption);

    bar.appendChild(brd_button_wrapper);


    var num_comments_span = document.createElement('span');
    num_comments_span.id = 'num_comments_' + id;
    num_comments_span.className = 'num_comments graylink';

    bar.appendChild(num_comments_span);
}

function build_article_footer(id,no_helpers){
    if(!article_display_footer){
        return;
    }
    var placement = 'middle'; //  middle or top
    if(view_style == 2 || view_style == 3 || view_style == 4){
        placement = 'top';
    }

    if($('#article_footer_placeholder_' + placement + '_' + id).hasClass('footerized')){
        return;
    }
    $('#article_footer_placeholder_' + placement + '_' + id).addClass('footerized');

    var $article = $('#article_' + id);
    var data = $article.data();

    var footer = create_dom_element('div', {
        className: 'article_footer',
        id: 'article_footer_' + id
    });

    var main_buttons_holder = create_dom_element('div', {
        className: 'article_footer_main_buttons'
    });
    footer.appendChild(main_buttons_holder);

    var footer_shoehorn = create_dom_element('div', {
        className: 'article_footer_shoehorn'
    });
    footer.appendChild(footer_shoehorn);

    var star_class = (data.fav == 1) ? 'icon-article_topbar_read_later_full' : 'icon-article_topbar_read_later_empty';
    main_buttons_holder.appendChild(create_dom_element('div',{
        className: 'article_footer_buttons star_img icon16 ' + star_class,
        title: _js('Read later') + ' (' + _js('Hotkey') + ': F)',
        onclick: function(){ set_fav(id); l('Article header buttons', 'Star'); }
    }));

    var tag_class = (data.tags != null && Object.size(data.mtags) > 0) ? 'icon-all-tags-full' : 'icon-all-tags';
    main_buttons_holder.appendChild(create_dom_element('div',{
        className: 'article_footer_buttons tags_img icon16 ' + tag_class,
        title: _js('Add tags') + ' (' + _js('Hotkey') + ': T)',
        onclick: function(){ show_article_tags_menu(id, this); l('Article header buttons', 'Tags'); }
    }));

    if(joined_teams.length > 0){
        var broadcast_class = (data.brd == 1) ? 'icon-artcile_topbar_team_broadcast_full' : 'icon-artcile_topbar_team_broadcast';
        main_buttons_holder.appendChild(create_dom_element('div',{
            className: 'article_footer_buttons broadast_img icon16 ' + broadcast_class,
            title: _js('Send to team channels') + ' (' + _js('Hotkey') + ': S)',
            onclick: function(){ broadcast_article(id, null, true); l('Article header buttons', 'Broadcast'); }
        }));
    }

    if(data.sunk == 0){
        var unread_button_class = (data.read == 1) ? 'icon-article_topbar_mark_as_read_empty' : 'icon-article_topbar_mark_as_read_full';
        var unread_button_title = (data.read == 1) ? _js('Mark as unread') + ' (' + _js('Hotkey') + ': M)' : _js('Mark as read') + ' (' + _js('Hotkey') + ': M)';
        main_buttons_holder.appendChild(create_dom_element('div',{
            id: 'mark_unread_button_' + id,
            className: 'article_footer_buttons icon16 ' + unread_button_class,
            title: unread_button_title,
            onclick: function(){ mark_read(id); if(data.read == 1){ add_score_queue(id,'read'); } l('Article header buttons', 'Mark read/unread'); }
        }));
    }

    if(data.mobilizable == 1){
        mobilize_button_class = (!$('#article_' + id).data('mobilized') == 1) ? 'article_topbar_mobilize_empty' : 'article_topbar_mobilize_full';

        main_buttons_holder.appendChild(create_dom_element('div',{
            id: 'mobilize_button_' + id,
            className: 'article_footer_buttons icon16 icon-' + mobilize_button_class,
            title: _js('Load full content') + ' (' + _js('Hotkey') + ': W)',
            onclick: function(){ mobilize(id, no_helpers); l('Article header buttons', 'Full content'); }
        }));
    }

    if(data.translations == 1) {
      translate_button_extra_class = $('#article_' + id).data('translated') == 1 ? ' active' : '';
      main_buttons_holder.appendChild(create_dom_element('div', {
        id: 'translate_button_' + id,
        className: 'article_footer_buttons icon16 icon-article_topbar_translate_article' + translate_button_extra_class,
        title: _js('Translate article') + ' (' + _js('Hotkey') + ': Q)',
        onclick: function () {
          translate_article(id);
          l('Article header buttons', 'Translate article');
        }
      }));
    }

    if($('#article_full_contents_' + id + ' .enclosures_audio_player').hasClass('tts-audio')) {
      main_buttons_holder.appendChild(create_dom_element('div', {
        className: 'article_footer_buttons icon16 icon-article_topbar_text_to_speech',
        title: _js('Text to speech'),
        onclick: function () {
          toggle_tts(id, this);
          l('Article header buttons', 'Text to speech');
        }
      }));
    }

    if(data.d == 1){
        main_buttons_holder.appendChild(create_dom_element('div', {
            className: 'article_footer_buttons icon16 icon-article_topbar_delete',
            title: _js('Delete article'),
            onclick: function(){ delete_article(id); l('Article header buttons', 'Delete article'); }
        }));
    }

    main_buttons_holder.appendChild(create_dom_element('div', {
        className: 'article_footer_buttons icon16 icon-article_topbar_more_menu',
        id: 'famo_' + id,
        onclick: function(){ show_article_menu(id, '#famo_' + id, true); l('Article header buttons', 'More menu'); }
    }));

    if(connected_services.length >= 4){
        $(footer).addClass('article_footer_buttons_many_services');
    }

    // connected_services = [];

    if(connected_services.length > 0){
        var service_buttons_holder = create_dom_element('div', {
            className: 'article_footer_service_buttons'
        });
        footer.appendChild(service_buttons_holder);
    }

    for(var i in connected_services){
        var service_button = document.createElement('div');
        var service_name = '';
        var extra_class = '';
        var show_advanced_menu;

        if(connected_services[i] == pocket_network_id){
            service_name = 'pocket';
            show_advanced_menu = (advanced_menu_pocket) ? true : false;
            extra_class = (advanced_menu_pocket) ? 'article_footer_buttons_service_with_menu' : '';
            if(data.pocket == 1){
                extra_class += ' article_footer_buttons_active';
            }
            service_button.className = 'article_footer_buttons ' + extra_class + ' icon16 icon-button-' + service_name;
            service_button.title = 'Pocket (' +_js('Hotkey') + ': Y)';
            service_button.id = 'pocket_button_' + id;
            service_button.onclick = function(){ pocket_article(id); l('Article header buttons', 'Pocket'); }
        }else if(connected_services[i] == evernote_network_id){
            service_name = 'evernote';
            show_advanced_menu = (advanced_menu_evernote) ? true : false;
            extra_class = (advanced_menu_evernote) ? 'article_footer_buttons_service_with_menu' : '';
            if(data.evernote == 1){
                extra_class += ' article_footer_buttons_active';
            }
            service_button.className = 'article_footer_buttons ' + extra_class + ' icon16 icon-button-' + service_name;
            service_button.title = 'Evernote (' +_js('Hotkey') + ': Z)';
            service_button.id = 'evernote_button_' + id;
            service_button.onclick = function(event){
                if($(event.target).hasClass('quick_options_link')){
                    return;
                }
                evernote_article(id);
                l('Article header buttons', 'Evernote');
            }
        }else if(connected_services[i] == onenote_network_id){
            service_name = 'onenote';
            show_advanced_menu = (advanced_menu_onenote) ? true : false;
            extra_class = (advanced_menu_onenote) ? 'article_footer_buttons_service_with_menu' : '';
            if(data.onenote == 1){
                extra_class += ' article_footer_buttons_active';
            }
            service_button.className = 'article_footer_buttons ' + extra_class + ' icon16 icon-button-' + service_name;
            service_button.title = 'OneNote (' +_js('Hotkey') + ': X)';
            service_button.id = 'onenote_button_' + id;
            service_button.onclick = function(){ onenote_article(id); l('Article header buttons', 'OneNote'); }
        }else if(connected_services[i] == dropbox_network_id){
            service_name = 'dropbox';
            show_advanced_menu = (advanced_menu_dropbox) ? true : false;
            extra_class = (advanced_menu_dropbox) ? 'article_footer_buttons_service_with_menu' : '';
            if(data.dropbox == 1){
                extra_class += ' article_footer_buttons_active';
            }
            service_button.className = 'article_footer_buttons ' + extra_class + ' icon16 icon-button-' + service_name;
            service_button.title = 'Dropbox (' +_js('Hotkey') + ': (none))';
            service_button.id = 'dropbox_button_' + id;
            service_button.onclick = function(){ dropbox_article(id); l('Article header buttons', 'Dropbox'); }
        }else if(connected_services[i] == google_network_id){
            service_name = 'gdrive';
            show_advanced_menu = (advanced_menu_gdrive) ? true : false;
            extra_class = (advanced_menu_gdrive) ? 'article_footer_buttons_service_with_menu' : '';
            if(data.gdrive == 1){
                extra_class += ' article_footer_buttons_active';
            }
            service_button.className = 'article_footer_buttons ' + extra_class + ' icon16 icon-button-' + service_name;
            service_button.title = 'Google Drive (' +_js('Hotkey') + ': (none))';
            service_button.id = 'gdrive_button_' + id;
            service_button.onclick = function(){ gdrive_article(id); l('Article header buttons', 'Google Drive'); }
        }else if(connected_services[i] == instapaper_network_id){
            service_name = 'instapaper';
            show_advanced_menu = (advanced_menu_instapaper) ? true : false;
            extra_class = (advanced_menu_instapaper) ? 'article_footer_buttons_service_with_menu' : '';
            if(data.instapaper == 1){
                extra_class += ' article_footer_buttons_active';
            }
            service_button.className = 'article_footer_buttons ' + extra_class + ' icon16 icon-button-' + service_name;
            service_button.title = 'Instapaper (' +_js('Hotkey') + ': I)';
            service_button.id = 'instapaper_button_' + id;
            service_button.onclick = function(){ instapaper_article(id); l('Article header buttons', 'Instapaper'); }
        }

        // service_buttons_holder.appendChild(service_button);

        if(show_advanced_menu){
            var service_button_menu_wrapper = document.createElement('div');
            service_button_menu_wrapper.className = 'service_icon_chevron_wrapper';

            var service_button_menu_button = document.createElement('div');
            service_button_menu_button.className = 'icon16 icon-arrow_down_small service_icon_chevron';
            service_button_menu_button.setAttribute('data-svc', connected_services[i]);
            service_button_menu_button.setAttribute('data-svn', service_name);
            service_button_menu_button.setAttribute('data-aid', id);
            service_button_menu_button.onmouseover = function(){ clearTimeout(timers['service_menu_' + $(this).data('svc')])};
            service_button_menu_button.onmouseout = function(){ timers['service_menu_' + $(this).data('svc')] = setTimeout(function(s, i){ $('#' + s + '_options_' + i).hide(); },500,$(this).data('svn'),$(this).data('aid'));};
            service_button_menu_button.onclick = function(e){ window['toggle_' + $(this).data('svn') + '_options']($(this).data('aid')); e.stopPropagation(); return false; };

            var service_button_menu = document.createElement('div');
            service_button_menu.className = 'social_media_options smallshadow';
            service_button_menu.id = service_name + '_options_' + id;
            service_button_menu.setAttribute('data-svc', connected_services[i]);
            service_button_menu.setAttribute('data-svn', service_name);
            service_button_menu.setAttribute('data-aid', id);
            service_button_menu.onmouseover = function(){ clearTimeout(timers['service_menu_' + $(this).data('svc')])};
            service_button_menu.onmouseout = function(){ timers['service_menu_' + $(this).data('svc')] = setTimeout(function(s, i){ $('#' + s + '_options_' + i).hide(); },500,$(this).data('svn'),$(this).data('aid'));};
            service_button_menu.innerHTML = '<div class="loader loader_menu"></div>';

            service_button_menu_wrapper.appendChild(service_button_menu_button);
            service_button_menu_wrapper.appendChild(service_button_menu);
            service_button.appendChild(service_button_menu_wrapper);
        }
    }

    footer.appendChild(create_dom_element('div', {
        className: 'sd flex',
        id: 'sd_' + id
    }));

    document.getElementById('article_footer_placeholder_' + placement + '_' + id).appendChild(footer);

    if(device_type == 'phone'){
      $('#sd_' + id).css({ display: 'flex' });
      $('#mf_right_part').html($('#sd_' + id))
    }

    document.getElementById('article_footer_placeholder_' + placement + '_' + id).appendChild(create_dom_element('div', {
        className: 'text_preferences article_topbar_extra',
        id: 'article_footer_text_preferences_' + id,
        dataset: {aid: id}
    }));

    document.getElementById('article_footer_placeholder_' + placement + '_' + id).appendChild(create_dom_element('div', {
        className: 'tts_player article_topbar_extra',
        id: 'tts_player_' + id,
        dataset: {aid: id}
    }));

    $('#article_footer_' + id).find('.article_footer_buttons').disableSelection();

    if(!check_user_visit(1)){
        tippy('#tp_visit_dot_' + id, {placement: 'top'});
    }

    if($('#article_full_contents_' + id + ' .translation-container').get(0)){
        insertAfter($('#article_full_contents_' + id + ' .translation-container').get(0), $('#article_footer_placeholder_' + placement + '_' + id).get(0));
    }
    // console.log($('#article_full_contents_' + id + ' .translation-container'), placement)

}

function show_article_tags_menu(id){
    if(document.getElementById('article_tags_menu_' + id)){
        $('#article_tags_menu_' + id).remove();
        $(document).off('.article_tags_menu');
        $('#article_footer_' + id).find('.article_footer_main_buttons').eq(0).find('.tags_img').removeClass('article_footer_buttons_current');
        return;
    }

    if(!$('#article_footer_' + id).find('.article_footer_main_buttons')[0]){
        return;
    }

    $('#article_footer_' + id).find('.article_footer_main_buttons').eq(0).find('.tags_img').addClass('article_footer_buttons_current');

    var top_wrapper = create_dom_element('div', {
        className: 'article_tags_menu_top_wrapper'
    });

    var menu = create_dom_element('div', {
        id: 'article_tags_menu_' + id,
        className: 'article_tags_menu'
    });

    var input = create_dom_element('input', {
        type: 'text',
        placeholder: _js('Search or create tags'),
        name: 'article_tags_menu_filter_' + id + '_' + uniqid(),
        id: 'article_tags_menu_filter_' + id,
        className: 'article_tags_filter'
    });

    var tags_list = create_dom_element('div', {
        id: 'article_tags_menu_tag_list_' + id,
        className: 'article_tags_menu_tag_list'
    });

    top_wrapper.appendChild(input);
    menu.appendChild(top_wrapper);
    menu.appendChild(tags_list);

    $('#article_footer_' + id).find('.article_footer_main_buttons')[0].appendChild(menu);
    $('#article_tags_menu_' + id).css('left', $('#article_footer_' + id).find('.article_footer_main_buttons').eq(0).find('.tags_img').position().left);

    $('#article_tags_menu_filter_' + id).on('keydown.esc', function(e){
        if($('#article_dialog')[0]){
            setTimeout(function(){
                show_article_tags_menu(id);
            },1);
        }else{
            show_article_tags_menu(id);
        }
        e.preventDefault();
    }).on('keydown.return', function(e){
        // Add
        add_remove_current_article_tag(id);

        if($.trim($(this).val()) == ''){
            show_article_tags_menu(id);
        }

        $(this).val('');
        e.preventDefault();
    }).on('keydown.up', function(e){
        move_article_tags_menu_selection(id,'up');
        e.preventDefault();
    }).on('keydown.down', function(e){
        log_ga_hotkey(e);
        // move_jumper_selection('down');
        move_article_tags_menu_selection(id,'down');
        e.preventDefault();
    });

    $('#article_tags_menu_filter_' + id).focus().click();
    $('#article_tags_menu_filter_' + id).on('keyup',function(e){
        if(e.which == 16 || e.which == 37 || e.which == 38 || e.which == 39 || e.which == 40){
            return;
        }
        build_article_tags_menu_content(id, this.value);
    });

    build_article_tags_menu_content(id, '');

    setTimeout(function(){
        $(document).on('click.article_tags_menu', function(e){
            if(!$(e.target).parents('#article_tags_menu_' + id)[0]){
                show_article_tags_menu(id);
            }
        });
    },1);

    resize_article_tags_menu(id);
}

function is_team_tag(title){
    return title.toString().indexOf('org-') === 0 ? true : false;
}

function fix_tag_name(title){
    return title.toString().replace(/(org|usr)\-\d+f?\-/,'');
}

function build_article_tags_menu_content(id,filter){
    filter = $.trim(filter);
    filter = filter.replace(/</,'').replace(/>/,'');
    var article_tags = $('#article_' + id).data('tags');
    var all_tags = get_folders_from_tree(true);
    var tags_html = '';
    var first_element = '';
    current_article_tag_sel = null;
    var item_counter = 0;
    if(all_tags === null){
        tags_html += '<div class="article_tags_menu_empty_state"><div class="article_tags_menu_empty_icon"><img src="/images/article_topbar_tags_empty_state_' + get_theme_name() + '.png"></div>';
        tags_html += '<div class="article_tags_menu_empty_title">Loading tags...</div>';
    }else if(Object.size(all_tags) == 0 && !filter){
        tags_html += '<div class="article_tags_menu_empty_state"><div class="article_tags_menu_empty_icon"><img src="/images/article_topbar_tags_empty_state_' + get_theme_name() + '.png"></div>';
        tags_html += '<div class="article_tags_menu_empty_title">' + _js('Tags help you organize better') + '</div>';
        tags_html += '<div class="article_tags_menu_empty_subtitle graylink">' + _js('Type a name and hit Return to create your first tag.') + '</div></div>';
    }else{
        for(var i in all_tags){
            var tag_class = '';

            if(filter){
                if(!fuzzy_match(all_tags[i].name.toLowerCase(),filter.toLowerCase())){
                    tag_class += ' hidden';
                }
            }

            for(var t in article_tags){
                if(article_tags[t] == all_tags[i].name){
                    tag_class += ' article_tags_menu_tag_added';
                }
            }

            var icon_class = 'icon-add-menu-tag';
            if(is_team_tag(all_tags[i].name)){
                icon_class = 'icon-add-menu-team-tag';
            }

            tags_html += '<div class="article_tags_menu_tag flex' + tag_class + '" id="article_tags_menu_tag_' + id + '_' + all_tags[i].id + '" onmouseover="set_article_tags_menu_selection(' + id + ', this.id, true)" onclick="add_remove_current_article_tag(' + id + ')" data-id="' + all_tags[i].id + '" data-title="' + htmlentities(all_tags[i].name) + '" data-new="false">';
            tags_html += '<div class="article_tags_menu_tag_icon article_tags_menu_tag_icon_empty"><span class="icon16 ' + icon_class + '"></span></div>';
            tags_html += '<div class="article_tags_menu_tag_icon article_tags_menu_tag_icon_full"><span class="icon16 bluelink ' + icon_class + '-full"></span></div>';
            tags_html += '<div class="article_tags_menu_tag_name flex_grow" title="' + htmlentities(fix_tag_name(all_tags[i].name)) + '"><div>' + fix_tag_name(all_tags[i].name) + '</div></div>';
            tags_html += '<div class="article_tags_menu_tag_add_link">' + _js('Add') + '</div>';
            tags_html += '<div class="article_tags_menu_tag_remove_link redlink">' + _js('Remove') + '</div>';
            tags_html += '<div class="article_tags_menu_tag_added_label">' + _js('Added') + '</div>';
            tags_html += '</div>';

            if(item_counter == 0 && tag_class.indexOf('hidden') === -1){
                if(filter){
                    first_element = 'article_tags_menu_tag_' + id + '_' + all_tags[i].id;
                }
                item_counter++;
            }
        }
    }

    if(filter && all_tags !== null){
        var filter_found_in_tags = false;
        var all_tags_and_folders = get_folders_from_tree();
        for(var i in all_tags_and_folders){
            if(all_tags_and_folders[i].name.toLowerCase() == filter.toLowerCase()){
                filter_found_in_tags = true;
            }
        }

        if(!filter_found_in_tags){
            var fake_id = uniqid();
            tags_html += '<div class="article_tags_menu_tag flex article_tags_menu_new" id="article_tags_menu_tag_' + id + '_' + fake_id + '" onmouseover="set_article_tags_menu_selection(' + id + ', this.id, true)" onclick="add_remove_current_article_tag(' + id + ', true)" data-id="' + fake_id + '" data-title="' + htmlentities(filter) + '" data-new="true">';
            tags_html += '<div class="article_tags_menu_tag_name flex_grow">' + sprintf(_js('Create new tag %s'),'<b>' + htmlentities(filter) + '</b>') + '</div>';
            tags_html += '</div>';

            if(item_counter == 0){
                first_element = 'article_tags_menu_tag_' + id + '_' + fake_id;
            }

            if(joined_organization_id){
                fake_id = uniqid();
                tags_html += '<div class="article_tags_menu_tag flex article_tags_menu_new" id="article_tags_menu_tag_' + id + '_' + fake_id + '" onmouseover="set_article_tags_menu_selection(' + id + ', this.id, true)" onclick="add_remove_current_article_tag(' + id + ', true)" data-id="' + fake_id + '" data-title="' + htmlentities(filter) + '" data-new="true" data-team="true">';
                tags_html += '<div class="article_tags_menu_tag_name flex_grow">' + sprintf(_js('Create new team tag %s'),'<b>' + htmlentities(filter) + '</b>') + '</div>';
                tags_html += '</div>';
            }
        }
    }

    $('#article_tags_menu_tag_list_' + id).html(tags_html);

    if(first_element){
        set_article_tags_menu_selection(id, first_element, true);
    }

    resize_article_tags_menu(id);
}

function resize_article_tags_menu(id){
    var $el = $('#article_tags_menu_' + id);

    if(!$el[0]){
        return;
    }

    var container_id = (view_style == 0) ? '#article_' + id : window;

    var bottom = $el.offset().top + $el.outerHeight();
    var height = $(container_id).outerHeight();
    var window_height = $(window).outerHeight();

    if(view_style == 0 && bottom > window_height){
        height = window_height;
        container_id = window;
    }

    if(bottom > height){
        var offset = $el.find('.article_tags_menu_top_wrapper').eq(0).outerHeight();
        offset += 32; // paddings
        var tags_height = $(container_id).height() - $el.offset().top - offset;

        if(view_style == 0 && container_id != window){
            offset -= 32;
        }

        $('#article_tags_menu_tag_list_' + id).css('max-height', tags_height);
    }

}

var current_article_tag_sel = null;
function move_article_tags_menu_selection(id,dir){
    if(current_article_tag_sel === null){
        if(dir == 'up'){
            target_obj = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_list').children().not('.hidden').last();
        }else if(dir == 'down'){
            target_obj = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_list').children().not('.hidden').first();
        }
    }else{
        if(dir == 'up'){
            var target_obj = $('#' + current_article_tag_sel).prevAll('div').not('.hidden').first();
            if(!target_obj[0]){
                target_obj = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_list').children().not('.hidden').last();
            }
        }else if(dir == 'down'){
            var target_obj = $('#' + current_article_tag_sel).nextAll('div').not('.hidden').first();
            if(!target_obj[0]){
                target_obj = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_list').children().not('.hidden').first();
            }
        }
    }

    if(target_obj.hasClass('article_tags_menu_tag')){
        set_article_tags_menu_selection(id,target_obj.attr('id'));
    }
}

function set_article_tags_menu_selection(id, element_id, from_mouse){
    current_article_tag_sel = element_id;
    $('.article_tags_menu_tag_active').removeClass('article_tags_menu_tag_active');
    $('#' + element_id).addClass('article_tags_menu_tag_active');

    if(!from_mouse){
        $('#article_tags_menu_filter_' + id).val($('#' + element_id).data('title'));

        var jumper_height = $('#article_tags_menu_tag_list_' + id).outerHeight();
        var top = $('#' + element_id).position().top;
        var bottom = top + $('#' + element_id).outerHeight();
        var bottom_delta = jumper_height - bottom;
        var top_delta = top;
        if(bottom_delta < 0){
            $('#article_tags_menu_tag_list_' + id).scrollTo('+=' + (bottom_delta*-1) + 'px')
        }else if(top_delta < 0){
            $('#article_tags_menu_tag_list_' + id).scrollTo('#' + element_id)
        }
    }
}

function add_remove_current_article_tag(id,new_tag){
    var current_element = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_active');
    if(!current_element[0]){
        return;
    }

    if($(current_element).hasClass('article_tags_menu_tag_added')){
        $(current_element).removeClass('article_tags_menu_tag_added');
    }else{
        $(current_element).addClass('article_tags_menu_tag_added');
    }

    var tags = {};
    $('#article_tags_menu_' + id).find('.article_tags_menu_tag_added').each(function(){
        var dt = $(this).data();

        if(dt.new && dt.team){
            dt.title = 'org-' + joined_organization_id + '-' + dt.title;
        }

        tags[dt.id] = dt.title;
        if(dt.new){
            user_folders[0] = [{id: dt.id, name: dt.title}].concat(user_folders[0]);
        }
    });

    $('#article_' + id).data('mtags',clone_object(tags));

    var atags = $('#article_' + id).data('atags');
    if(Object.size(atags) > 0){
        for(var i in atags){
            tags[i] = atags[i];
        }
    }

    $('#article_' + id).data('tags',tags);

    setTimeout(function(){
        $('#article_tags_menu_filter_' + id).val('');
        if(new_tag){
            build_article_tags_menu_content(id, '');
        }
    },1);

    build_article_tags(id);
    xajax_save_tags(id,tags);
    check_tags_icon(id);
}

function toggle_tts(id, el) {
  $('#article_footer_text_preferences_' + id).html('').hide();
  $('#article_full_contents_' + id).toggleClass('show-tts-player');

  if($('#article_full_contents_' + id).hasClass('show-tts-player')) {
    if ($('#tts_player_' + id).html() == '') {
      $('#article_full_contents_' + id + ' .enclosures_audio_player')
        .appendTo('#tts_player_' + id)
    }
    $('#article_footer_' + id +' .icon-article_topbar_text_to_speech').addClass('active');
    $('#article_full_contents_' + id).css({paddingTop: 0})
    $('#tts_player_' + id).slideDown({duration: 150});

    //check for pro
    if($('#tts_player_' + id + ' .enclosures_audio_player').hasClass('require-pro')) {
      require_upgrade_inline({
        el: '.enclosures_audio_player[data-article-id=' + id + ']',
        text: _js('Text to speech is only available to Pro users.'),
        click: 'toggle_tts('+id+')',
        feature: 'text_to_speech'
      });
    } else {
      $.get('/api/text2speech/?overusage=1')
        .done(function (data) {
          if (data == 2) {
            var html = '<div class="user_over_feeds_limit_popup">';
            html += '<div class="user_over_feeds_limit_popup_h1">Request a custom plan to continue listening to articles!</div>';

            html += '<p class="user_over_feeds_limit_popup_warning flex"><span class="icon19 icon-exclamation-mark mr-3"></span><span>The Text to speech service is temporarily disabled because you are overusing it. To activate it again, you will need an Custom plan.</span></p>';
            html += '<div class="user_over_feeds_limit_popup_btns flex justify-content-between">';
            html += '<a class="graylink_darklink underlink" href="javascript:void(0);" onclick="inno_dialog_close(\'subscriptions_overlimit\');">Close</a>';

            html += '<button class="bluebutton greenbutton" style="width:144px; height: 40px;" onclick="dialog(\'feedback_dialog\')">' + _js('Contact support') + '</button>';

            html += '</div>';
            html += '</div>';

            dialog('subscriptions_overlimit', {content: html});
            $('#article_full_contents_' + id).removeClass('show-tts-player');
            $('#article_footer_' + id + ' .icon-article_topbar_text_to_speech').removeClass('active');
          }
          if (data == 1) {
            $('#article_full_contents_' + id).addClass('show-tts-warning');
          } else {
            $('#tts_player_' + id).find('.icon-inline-player-play-btn').click(); //auto play tts
          }
        });
    }
  } else {
    ino.pauseAllPlayers();
    $('#article_footer_' + id +' .icon-article_topbar_text_to_speech').removeClass('active');
    $('#tts_player_' + id).slideUp({duration: 150});
  }
}

function toggle_text_preferences(id,force_show){
    if($('#article_footer_text_preferences_' + id).html() == '' || force_show){
        var tp_div = document.getElementById('article_footer_text_preferences_' + id);

      var tp_layout_div = create_dom_element('div', { className: 'btn-group btn-group-toggle' });
      if(view_style == 0 || view_style == 1 || view_style == 2){
        tp_div.appendChild(create_dom_element('label', {
          className: 'form-label text-xs mb-1',
          innerHTML: _js('Layout'),
        }));

        tp_layout_div.appendChild(create_dom_element('span', {
          className: 'tp_icon tp_button ' + (article_alignment == 1 ? 'tp_button_active' : '') + ' icon16 icon20 icon-article_layout_center flex justify-content-center',
          title: _js('Centered article'),
          onclick: function(){ set_article_alignment(1); }
        }));

        tp_layout_div.appendChild(create_dom_element('span', {
          className: 'tp_icon tp_button ' + (article_alignment == 0 ? 'tp_button_active' : '') + ' icon16 icon20 icon-article_layout_align_left flex justify-content-center' + rtl_suffix,
          title: _js('Left aligned article'),
          onclick: function(){ set_article_alignment(0); }
        }));

        tp_layout_div.appendChild(create_dom_element('span', {
          className: 'tp_icon tp_button ' + (article_alignment == 2 ? 'tp_button_active' : '') + ' icon16 icon20 icon-article_layout_full_width flex justify-content-center',
          title: _js('Left aligned article with full-width content'),
          onclick: function(){ set_article_alignment(2); }
        }));
      }
      tp_div.appendChild(tp_layout_div);

        tp_div.appendChild(create_dom_element('label', {
            className: 'form-label text-xs mb-1',
            innerHTML: _js('Font'),
            title: _js('Articles font family')
        }));

        var font_sel = document.createElement('select');
        font_sel.className = 'custom_select form-control';
        font_sel.onchange = function(){ set_font_family(this.value) };
        for(var i in fonts){
            var opt = document.createElement('option');
            opt.value = i;
            opt.innerHTML = fonts[i].name;
            if(font_id == i){
                opt.selected = 'selected';
            }

            $(font_sel).prepend(opt);
        }
        tp_div.appendChild(font_sel);

        tp_div.appendChild(create_dom_element('label', {
            className: 'form-label text-xs mb-1',
            innerHTML: _js('Font size'),
        }));

        var fs_sel = document.createElement('select');
        fs_sel.className = 'custom_select form-control';
        fs_sel.onchange = function(){ set_font_size(this.value) };
        for(var i in font_sizes){
            var opt = document.createElement('option');
            opt.value = font_sizes[i].id;
            opt.innerHTML = font_sizes[i].name;
            if(font_size == font_sizes[i].id){
                opt.selected = 'selected';
            }

            fs_sel.appendChild(opt);
        }
        tp_div.appendChild(fs_sel);

        tp_div.appendChild(create_dom_element('label', {
          className: 'form-label text-xs mb-1',
          innerHTML: _js('Line height'),
        }));

        var lh_sel = document.createElement('select');
        lh_sel.className = 'custom_select form-control';
        lh_sel.onchange = function(){ set_line_height(this.value) };
        for(var i in line_heights){
            var opt = document.createElement('option');
            opt.value = line_heights[i];
            opt.innerHTML = parseInt(line_heights[i]) / 10;
            if(line_height == line_heights[i]){
                opt.selected = 'selected';
            }

            $(lh_sel).prepend(opt);
        }
        tp_div.appendChild(lh_sel);


      tp_div.appendChild(create_dom_element('a', {
        className: 'btn btn-link graylink underlink d-block mt-3',
        innerHTML:_js('Reset to defaults'),
        href: 'javascript:void(0)',
        style: 'text-align: center',
        onclick: function(){ reset_font_settings(); }
      }));
    }

    dialog('article_text_preferences', {  content: tp_div, id: id })

}

function set_article_alignment(alignment){
    article_alignment = alignment;
    init_font_settings();
    build_article_annotations();
    xajax_save_user_pref('article_alignment',alignment);

}

function reset_font_settings(){
    font_id = 18;
    line_height = 17;
    font_size = 0;
    article_alignment = 1;
    init_font_settings();
    build_article_annotations();
    xajax_save_user_pref('font',font_id);
    xajax_save_user_pref('line_height',line_height);
    xajax_save_user_pref('font_size',font_size);
    xajax_save_user_pref('article_alignment',article_alignment);
}

function set_font_family(set_font_id){
    font_id = set_font_id;
    init_font_settings();
    build_article_annotations();
    xajax_save_user_pref('font',set_font_id);
}

function set_line_height(set_lh){
    line_height = set_lh;
    init_font_settings();
    build_article_annotations();
    xajax_save_user_pref('line_height',set_lh);
}

function sanitize_article(id,skip_inject,no_helpers){
    if(skip_inject != true){
        if(article_contents[id] == undefined){
            return;
        }

        var contents = article_contents[id];
        if(contents.indexOf('<script') !== -1){
            contents = contents.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, ' ');
        }
        if(isie8){
            document.getElementById('article_full_contents_' + id).innerHTML = contents;
        }else{
            $('#article_full_contents_' + id).html(contents);
        }
        if(view_style == 2){
            if($('#no_article_selected')[0]){
                $('#no_article_selected').remove();
            }
            $('#article_full_contents_' + id).appendTo('#three_way_contents');
        }else if(view_style == 3 || view_style == 4){
            inno_dialog_resize();
        }
    }

    build_article_footer(id,no_helpers);
    build_share_buttons(id);
    build_article_social_bar(id);
    build_article_comments_bar(id);
    build_article_tags(id);

    if(view_style == 2){
        var container = '#three_way_contents';
    }else if(view_style == 3 || view_style == 4){
        var container = '#article_dialog';
    }else{
        var container = '#article_' + id;
    }

    var $article_contents_inner = $('#article_contents_inner_' + id);

    // Do not allow wider elements anymore

    // var article_width = $(container).width();
    // // article_width -= parseInt($(container).css('padding-' + float_left));
    // article_width -= parseInt($article_contents_inner.css('padding-' + float_right));
    // if(view_style != 2 && view_style != 3 && view_style != 4){
    //     article_width -= parseInt($(container).css('padding-' + float_right));
    //     article_width -= parseInt($article_contents_inner.css('padding-' + float_left));
    // }
    // if($('#ad_inline_' + id)[0]){
    //     article_width -= parseInt($('#ad_inline_' + id).outerWidth());
    // }

    // if($('#static_search_menu_container').is(":visible")){
    //     article_width -= parseInt($('#static_search_menu_container').outerWidth());
    // }

    if(view_style == 3 || view_style == 4){
        // Topics count progress bar
        var replace_topic_bar = function(from, to){
            if(!$(to + ' div#topic_progress_wrapper').length && $(from + ' div#topic_progress_wrapper').length){
                topics_progress_bar.remove_bar();
            }
            topics_progress_bar.show_bar($('#reader_pane div#article_'+id).attr('data-topiccount'), '#article_dialog_modal_overlay');
        };

        // Topics count progress bar
        // DOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
        if((feed_params.view_unread === 0 || parseInt($('#total_unread_cnt').text()) > 0) && $('#footer').is(':visible')){
            replace_topic_bar('#fo_control_buttons', '#article_dialog_modal_overlay');
        }

        var bind_mouse_events = false;
        if(!no_helpers && !$('#article_dialog_wrapper').find('.article_helper_left')[0]){
            var dialog_helpers_left = document.createElement('div');
            dialog_helpers_left.className = 'article_helper_left';
            $('#article_dialog_wrapper').append(dialog_helpers_left);

            $(dialog_helpers_left).on('click',function(){
                move_article('prev');
            }).disableSelection();
            $(dialog_helpers_left).animate({left: -70}, 500, 'easeOutQuint');
            bind_mouse_events = true;
        }

        if(!no_helpers && !$('#article_dialog_wrapper').find('.article_helper_right')[0]){
            var dialog_helpers_right = document.createElement('div');
            dialog_helpers_right.className = 'article_helper_right';
            $('#article_dialog_wrapper').append(dialog_helpers_right);

            $(dialog_helpers_right).on('click',function(){
                move_article('next');
            }).disableSelection();
            $(dialog_helpers_right).animate({right: -70}, 500, 'easeOutQuint');
        }

        if(!$('.article_helper_close')[0]){
            var dialog_helpers_close = document.createElement('div');
            dialog_helpers_close.className = 'article_helper_close';
            $('#article_dialog_wrapper').append(dialog_helpers_close);

            $(dialog_helpers_close).on('click',function(){
                inno_dialog_close('article_dialog');
            }).disableSelection();
            //$(dialog_helpers_close).animate({right: -70}, 500, 'easeOutQuint');
        }


        $('.article_helper_left, .article_helper_right, .article_helper_close, #article_dialog_modal_overlay').mousewheel(function(e,delta){
            delta *= e.deltaFactor;
            var container = $('#article_dialog');
            if(delta > 0){
                $(container).finish().scrollTo('-=' + delta + 'px', 250, {axis : 'y', easing:'easeOutQuint' });
            }else{
                delta = delta*-1;
                $(container).finish().scrollTo('+=' + delta + 'px', 250, {axis : 'y', easing:'easeOutQuint' });
            }
        });

        if($('#article_' + id).hasClass('article_archived')){
            $('#article_dialog').addClass('article_archived');
        }

//              if($('#article_dialog_wrapper').hasClass('article_dialog_full_width')){
//                  $('#article_dialog').append('<div class="article_full_contents_center_wrapper_outer"><div class="article_full_contents_center_wrapper" id="article_full_contents_center_wrapper_' + id + '"></div></div>');
//                  $('#article_full_contents_' + id).appendTo('#article_full_contents_center_wrapper_' + id + '');
//                  $('#article_full_contents_' + id).addClass('article_full_contents_centered');
//              }

    }

    if(view_style == 0){
        // Topics count progress bar
        var curr_art = $('#reader_pane div#article_'+id).attr('data-topiccount');
        if(curr_art == 1){
            topics_progress_bar.show_bar(1, '#fo_control_buttons');
        }
    }
    if(article_styling == 1 || article_styling == 2 || device_type == 'phone'){
        $article_contents_inner.find('*').each(function(){
            var $this = $(this);
            if($this.css('color')){
                $this.css('color','');
            }
            if($this.css('background-color')){
                $this.css('background-color','');
            }
            if(article_styling == 2 || device_type == 'phone'){
                $this.removeAttr('style').removeAttr('color');
            }
        });
    }

    if(device_type == 'phone'){
        var content_max_width = $article_contents_inner.width();
        if(content_max_width == 0){
            content_max_width = $('#article_full_contents_' + id).width();
        }
    }else{
        var content_max_width = $article_contents_inner.css('max-width');
        if(content_max_width == '100%'){
            content_max_width = 650;
        }
    }

    content_max_width = parseInt(content_max_width);
    article_width = content_max_width;

    $article_contents_inner.find('iframe').each(function(){
        var $this = $(this);
        var current_width = ($this.attr('width') != '') ? $this.attr('width') : $this.css('width');
        if(!current_width || current_width > article_width){
            $this.width('100%');
        }
        // if(device_type == 'phone'){
        //     $this.width('100%').height('auto');
        //     return true;
        // }
        try{
            if($this.attr('src') && $this.attr('src').indexOf('vimeo.com') != -1){
                var yt_width = (view_style == 3 || view_style == 4 || device_type == 'phone' || full_width_embeds == 1) ? article_width : content_max_width;
                var yt_height = Math.round(yt_width / 1.777777777777778);
                $this.width(yt_width).height(yt_height);
            }

            if($this.attr('src') && $this.attr('src').indexOf('gfycat.com') != -1){
                var yt_width = (view_style == 3 || view_style == 4 || device_type == 'phone' || full_width_embeds == 1) ? article_width : content_max_width;
                var yt_height = Math.round(yt_width / 1.777777777777778);
                $this.width(yt_width).height(yt_height);
            }

            if($this.attr('src') && $this.attr('src').indexOf('bilibili.com/video') != -1){
                $this.remove();
            }

            if($this.attr('src') && ($this.attr('src').indexOf('youtube.com') != -1 || $this.attr('src').indexOf('youtube-nocookie.com') != -1)){
                var yt_width = (view_style == 3 || view_style == 4 || device_type == 'phone' || full_width_embeds == 1) ? article_width : content_max_width;
                var yt_height = Math.round(yt_width / 1.777777777777778);
                $this.width(yt_width).height(yt_height);
                if($this.attr('src').indexOf('autoplay=1') !== -1){
                    console_log('Removing autoplay attribute from YouTube video ' + $this.attr('src'));
                    $this.attr('src',$this.attr('src').replace(/autoplay\=1/,'autoplay=0'));
                }
                if($this.attr('src').indexOf('fs=0') !== -1){
                    console_log('Adding fs attribute to YouTube video ' + $this.attr('src'));
                    $this.attr('src',$this.attr('src').replace(/fs\=0/,'fs=1'));
                }

                if($this.attr('src').indexOf('autohide=0') !== -1){
                    console_log('Setting autohide attribute for YouTube video ' + $this.attr('src'));
                    $this.attr('src',$this.attr('src').replace(/autohide\=0/,'autohide=1'));
                }

                if($this.attr('src').indexOf('theme=') === -1){
                    console_log('Adding theme attribute to YouTube video ' + $this.attr('src'));
                    var symbol = ($this.attr('src').indexOf('?') === -1) ? '?' : '&';
                    var player_theme = (theme_is_dark) ? 'dark' : 'light';
                    $this.attr('src',$this.attr('src') + symbol + 'theme=' + player_theme);
                }

                if($this.attr('src').indexOf('showinfo=0') !== -1){
                    console_log('Setting showinfo attribute for YouTube video ' + $this.attr('src'));
                    $this.attr('src',$this.attr('src').replace(/showinfo\=0/,'showinfo=1'));
                }else{
                    if($this.attr('src').indexOf('showinfo=1') === -1){
                        console_log('Adding showinfo attribute to YouTube video ' + $this.attr('src'));
                        var symbol = ($this.attr('src').indexOf('?') === -1) ? '?' : '&';
                        $this.attr('src',$this.attr('src') + symbol + 'showinfo=1');
                    }
                }

                // setTimeout(function(){$this.attr('src',$this.attr('src'))},1000);
            }else if($this.attr('src') && $this.attr('src').toLowerCase().indexOf('twitch.tv') !== -1 && $this.attr('src').toLowerCase().indexOf('autoplay=false') === -1){
                console_log('Removing autoplay attribute from Twitch.TV video ' + $this.attr('src'));
                var video_src = $this.attr('src');
                if(video_src.indexOf('?') !== -1){
                    video_src += '&autoplay=false';
                }else{
                    video_src += '?autoplay=false';
                }
                $this.attr('src',video_src);
            }else if($this.attr('src') && $this.attr('src').toLowerCase().indexOf('autoplay=1') !== -1){
                console_log('Removing autoplay attribute from iframe ' + $this.attr('src'));
                $this.attr('src',$this.attr('src').toLowerCase().replace(/autoplay\=1/,'autoplay=0'));
            }else if($this.attr('src') && $this.attr('src').toLowerCase().indexOf('autoplay=true') !== -1){
                console_log('Removing autoplay attribute from iframe ' + $this.attr('src'));
                $this.attr('src',$this.attr('src').toLowerCase().replace(/autoplay\=true/,'autoplay=false'));
            }
        }catch(e){}
        if(proto == 'https'){
            try{
                if($this.attr('src').indexOf('http://') != -1){
                    console_log('Switching iframe protocol to HTTPS ' + $this.attr('src'));
                    $this.attr('src',$this.attr('src').replace(/http\:\/\//,'https://'));
                }
            }catch(e){}
        }

        $this.attr('sandbox','allow-same-origin allow-scripts allow-popups allow-forms allow-presentation');
    });

    $article_contents_inner.find('video').each(function(){
        var $this = $(this);
        if(!$this.attr('poster') || ($this.attr('poster') && $this.attr('poster').indexOf('9cache') === -1)){
            console_log('Removing autoplay attribute from video tag ' + $this.attr('poster'));
            $this.removeAttr('autoplay');
        }
    });

    if(proto == 'https'){
        $article_contents_inner.find('embed').each(function(){
            try{
                var $this = $(this);
                if($this.attr('src').indexOf('http://www.youtube.com/') != -1 || $this.attr('src').indexOf('http://player.vimeo.com/') != -1){
                    console_log('Switching video protocol to HTTPS ' + $this.attr('src'));
                    $this.attr('src',$this.attr('src').replace(/http\:\/\//,'https://'));
                }
            }catch(e){}
        });
    }

    $article_contents_inner.find('a').each(function(){
        var $this = $(this);
        if(!$this.hasClass('audio_player_controls') && !$this.hasClass('ajaxed')){
            $this.attr('target', '_blank').attr('rel', 'noopener').addClass('underlink').addClass('bluelink');
        }
    });
    var youtube_handled = false;

    // Detect embedded tweets
    // $('#article_contents_inner_' + id).find('blockquote').filter('.twitter-tweet').each(function(){
    $('#article_contents_inner_' + id).find('blockquote').each(function(){
        var tweet_block = $(this);
        $(this).find('a').each(function(){
            if(/twitter\.com\/(.*?)\/status\//.test($(this).attr('href'))){
                var theme_name = theme_is_dark ? 'dark' : 'light';
                var tweet_url = $(this).attr('href');
                var html = '<blockquote class="twitter-tweet" data-dnt="true" data-theme="' + theme_name + '"><p lang="en" dir="ltr">Loading Twitter widget...</p><a href="' + tweet_url + '"></a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>';
                $(tweet_block).html(html);
                return false;
            }
        });
    });

    $('#article_contents_inner_' + id + ', #enclosures_tbl_' + id).find('img').each(function(){
        var $this = $(this);
        if(article_display_images == 1){
            var img_src = $this.attr('src');
            if(img_src){
                var image_widths = [];
                if(img_src.indexOf('staticflickr.com') !== -1){
                    $this.attr('src',img_src.replace(/\_m\.jpg/,'_b.jpg')).width('auto').height('auto');
                }else if(img_src.indexOf('pinimg.com') !== -1){
                    $this.attr('src',img_src.replace(/192x/,'736x')).css('display','block');
                }else if(img_src.indexOf('s.w.org') !== -1){
                    $this.width('1em').height('1em');
                }else if(img_src.indexOf('twimg.com/emoji') !== -1){
                    $this.width('1em').height('1em');
                }else if(img_src.indexOf('ytimg.com') !== -1){
                    try{
                        youtube_handled = true;
                        $this.attr('src',img_src.replace(/\/default\.jpg/,'/hqdefault.jpg')).width(240).height(180);
                        $this.parent().parent().css('border','0px none');
                        if($this.parent().is('a') && $this.parent().attr('href').indexOf('youtube.com/watch') != -1){
                            var href = $this.parent().attr('href');
                            var video_id = href.split('v=')[1];
                            var ampersandPosition = video_id.indexOf('&');
                            if(ampersandPosition != -1){
                                video_id = video_id.substring(0, ampersandPosition);
                            }

                            if(device_type == 'phone'){
                                var player_html = '<iframe id="yt_video_frame" width="100%" height="180" src="//www.youtube.com/embed/' + id + '?definition=hd&default=https://i.ytimg.com/vi/' + id + '/default.jpg&medium=https://i.ytimg.com/vi/' + id + '/mqdefault.jpg&high=https://i.ytimg.com/vi/' + id + '/hqdefault.jpg&standard=https://i.ytimg.com/vi/' + id + '/sddefault.jpg&maxres=https://i.ytimg.com/vi/' + id + '/maxresdefault.jpg&el=preview&cc_load_policy=1&authuser=0&enablejsapi=1&cc3_module=1&html5=1&wmode=window&autoplay=1&origin=' + application_address_secure + '" frameborder="0" allowfullscreen="allowfullscreen" webkitallowfullscreen="webkitAllowFullScreen" mozallowfullscreen="mozallowfullscreen" tabindex="-1" style="margin:0px;padding:0px;display:block;"></iframe>';
                                $('#article_contents_inner_' + id).html(player_html);
                            }else{
                                //$this.parent().attr('href','javascript:void(0);').on('click',function(){ embed_youtube_video(video_id); });
                                $this.parent().parent().on('mouseenter',function(){ hover_youtube_thumb(this,true,video_id); });
                                $this.parent().parent().on('mouseleave',function(){ hover_youtube_thumb(this,false,video_id); });

                                var table = $this.parents('table').eq(0);
                                var $table = $(table);
                                var channel_link = $table.find('tr').eq(0).find('td').eq(2).children().eq(0).children().eq(1);

                                $table.find('tr').eq(0).find('td').eq(2).remove();
                                $table.find('tr').eq(0).find('td').eq(1).children().eq(0).remove();
                                $table.find('tr').eq(0).find('td').eq(1).children().eq(0).attr('style','padding-' + float_left + ':10px;font-size:0.9em');
                                $table.find('tr').eq(1).find('td').eq(0).attr('style','padding-' + float_left + ':10px;');
                                $table.find('tr').eq(1).find('td').eq(0).children().eq(0).attr('style','font-weight:bold;');
                                $table.find('tr').eq(1).find('td').eq(0).children().eq(1).attr('style','');
                                $table.find('tr').eq(1).find('td').eq(0).prepend('<div>' + $(channel_link)[0].outerHTML + '</div>');

                                $table.find('tr').eq(1).find('td').eq(1).remove();
                                $table.parent().attr('style','');
                            }
                        }
                    }catch(e){}
                }
                var image_width = (full_width_images == 1 || view_style == 3 || view_style == 4) ? article_width : content_max_width;
                if(device_type == 'phone'){
                    image_width = article_width;
                }

                // v13 override
                if(full_width_images != 1){
                    image_width = article_width;
                }

                if(!user_agent_is_opera){
                    var max_w = $this.css('max-width');
                    if(skip_inject == false && max_w && max_w != 'none'){
                        max_w = max_w.replace(/px/,'');
                        if(max_w < image_width){
                            return true;
                        }
                    }
                    // if($this.attr('width') && $this.attr('width') < $('#article_contents_inner_' + id).width()){
                    //  return true;
                    // }
                    if(device_type == 'phone'){
                        $this.css('max-width','100%').css('height','auto').css('object-fit','contain');
                    }else{
                        if(parseInt($this.attr('height')) > 0 && parseInt($this.attr('height')) < 64){
                            $this.css('max-width',image_width + 'px').css('object-fit','contain');
                        }else{
                            $this.css('max-width',image_width + 'px').css('height','auto').css('object-fit','contain');
                        }
                    }
                    image_widths.push($this.width());
                }

                var img_src_camo = ($(this).attr('data-original-src')) ? $(this).attr('data-original-src') : img_src;

                if(img_src_camo.indexOf('feeds.feedburner.com') != -1){
                    $this.remove();
                }

                if(ads_enabled && $('#ad_inline_' + id)[0]){
                    if(image_widths.length > 0){
                        var max_width = Math.max.apply(Math, image_widths);
                        if(max_width > $('#article_contents_inner_' + id).width()){
                            if(direction == 'rtl'){
                                $('#ad_inline_' + id).css('margin-right',max_width - $('#article_contents_inner_' + id).width() + 10);
                            }else{
                                $('#ad_inline_' + id).css('margin-left',max_width - $('#article_contents_inner_' + id).width() + 10);
                            }
                        }
                    }
                }
            }

            if(!user_agent_is_opera){
                $('#article_contents_inner_' + id).find('object, video').each(function(){
                    var $this = $(this);
                    var max_w = $this.css('max-width');
                    if(skip_inject == false && max_w && max_w != 'none'){
                        max_w = max_w.replace(/px/,'');
                        if(max_w < article_width){
                            return true;
                        }
                    }
                    // if($this.attr('width') && $this.attr('width') < $('#article_contents_inner_' + id).width()){
                    //  return true;
                    // }
                    $this.css('max-width',article_width + 'px').css('height','auto').css('object-fit','contain');
                    image_widths.push($this.width());
                });
            }

            if(!$article_contents_inner.hasClass('translated')){
                var article_url = get_article_url(id);
                if(article_url && !isie8){
                    for(var i in caption_sites){
                        if(article_url.match(caption_sites[i])){
                            var img_caption = ($this.attr('title')) ? $this.attr('title') : $this.attr('alt');
                            img_caption = safe_tags_replace(img_caption);
                            if(img_caption){
                                var caption_html = '<div class="clearfix"></div><div class="img_caption_wrapper"><div class="img_caption_title">'+_js("Image caption:")+'</div><div class="img_caption_text">' + img_caption.replace(/\n/,'<br/>') + '</div></div>';
                                if($this.parent().is('a')){
                                    $this.parent().after(caption_html);
                                }else{
                                    $this.after(caption_html);
                                }
                            }
                            break;
                        }
                    }
                }
            }

            if(youtube_handled == false){
                $this.on('load',function(){
                    if($this.width() >= image_width){
                        $this.css('width','100%');
                    }
                    if(view_style == 0 || view_style == 1){
                        check_sticky_article_footer(id);
                    }
                    if($this.width() > 120 && $this.height() > 120){
                        $this.addClass('article_block_image');
                        if(pinterest_image_handlers == 1){
                            var tmp_image = $this[0].outerHTML;
                            var chiclet_id = Math.floor((Math.random()*1000000)+1);
                            var container_style = '';
                            if($this.css('float')){
                                container_style = ' style="float:' + $this.css('float') + '"';
                            }
                            var html = '<div class="pin_container" ' + container_style + '><div id="pc_' + chiclet_id + '" class="pin_chiclet pc_first" title="'+_js("Pin this image to Pinterest.")+' '+_js("Right-click to turn-off this feature.")+'"><span class="icon-service_pinterest-16x16"></span></div>' + tmp_image + '</div><br>';
                            $this.replaceWith(html);

                            $('#pc_' + chiclet_id).on('click',function(event){
                                var link = encodeURIComponent(get_article_url(id));
                                window.open('https://www.pinterest.com/pin/create/button/?url=' + link + '&media=' + encodeURIComponent($this.attr('src')) + '&description=' + encodeURIComponent($('#article_title_link_' + id).html()),'popup_' + chiclet_id,'status=0, toolbar=0, scrollbars=0, resizeable=1, menubar=0, location=0, height=' + 320 + 'px, width=' + 760 + 'px');
                                event.returnValue = false;
                                if(!isie8){ event.stopPropagation(); }
                                return false;
                            }).on('contextmenu',function(event){
                                xconfirm('<b>'+_js("Turn-off Pinterest button?")+'</b><br><br>'+_js("You can turn it on again from Preferences -> Interface -> Article contents."),'cancel_pinterest();');
                                if(!isie8){ event.stopPropagation(); }
                                return false;
                            });
                        }
                    }
                    // setTimeout(function(){
                    //     check_annotations_markers(id);
                    // },1);
                });
            }
            // Detect proxy errors
            // $this.one('error', function(){
            //     if($(this).attr('src').indexOf('https://www.inoreader.com/camo') === 0 && $(this).data('original-src') && $(this).data('original-src').indexOf('https://') == 0){
            //         $(this).attr('src',$(this).data('original-src'));
            //     }
            // }); 

            // Completely remove referrer to circumvent hot-linking protections
            $this.attr('referrerpolicy', 'no-referrer');
        }else{
            $this.remove();
        }
    });

    if(embed_enclosures == 1 && article_display_images == 1){
        var found_images = [];
        $('#article_contents_inner_' + id).find('img').each(function(){
            var src = ($(this).attr('data-original-src')) ? $(this).attr('data-original-src') : $(this).attr('src') ;
            if(src){
                var index = src.indexOf('?');
                if(index != -1){
                    src = src.substring(0, index);
                }
                found_images.push(src.replace(/http\:\/\//,'https://'));
                try{
                    found_images.push(decodeURIComponent(src.replace(/http\:\/\//,'https://')));
                }catch(e){}
            }
        });

        var check_for_empty_enclosures = false;

        $('#enclosures_tbl_' + id).find('a').each(function(){
            var url = $(this).attr('href');
            var proxy_url = $(this).data('proxy-url');
            var type = $(this).data('type');
            if(url){
                var url_split = url.split("?")[0].split(/\./);
                if(url_split){
                    var extension = url_split.pop().toLowerCase();
                    if(extension == 'jpg' || extension == 'jpeg' || extension == 'gif' || extension == 'png' || type.indexOf('image') !== -1){
                        if(found_images.length == 0){
                            var img_style = '';
                            if(device_type == 'phone'){
                                img_style = 'style="max-width:100%;height:auto;object-fit:contain"';
                            }

                            $('#article_contents_inner_' + id).prepend('<p><a href="' + encodeURI(url) + '" data-proxy-url="' + encodeURI(proxy_url) + '" target="_blank"><img ' + img_style + ' src="' + encodeURI(proxy_url) + '"></a></p>');
                            $(this).parent().remove();
                            check_for_empty_enclosures = true;
                        }else{
                            if(!in_array(url.split("?")[0].replace(/http\:\/\//,'https://'),found_images)){
                                var img_style = '';
                                if(device_type == 'phone'){
                                    img_style = 'style="max-width:100%;height:auto;object-fit:contain"';
                                }
                                var html = '<a href="' + encodeURI(url) + '" data-proxy-url="' + encodeURI(proxy_url) + '" target="_blank"><img ' + img_style + ' src="' + encodeURI(proxy_url) + '"></a>';
                                $(this).parent().html(html);
                            }else{
                                $(this).parent().remove();
                                check_for_empty_enclosures = true;
                            }
                        }
                    }
                }
            }
        });


        if(check_for_empty_enclosures){
            var encs = $('#enclosures_tbl_' + id).find('a');
            if(!encs[0]){
                $('#enclosures_tbl_' + id).remove();
            }
        }
    }

    $article_contents_inner.find('pre').each(function(){
        $(this).css('max-width',article_width + 'px').css('overflow','auto');

    });

    $article_contents_inner.find('link').each(function(){
        if($(this).attr('rel') == 'stylesheet'){
            $(this).remove();
        }
    });

    $article_contents_inner.find('audio').each(function(){
        if($(this).attr('autoplay') == 'autoplay' || $(this).attr('autoplay') == 'true' || $(this).attr('autoplay') == true){
            $(this).attr('autoplay','false');
            try{
                $(this)[0].pause();
            }catch(e){}
        }
    });

    $article_contents_inner.find('script').remove();

    $('#article_' + id)
        .find('a').attr('tabindex','-1')
        .find('button').attr('tabindex','-1')
        .find('iframe').attr('tabindex','-1')
        .find('img').attr('tabindex','-1');
    apply_highlighters(id);

    var inner_content = $.trim($article_contents_inner.html());
    if(inner_content.indexOf('<p>') === 0){
        $article_contents_inner.find('p').eq(0).addClass('p_no_top');
    }
    // try{
    //     if(inner_content.endsWith('</p>') === 0){
    //         $article_contents_inner.find('p').last().addClass('p_no_bottom');
    //     }
    // }catch(e){
    // }

    var el = document.querySelectorAll('h2[data-inoreader-enrich]');
    if(el.length > 0){
        for(var i = 0; i < el.length; i++){
            var data = el[i].dataset.inoreaderEnrich;
            var data_spl = data.split(/,/);
            var html = '';
            if(data_spl[0] == 'change_h1'){
                html = '<div class="diff_container"> \
                    <div class="diff_heading"> \
                        ' + application_name + ' has detected a change in the area you selected. <a class="bluelink" target="_blank" rel="noopener" href="' + get_article_url(id) + '">Visit site</a> \
                    </div> \
                    <div class="diff_data"> \
                        <div class="diff_data_icon"> \
                            <img src="/images/change-detected-' + get_theme_name() + '.svg"> \
                        </div> \
                        <div class="diff_data_data"> \
                            <div class="diff_data_diff"> \
                                ' + data_spl[1] + '% \
                            </div> \
                            <div class="diff_data_difftext graylink"> \
                                Difference \
                            </div> \
                        </div> \
                    </div> \
                </div>';
            }else if(data_spl[0] == 'change_h1_text'){
                html = '<div class="diff_container diff_heading"><img class="diff_icon_text" src="/images/text-change-detected-' + get_theme_name() + '.svg"> ' + el[i].innerHTML + '</div>';
            }else if(data_spl[0] == 'initial_article_heading'){
                html = '<div class="diff_container diff_heading">' + el[i].innerHTML + '</div>';
            }
            if(html != ''){
                el[i].outerHTML = html;
            }
        }
    }

    $('#article_contents_inner_' + id).find('span[data-inoreader-enrich]').each(function(){
        var data = $(this).data('inoreader-enrich');
        if(data == 'text_added'){
            $(this).addClass('diff_data_text_added');
        }else if(data == 'text_removed'){
            $(this).addClass('diff_data_text_removed');
        }
    });

    var article_title = $('#article_title_link_' + id).text();
    if(article_title.indexOf('.') !== -1 && article_title.indexOf('<wbr') === -1){
        $('a[id="article_title_link_' + id + '"]').each(function(){
            $(this).html(article_title.replace(/\./g,'.<wbr />'));
        });
    }

    setTimeout(function(){
        $('#list_menu').remove();
        $('#list_menu_article').remove();
        check_sticky_article_footer(id);
        ino && ino.checkMediaAdded(id);
    },1);
}

if('IntersectionObserver' in window){
    observer = new IntersectionObserver(function(e){
        e[0].target.classList.toggle('article_footer_sticky_border', e[0].intersectionRatio < 1);
    },{threshold: [1]});
}

if('ResizeObserver' in window){
    resize_observer = new ResizeObserver(function(e){
        check_annotations_markers(e[0].target.id.replace(/article_contents_inner_/,''));
    });
}


function check_sticky_article_footer(id){
    if(view_style == 2 || view_style == 3 || view_style == 4){
        return;
    }
    var $placeholder = $('#article_footer_placeholder_middle_' + id);

    if($placeholder.hasClass('article_footer_placeholder_middle_sticky')){
        return;
    }

    if($('#article_' + id).height() > $('#reader_pane').height() && $placeholder.hasClass('footerized')){
        $placeholder.addClass('article_footer_placeholder_middle_sticky');
        if(observer){
           observer.observe($placeholder[0]);
        }
    }
}

function apply_highlighters_all(){
    $('#reader_pane').find('.ar').not('.hidden').each(function(){
        if($(this).hasClass('ar_showed')){
            sanitize_article($(this).data('aid'));
        }
        apply_highlighters($(this).data('aid'),true);
    });
}

function apply_highlighters(id,only_headlines){
    if(isie8){
        try{
            apply_highlighters_do(id,only_headlines);
        }catch(e){}
    }else{
        apply_highlighters_do(id,only_headlines);
    }
}

function apply_highlighters_do(id,only_headlines){
    if(highlighters.length == 0){
        return;
    }


    if(view_style != 1){
        if($('#article_title_link_' + id).data('original_content')){
            $(this).html($(this).data('original_content'));
        }
        $('#article_title_link_' + id).data('original_content',$('#article_title_link_' + id).html());

        if($('#at_' + id).data('original_content')){
            $(this).html($(this).data('original_content'));
        }
        $('#at_' + id).data('original_content',$('#at_' + id).html());

        if($('#article_short_contents_' + id).data('original_content')){
            $(this).html($(this).data('original_content'));
        }
        $('#article_short_contents_' + id).data('original_content',$('#article_short_contents_' + id).html());
    }

    if(view_style == 0){
        if($('#article_' + id).data('ft') == 'twitter'){
            if($('#aft_' + id).data('original_content')){
                $(this).html($(this).data('original_content'));
            }
            $('#aft_' + id).data('original_content',$('#aft_' + id).html());
        }
    }
    if(only_headlines){
        if(view_style == 4){
            var elements = '#article_short_contents_' + id + ', #burl_' + id;
        }else{
            if(view_style == 0 || view_style == 2){
                var elements = '#article_short_contents_' + id + ', #article_title_link_inline_' + id;
            }else{
                var elements = '#article_short_contents_' + id + ', #article_title_link_' + id;
            }
        }
    }else{
        if(view_style == 0){
            var elements = '#article_contents_inner_' + id + ', #article_title_link_' + id;
        }else if(view_style == 1){
            var elements = '#article_contents_inner_' + id + ', #article_title_link_' + id;
        }else if(view_style == 2){
            var elements = '#article_contents_inner_' + id + ', #article_title_link_' + id;
        }else if(view_style == 3){
            var elements = '#article_contents_inner_' + id + ', #article_title_link_' + id + ', #article_short_contents_' + id;
        }else if(view_style == 4){
            var elements = '#article_contents_inner_' + id + ', #article_title_link_' + id + ', #article_short_contents_' + id;
        }else{
            var elements = '#article_contents_inner_' + id + ', #article_title_link_' + id + ', #article_short_contents_' + id;
        }
    }

    //// Non-jQuery version
    // var selectors = elements.split(',');
    // for(var s in selectors){
    //     var mark_instance = new Mark(document.querySelector($.trim(selectors[s])));
    //     for(var i in highlighters){
    //         var accuracy = 'partially';
    //         mark_instance.mark(highlighters[i].term, {element: 'span', className: 'highlighter_' + highlighters[i].color_id, separateWordSearch: false, accuracy: accuracy, caseSensitive: (highlighters[i].case_sensitive == 1) ? true : false });
    //     }
    // }

    // jQuery version

    for(var i in highlighters){
        var accuracy = 'partially';
        if(/^\w+$/.test(highlighters[i].term)){
            accuracy = { 'value': 'exactly', 'limiters': [',', '.', '!', '?', ':', ';', '@', '#', '%', '$', '&', '-', '+', '=', '/', '\\', '[', ']', '"', '\'', '(', ')', '<', '>', '‘', '’', '“', '”' ] };
        }
        $(elements).mark(highlighters[i].term, {element: 'span', className: 'highlighter_' + highlighters[i].color_id, separateWordSearch: false, accuracy: accuracy, caseSensitive: (highlighters[i].case_sensitive == 1) ? true : false });
    }

    // Old highlighters
    // for(var i in highlighters){
    //     var words_only = false;
    //     if(/^\w+$/.test(highlighters[i].term)){
    //         words_only = true;
    //     }
    //     $(elements).highlight(highlighters[i].term, { wordsOnly: words_only, caseSensitive: (highlighters[i].case_sensitive == 1) ? true : false, className: 'highlighter_' + highlighters[i].color_id });
    // }
}

function embed_article(id,url){
    // No moar iframes
    return;
    if(!url){
        url = get_article_url(id);
    }

    if($('#article_contents_inner_' + id).hasClass('translated')){
        back_to_origin_lang(id);
    }

    if($('#article_contents_inner_' + id).hasClass('mobilized')){
        $('#mobilize_button_' + id).addClass('icon-button-mobilize-empty').removeClass('icon-button-mobilize-full').removeClass('article_title_buttons_active');
        $('#article_contents_inner_' + id).removeClass('mobilized');
        if(user_access[access_pro]){
            $('#article_' + id).data('mobilized',0);
        }
    }

    if($('#article_contents_inner_' + id).hasClass('embeded_article')){
        sanitize_article(id);
        build_article_annotations(id);
        $('#embed_button_' + id).removeClass('article_title_buttons_active');
        if(full_width == 0){
            $('#article_contents_inner_' + id).css('max-width','650px');
        }else if(full_width == 1){
            $('#article_contents_inner_' + id).css('max-width','100%');
        }
    }else{
        if(full_width == 0){
            $('#article_contents_inner_' + id).css('max-width','100%');
        }
        var content = '<iframe style="width:100%;height:400px;" id="iframe_embed_' + id + '" src="' + url.replace(/.*?:\/\//g, "//") + '" class="iframe_embed_article" sandbox=\"allow-popups allow-pointer-lock allow-same-origin allow-forms allow-scripts\"></iframe>';
        $('#article_contents_inner_' + id).html(content).addClass('embeded_article');
        $('#embed_button_' + id).addClass('article_title_buttons_active');
        if(navigator.userAgent.toLowerCase().indexOf('firefox') < 0){
            setTimeout(function(){
                if($('#iframe_embed_' + id).contents().length == 1){
                    xconfirm(_js("The remote Web page denied the embedding request")+'. '+_js("Do you want to open it in a new window")+'?','window.open("' + url + '")');
                    //embed_article(id,url);
                }
            },5000);
        }
        resize();
    }
}

function toggle_subscriptions_options_menu(){
    $('#subscriptions_options_menu').toggle();
    fix_subscriptions_options_menu();
}

function open_subscriptions_options_menu(){
    close_opened_menu();
    $('#subscriptions_options_menu').show();
    fix_subscriptions_options_menu();
    opened_menu = 'subscriptions_options';
}

function check_new_update_subscriptions_radio_buttons(){
    if(max_unread == 0){
        $('.sas').hide();
        $('#subscriptions_check_hide_empty_tags').hide();
        $('#subscriptions_check_hide_empty_tags_line').hide();
    }else{
        $('.sas').show();
        menu_checkbox_uncheck('#subscriptions_radio_all');
        menu_checkbox_uncheck('#subscriptions_radio_dim');
        menu_checkbox_uncheck('#subscriptions_radio_updated');

        if(hide_read_feeds == 1){
            menu_checkbox_check('#subscriptions_radio_updated');
            $('#subscriptions_check_hide_empty_tags').show();
            $('#subscriptions_check_hide_empty_tags_line').show();
        }else if(hide_read_feeds == 2){
            menu_checkbox_check('#subscriptions_radio_dim');
            $('#subscriptions_check_hide_empty_tags').hide();
            $('#subscriptions_check_hide_empty_tags_line').hide();
        }else{
            menu_checkbox_check('#subscriptions_radio_all');
            $('#subscriptions_check_hide_empty_tags').hide();
            $('#subscriptions_check_hide_empty_tags_line').hide();
        }
    }
}

function check_tree_ordering_radio_buttons(){
    menu_checkbox_uncheck('#subscriptions_radio_tree_ordering_0');
    menu_checkbox_uncheck('#subscriptions_radio_tree_ordering_1');
    if(tree_ordering == 1){
        menu_checkbox_check('#subscriptions_radio_tree_ordering_1');
    }else{
        menu_checkbox_check('#subscriptions_radio_tree_ordering_0');
    }
}

var dialog_resizer_timer = null;
var dialog_heights = {};
function check_for_dialogs(dialog_type,action){
    var dialog_count = 0;

    $('.inno_dialog_modal').each(function(){
        dialog_count++;
    });

    if($('#article_dialog')[0] && dialog_count > 0){
        dialog_count--;
    }

    if($('#keyboard_shortcuts_dialog')[0] && dialog_count > 0){
        dialog_count--;
    }

    if($('#bottom_survey_dialog')[0] && dialog_count > 0){
        dialog_count--;
    }

    if(ul == 1){
        if(dialog_count == 0){
            bind_hotkeys();
        }else{
            unbind_hotkeys();
        }
        if((dialog_type == 'preferences_dialog' || dialog_type == 'feed_info_dialog') && action == 'close'){
            if(tree_is_dirty){
                build_tree();
                tree_is_dirty = false;
            }
        }
        if(dialog_type == 'feed_info_dialog' && action == 'close' && $('.subscription_checks')[0]){
            if(subscriptions_folders_modified){
                filter_preferences_subscriptions();
            }
        }
        subscriptions_folders_modified = false;
    }
}



function fix_quick_options_width(){
    $('.quick_options_link').on('mouseenter', function () {
        var $this = $(this);
        if(this.offsetWidth < this.scrollWidth && !$this.attr('title')){
            $this.attr('title', $.trim($this.text()));
        }
    });
}

function fix_ellipsis_caption(selector){
    $(selector).off('mouseenter').on('mouseenter', function () {
        var $this = $(this);
        if(this.offsetWidth < this.scrollWidth && !$this.attr('title')){
            $this.attr('title', $.trim($this.text()));
        }else{
            $this.attr('title', null);
        }
    });
}

function fix_am_pos(hash,tile){
    if(tile == true){
        div_prefix = '#amt_';
    }else{
        div_prefix = '#am_';
    }

    var top_offset = 48;
    $(div_prefix + hash).css('top','18px');
    var tree_h = $('#tree_pane').height();
    var am_h = $(div_prefix + hash).height();
    var am_top = $(div_prefix + hash).offset().top;
    var parent_top = $(div_prefix + hash).parent().offset().top;
    var am_bottom = am_top + am_h - tree_h - 24;
    if(am_bottom > 0){
        $(div_prefix + hash).css('top',(parseInt(am_h)+12)*-1 + 'px');
    }

    am_top = $(div_prefix + hash).offset().top - $('#subscriptions_buttons').height();

    if(am_top < 0){
        $(div_prefix + hash).css('max-height',parseInt(tree_h) - $('#subscriptions_buttons').height() + 'px');
        $(div_prefix + hash).css('top',parseInt(parent_top-top_offset)*-1 + 'px');
    }
    fix_quick_options_width();
}

function fix_subscriptions_options_menu(){
    var pos = $('#subscription_options_tick').offset();
    $('#subscriptions_options_menu').css('top',pos.top);
    if(direction == 'ltr'){
        $('#subscriptions_options_menu').css('left',pos.left + $('#subscription_options_tick').outerWidth() + 'px');
    }else{
        $('#subscriptions_options_menu').css('right',$(window).width() - (pos.left) + 'px');
    }

    fix_menu_position('#subscriptions_options_menu');
    return;
}

function fix_share_menu_pos(id){
    var bottom = $('#reader_pane').height() - ($('#am_more_menu_' + id).offset().top + $('#am_more_menu_' + id).height());
    if(bottom < 0){
        $('#am_more_menu_' + id).css('top',parseInt($('#am_more_menu_' + id).height()+12)*-1 + 'px');
    }
    fix_quick_options_width();
}

function fix_article_options_menu(div,context,recurr){
    $('#' + div).css('top','auto');
    // 30 is the footer height. 10px for comfortable padding.
    var bottom = $('#reader_pane').height() - ($('#' + div).offset().top + $('#' + div).height()) + 30 - 10;

    if(bottom < 0){
        var top_offset = 1;
        if(context == 'social_media_options'){
            top_offset = 12;
        }
        $('#' + div).css('top',parseInt(bottom) + 'px');
    }else{
        if(context == 'social_media_options'){
            var menu_bottom = $('#' + div).position().top + $('#' + div).height();
            var article_height = $('#' + div).parents('.ar').eq(0).outerHeight();
            bottom = menu_bottom - article_height;
            if(bottom < 0){
                $('#' + div).css('top',($('#' + div).height()/2)*-1 + 'px');
            }
        }
    }



    var top = $('#' + div).offset().top;
    if(top < 0){
        $('#' + div).css('overflow','auto');
        $('#' + div).css('max-height',$('#reader_pane').height() - 30);
        if(!recurr){
            fix_article_options_menu(div,context,true);
        }
    }
}

function pocket_article(id,action){
    if(!action){
        action = false;
    }
    //do_loading();
    $('#pocket_options_' + id).html('<div class="loader loader_menu"></div>');
    if($('#article_' + id).data('pocket') == 1 && !action){
        $('#pocket_button_' + id).removeClass('article_footer_buttons_active');
        $('.article-share-pocket-' + id).removeClass('article_footer_buttons_active');
    }else{
        $('#pocket_button_' + id).addClass('article_footer_buttons_active');
        $('.article-share-pocket-' + id).addClass('article_footer_buttons_active');
        if(mixpanel_enabled && mixpanel){
            mixpanel.track('saveto', {'Article ID': id ,'Network': 'Pocket'});
        }
    }
    xajax_pocket_article(id,action);
}
var article_tags_contents = [];

function edit_article_tags(id){
    do_loading();
    if(!$('#article_tags_' + id).is(':visible')){
        $('#article_tags_' + id).show();
    }
    article_tags_contents[id] = $('#article_tags_' + id).html();
    var tags = JSON.parse($('#article_' + id).attr('data-tags'));
    xajax_edit_article_tags(id,tags);
}

var subscription_folders_content = [];

function edit_subscription_folders(id,tags,context){
    do_loading();
    if(context == 'subscriptions_list'){
        subscription_folders_content[id] = $('#subscription_folders_inline_' + id).html();
    }else{
        subscription_folders_content[id] = $('#subscription_folders_' + id).html();
    }
    xajax_edit_subscription_folders(id,tags,context);
}

function instapaper_article(id, action, user_id, check_quota, instapaper_folder_id){
    if(!action){
        action = false;
    }
    if(!user_id){
        user_id = false;
    }
    if(!check_quota){
        check_quota = false;
    }
    if(!instapaper_folder_id){
        instapaper_folder_id = false;
    }
    //do_loading();
    $('#instapaper_options_' + id).hide().html('<div class="loader loader_menu"></div>');
    if($('#article_' + id).data('instapaper') == 1 && !action){
        $('#instapaper_button_' + id).removeClass('article_footer_buttons_active');
        $('.article-share-instapaper-' + id).removeClass('article_footer_buttons_active');
    }else{
        $('#instapaper_button_' + id).addClass('article_footer_buttons_active');
        $('.article-share-instapaper-' + id).addClass('article_footer_buttons_active');
        if(mixpanel_enabled && mixpanel){
            mixpanel.track('saveto', {'Article ID': id ,'Network': 'Instapaper'});
        }
    }
    xajax_instapaper_article(id,action,user_id,check_quota,instapaper_folder_id);
}

function evernote_article(id,action,notebook_id,notebook_name){
    if(!action){
        action = false;
    }
    if(notebook_id == 'new'){
        do_loading(_js("Saving")+'...');
    }
    $('#evernote_options_' + id).hide().html('<div class="loader loader_menu"></div>');
    if($('#article_' + id).data('evernote') == 1 && !notebook_id && !action){
        $('#evernote_button_' + id).removeClass('article_footer_buttons_active');
        $('.article-share-evernote-' + id).removeClass('article_footer_buttons_active');
    }else{
        $('#evernote_button_' + id).addClass('article_footer_buttons_active');
        $('.article-share-evernote-' + id).addClass('article_footer_buttons_active');
      if(mixpanel_enabled && mixpanel){
            mixpanel.track('saveto', {'Article ID': id ,'Network': 'Evernote'});
        }
    }
    var content = $('#article_contents_inner_' + id).html();
    xajax_evernote_article(id,action,notebook_id,notebook_name,content);
}

function evernote_selection(text,title,url){
    do_loading(_js("Saving to Evernote..."));
    xajax_evernote_selection(text,title,url);
}

function onenote_article(id,action,section_name){
    if(!action){
        action = false;
    }

    $('#onenote_options_' + id).hide().html('<div class="loader loader_menu"></div>');
    if($('#article_' + id).data('onenote') == 1 && !section_name && !action){
        $('#onenote_button_' + id).removeClass('article_footer_buttons_active');
        $('.article-share-onenote-' + id).removeClass('article_footer_buttons_active');
    }else{
        $('#onenote_button_' + id).addClass('article_footer_buttons_active');
        $('.article-share-onenote-' + id).addClass('article_footer_buttons_active');

        if(mixpanel_enabled && mixpanel){
            mixpanel.track('saveto', {'Article ID': id ,'Network': 'OneNote'});
        }
    }
    var content = $('#article_contents_inner_' + id).html();
    xajax_onenote_article(id,action,section_name,content);
}

function dropbox_article(id,action,save_type){
    if(!action){
        action = false;
    }

    $('#dropbox_options_' + id).hide().html('<div class="loader loader_menu"></div>');
    if($('#article_' + id).data('dropbox') == 1 && !action){
        $('#dropbox_button_' + id).removeClass('article_footer_buttons_active');
        $('.article-share-dropbox-' + id).removeClass('article_footer_buttons_active');
    }else{
        $('#dropbox_button_' + id).addClass('article_footer_buttons_active');
        $('.article-share-dropbox-' + id).addClass('article_footer_buttons_active');
        if(mixpanel_enabled && mixpanel){
            mixpanel.track('saveto', {'Article ID': id ,'Network': 'Dropbox'});
        }
    }
    var content = $('#article_contents_inner_' + id).html();
    xajax_dropbox_article(id,action,save_type,content);
}

function gdrive_article(id,action,save_type){
    if(!action){
        action = false;
    }

    $('#gdrive_options_' + id).hide().html('<center><img src="/images/loader-horizontal.gif"></center>');
    if($('#article_' + id).data('gdrive') == 1 && !action){
        $('#gdrive_button_' + id).removeClass('article_footer_buttons_active');
        $('.article-share-gdrive-' + id).removeClass('article_footer_buttons_active');
    }else{
        $('#gdrive_button_' + id).addClass('article_footer_buttons_active');
        $('.article-share-gdrive-' + id).addClass('article_footer_buttons_active');
        if(mixpanel_enabled && mixpanel){
            mixpanel.track('saveto', {'Article ID': id ,'Network': 'Google Drive'});
        }
    }
    var content = $('#article_contents_inner_' + id).html();
    xajax_gdrive_article(id,action,save_type,content);
}

function dismiss_popularity_popup(){
    $("#popularity_div").fadeOut();
    createCookie('popularity_div_dismissed',1,31);
}

function dismiss_upgrade_popup(){
    $("#upgrade_div").fadeOut();
    createCookie('upgrade_div_dismissed',1,31);
}

function check_user_pref_selects(){
    if($('#preference_title_counter').is(':checked')){
        $('#preference_favicon_counter').attr('disabled',false);
    }else{
        $('#preference_favicon_counter').attr('disabled',true);
    }
    if($('#preference_articles_filter_enabled').is(':checked')){
        $('#preference_articles_filter').show();
        $('#preference_articles_filter_notification_tr').show();
    }else{
        $('#preference_articles_filter').hide();
        $('#preference_articles_filter_notification_tr').hide();
    }

    if($('#preference_hide_read_feeds').val() == 1){
        $('#hide_read_feeds_hides_tags_setting').show();
    }else{
        $('#hide_read_feeds_hides_tags_setting').hide();
    }
}

function filter_broadcast_channels(val){
    if(val){
        $('.team_broadcast_channel').each(function(){
            if($(this).find('label').eq(0).text().toLowerCase().indexOf(val.toLowerCase()) === -1){
                $(this).hide();
            }else{
                $(this).show();
            }
        });
    }else{
        $('.team_broadcast_channel').show();
    }
}

function check_broadcast_teams(){
    $('#broadcast_channel_select_all').removeClass('partial');

    var total = $('.broadcast_channel_select').length;
    var selected = $('.broadcast_channel_select:checked').length;
    if(selected == 0){
        $('#broadcast_channel_select_all+label').html(_js('Select all'));
        disable_dialog_button('broadcast_dialog', 0);
        $('#broadcast_channel_select_all').prop('checked', false);
    }else{
        enable_dialog_button('broadcast_dialog', 0);
        $('#broadcast_channel_select_all+label').html(__js('%s selected', '%s selected', selected));

        $('#broadcast_channel_select_all').prop('checked', true);
        if(selected < total){
            $('#broadcast_channel_select_all').addClass('partial');
        }
    }
}

function set_broadcast_team_all(checked){
    if(checked){
        $('.broadcast_channel_select').prop('checked', true);

        var broadcast_teams_array = [];
        for(var i in joined_teams){
            broadcast_teams_array.push(joined_teams[i].id.toString());
        }

        broadcast_teams_array = [...new Set(broadcast_teams_array)];
        broadcast_teams = broadcast_teams_array.join(',');
    }else{
        $('.broadcast_channel_select').prop('checked', false);
        broadcast_teams = '';
    }

    check_broadcast_teams();
}

function broadcast_article(id,post_id,only_team){
    if(user_is_guest){
        return guest_alert();
    }

    var params = {};
    var broadcast_data = $('#article_' + id).data('bdata');
    var current_note = (broadcast_data && broadcast_data.note) ? broadcast_data.note : '';
    params.article_id = id;
    params.post_id = post_id;


    if(broadcast_notes == 1 || joined_teams.length > 0){
        if(joined_teams.length > 0){
            var broadcast_teams_array = [];
            if(broadcast_teams != ''){
                broadcast_teams_array = array_filter(broadcast_teams.split(','));
            }
            params.content = '';
            params.content += '<div class="team_broadcast_title">' + _js('Share with your team') + '</div>';
            params.content += '<div class="team_broadcast_filter"><input type="text" placeholder="' + _js('Search for channel') + '" onkeyup="filter_broadcast_channels(this.value)"></div>';

            params.content += '<div class="team_broadcast_channel flex">';
            params.content += '<div><input type="checkbox" id="broadcast_channel_select_all" onchange="set_broadcast_team_all(this.checked);check_broadcast_teams()"><label for="broadcast_channel_select_all">' + _js('Select all') + '</label></div>';
            params.content += '</div>';

            params.content += '<div class="team_broadcast_channel_list">';

            for(var i in joined_teams){
                var checked = in_array(joined_teams[i].id,broadcast_teams_array) ? 'checked="checked"' : '';
                params.content += '<div class="team_broadcast_channel flex">';
                params.content += '<div><input type="checkbox" class="broadcast_channel_select" id="broadcast_channel_select_' + joined_teams[i].id +'" ' + checked + ' onchange="set_broadcast_team(' + joined_teams[i].id + ',this.checked);check_broadcast_teams()"><label for="broadcast_channel_select_' + joined_teams[i].id +'"><img class="team_broadcast_channel_avatar" src="/cdn/avatar/?n=' + encodeURIComponent(joined_teams[i].name) + '=32&c=' + joined_teams[i].color.replace(/\#/,'') + '"> ' + joined_teams[i].name + '</label></div>';
                params.content += '</div>';
            }

            params.content += '</div>';
            params.content += '<div class="team_broadcast_textarea"><textarea id="broadcast_note" style="width:100%;height:80px;" placeholder="'+_js("Share your thoughts...")+'"  onfocus="bind_comment_autocomplete(this,' + id + ')" onblur="unbind_comment_autocomplete(this)">' + current_note + '</textarea></div>';

            dialog('broadcast_dialog',params);
            $('#broadcast_note').focus().select();

            if(Array.isArray(id)){
                var broadcasted = 0;
            }else{
                var broadcasted = $('#article_' + id).data('brd');
            }

            if(broadcasted){
                $('#broadcast_dialog_buttonbar').find('button').eq(0).html(_js('Save changes'));
                $('#broadcast_dialog_buttonbar').prepend('<div style="position:relative;top:2px;" class="flex_vertical_center"><div><button onclick="broadcast_article_undo(' + id + ')" class="redbutton redbutton_outline tallbutton">' + _js('Stop broadcast') + '</button></div></div>');
            }
            check_broadcast_teams();
        }else{
            if(Array.isArray(id)){
                var broadcasted = 0;
            }else{
                var broadcasted = $('#article_' + id).data('brd');
            }

            if(only_team){
                params.title = _js('Share with your team');
            }else{
                if(broadcasted){
                    if(joined_teams.length > 0){
                        params.title = _js("Edit broadcast");
                    }else{
                        xconfirm(_js("Stop broadcasting article?"),'broadcast_article_undo(' + id + ');');
                        return;
                    }
                }else{
                    params.title = _js("Broadcast article");
                }
            }
            params.content = '<textarea id="broadcast_note" style="width:100%;height:80px;" placeholder="'+_js("Share your thoughts...")+'"  onfocus="bind_comment_autocomplete(this,' + id + ')" onblur="unbind_comment_autocomplete(this)">' + current_note + '</textarea>';
            params.content += '<div class="graylink" style="font-size:12px;margin-top:5px">';
            params.content += _js("Mention users by typing @ and their name.");
            params.content += '</div>';

            dialog('broadcast_dialog',params);

            set_broadcast_options(id,only_team);
            $('#broadcast_note').focus().select();
        }
    }else{
        var broadcasted = $('#article_' + id).data('brd');

        if(broadcasted == 1){
            xconfirm(_js("Stop broadcasting article?"),'broadcast_article_undo(' + id + ');');
        }else{
            if(Array.isArray(id)){
                for(var i in id){
                    $('#article_' + id[i]).data('brd',1);
                    xajax_broadcast_article(id[i],'',post_id,broadcast_privacy,broadcast_teams,1);
                    build_article_social_bar(id[i]);
                    check_broadcast_icon(id[i]);
                }
            }else{
                $('#article_' + id).data('brd',1);
                build_article_social_bar(id);
                check_broadcast_icon(id);
                xajax_broadcast_article(id,'',post_id,broadcast_privacy,broadcast_teams,1);
            }

        }
    }
    if(!Array.isArray(id)){
        check_broadcast_icon(id);
    }
}

function broadcast_article_do(id,note,post_id){
    if(Array.isArray(id)){
        for(var i in id){
            xajax_broadcast_article(id[i],note,post_id,broadcast_privacy,broadcast_teams,1);
            add_score_queue(id[i],'broadcast');
            $('#article_' + id[i]).data('brd',1);
            build_article_social_bar(id[i]);
            check_broadcast_icon(id[i]);
        }
    }else{
        xajax_broadcast_article(id,note,post_id,broadcast_privacy,broadcast_teams,1);
        add_score_queue(id,'broadcast');
        $('#article_' + id).data('brd',1);
        build_article_social_bar(id);
        check_broadcast_icon(id);
    }
    inno_dialog_close('broadcast_dialog');

}

function broadcast_article_undo(id){
    do_loading();

    if(Array.isArray(id)){
        for(var i in id){
            $('#article_' + id[i]).data('brd',0);
            $('#article_' + id[i]).data('bdata','null');
            xajax_broadcast_article(id[i],null,null,null,null,0);
            build_article_social_bar(id[i]);
            check_broadcast_icon(id[i]);
        }
        if(is_article_section()){
            reload_articles();
        }
    }else{
        $('#article_' + id).data('brd',0);
        $('#article_' + id).data('bdata','null');
        xajax_broadcast_article(id,null,null,null,null,0);
        build_article_social_bar(id);
        check_broadcast_icon(id);
    }
    inno_dialog_close('broadcast_dialog');
}

function delete_application(id){
    var html = '<div style=font-size:17px;font-weight:bold;>' + _js("Are you sure")+'?</div><div class="alert_state state_block delete_account_alert"><span class="icon16 icon-exclamation-mark"></span>'+_js("This cannot be undone")+'!</div>'+_js("Enter your Inoreader password to continue")+':<br><br><input style="width:236px;" autocomplete="new-password" type=password id=dev_del_app_password onkeypress="if(catch_enter(event))delete_application_do(' + id + ');\"></div>';

    xconfirm(html,'delete_application_do(' + id + ')');
    $('#xconfirm_wrapper').width(329);
    $('#dev_del_app_password').focus();
}

function delete_application_do(id){
    var password = $('#dev_del_app_password').val();
    if(!password){
        xalert(_js("Please enter password")+'!');
        return;
    }
    inno_dialog_close('xconfirm');
    xajax_delete_application(id,password);
}

function delete_article(id){
    xconfirm(_js("Delete article?"),'delete_article_do(' + id + ');');
    inno_dialog_close('broadcast_dialog');
}

function delete_article_do(id){
    xajax_delete_article(id);
    $('#article_' + id).fadeOut('fast', function(){$(this).remove();});
    if($('#article_dialog')[0]){
        inno_dialog_close('article_dialog');
    }
    if(view_style == 2 && get_aid() == id){
        if($('#article_full_contents_' + id)[0]){
            $('#article_full_contents_' + id).fadeOut('fast', function(){
                $(this).remove();
                $('#three_way_contents').html('<div id="no_article_selected" class="reader_pane_message">'+_js("No article selected")+'</div>');
                resize();
            });
        }
    }
}

function get_aid(){
    if($('#article_dialog')[0] && $('#article_dialog').is(':visible')){
        var content_id = $('#article_dialog').find('.article_full_contents').eq(0).attr('id');
        if(content_id){
            return content_id.replace(/article_full_contents_/,'');
        }
    }

    if($('#reader_pane').find('.article_current')[0]){
        return $('#reader_pane').find('.article_current').eq(0).data('aid');
    }

    if($('#single_article_holster').find('.article')[0]){
        return $('#single_article_holster').find('.article').eq(0).data('aid');
    }

    return '';
}

function remove_persistent_full_content_nag(id){
    $('#article_full_contents_' + id).removeClass('show-translator')
    $('#article_full_contents_' + id).find('.translation-container').html('');
    createCookie('persistent_full_content_nag',1,365);
}

function set_article_title(id,title){
    $('[id=article_title_link_' + id + ']').each(function(){
        $(this).html(title);
    });

    $('[id=article_title_link_inline_' + id + ']').each(function(){
        $(this).html(title);
    });

    if(user_access[access_pro]){
        var tmpdiv = document.createElement('div');
        tmpdiv.id = 'tmpdiv_for_full_content';
        tmpdiv.innerHTML = article_contents[id];
        $(tmpdiv).find('#article_title_link_' + id).html(title);
        article_contents[id] = $(tmpdiv).html();
        tmpdiv = null;
    }
}

function set_article_content(id,content){
    // We need 6 tabs to be consistent with the backend because otherwise annotations get messed up.
    content = "\n\t\t\t\t\t\t" + $.trim(content);
    $('#article_contents_inner_' + id).html(content);

    if(user_access[access_pro]){
        var tmpdiv = document.createElement('div');
        tmpdiv.id = 'tmpdiv_for_full_content';
        tmpdiv.innerHTML = article_contents[id];
        $(tmpdiv).find('#article_contents_inner_' + id).html(content);
        article_contents[id] = $(tmpdiv).html();
        tmpdiv = null;
    }
}

function get_article_title(id){
    if($('#article_title_link_' + id)[0]){
        return $('#article_title_link_' + id).text();
    }else if($('#article_title_link_inline_' + id)[0]){
        return $('#article_title_link_inline_' + id).text();
    }else if($('#burl_' + id)[0]){
        return $('#burl_' + id).text();
    }else{
        return '';
    }
}

function get_article_url(id){
    if($('#burl_' + id)[0]){
        return $('#burl_' + id).attr('href');
    }else if($('a#article_title_link_' + id)[0]){
        return $('a#article_title_link_' + id).attr('href');
    }else if($('#aurl_' + id)[0]){
        return $('#aurl_' + id).attr('href');
    }else{
        return '';
    }
}

function get_sunk(){
    if($('#reader_pane').find('.article_current')[0]){
        return $('.article_current').eq(0).data('sunk');
    }
    return '';
}

function get_suid(){
    if($('#reader_pane').find('.article_current')[0]){
        return $('.article_current').eq(0).data('suid');
    }
    return '';
}

function bookmarklet_alert(){
    xalert(_js("Drag this bookmarklet to your Bookmarks Bar") + '. '+ _js("Click it while viewing a site with an RSS feed to subscribe to it immediately"));
    return false;
}

function bookmarklet_alert2(){
    xalert(_js("Drag this bookmarklet to your Bookmarks Bar")+'. '+_js("Click it on any web page to save it in your saved web pages."));
    return false;
}

function bookmarklet_alert3(){
    xalert(_js("Drag this bookmarklet to your Bookmarks Bar")+'. '+_js("Click it to open the first unread article in the chosen section directly from its original site."));
    return false;
}

function display_profile_photo(){
    return false;
}

function check_enabled_profile(gesture){
    if($('#preference_disable_social').is(':disabled')){
        $('.profile_tr').css('opacity', 0.4);
        $('.profile_tr').find('input[type="checkbox"]').prop('readonly',true);
    }else if(!$('#preference_disable_social').is(':checked')){
        $('.profile_tr').css('opacity', 0.4);
        $('.profile_tr').find('input[type="checkbox"]').prop('disabled',true).addClass('disabled');
    }else{
        $('.profile_tr').css('opacity', 1);
        $('.profile_tr').find('input[type="checkbox"]').prop('disabled',false).removeClass('disabled');
    }
}

function disconnect_user(user_id,context){
    if(context == 0){
        xconfirm(_js("Are you sure")+'?','request_connection(' + user_id + ',3,"request_connection_' + user_id + '",true,true)');
    }else if(context == 1){
        xconfirm(_js("Are you sure")+'?','request_connection(' + user_id + ',3,false)');
    }
}

function request_connection(user_id,fn,button_id,dialog){
    if(fn == 1){
        var button_html = _js("Sending request...");
    }else if(fn == 2){
        var button_html = _js("Canceling request...");
    }else if(fn == 3){
        var button_html = _js("Disconnecting...");
    }
    $('#' + user_id).html(button_html).button('disable');
    do_loading();
    xajax_request_connection(user_id,button_id,dialog);
}

function mark_notification_read(el){
    $(el).addClass('notification_read');
    $(el).find('.notification_stripe').remove();
}

function no_notifications_popup(){
    var html = _js("You will receive notifications about important things here.")+'<br><br>'+_js("You will see a red counter when there are notifications waiting for you.");
    xalert(html);
}

function set_notifications(cnt,pref_cnt,notifications,version,max_date){
    notifications_version = version;
    notifications_max_date = max_date;
    if(notifications && notifications.length > 0){
        var menu = [];
        var n = 0;

        for(var i in notifications){
            if(notifications[i].content == undefined){
                continue;
            }
            var read_class = (notifications[i].read == 1) ? ' notification_read' : '';
            var mark_read_function = (notifications[i].read == 1) ? '' : 'mark_notification_read(this);';

            menu[n++] = {type: 'link', icon: '', text: notifications[i].content, click: mark_read_function + notifications[i].click_function, class_name: 'inno_toolbar_button_menu_item notification_item' + read_class};
        }
        //var bulb_icon = (cnt == 0) ? 'bell_empty' : 'notifications-menu';
        var bulb_icon = 'notifications-menu';
        document.getElementById('sb_rp_notifications').innerHTML = '';
        document.getElementById('sb_rp_notifications').appendChild(inno_toolbar_button('sb_rp_notifications_button','<span class="icon-' + bulb_icon + '"></span><div id="global_notifications_badge" class="notifications_badge"></div>',_js("Notifications"),menu, "", function(){ open_notifications() }));
        // for(var i=1;i<=7;i++){
        //     var hover_trap = document.createElement('div');
        //     hover_trap.className = 'hover_trap hover_trap_' + i;
        //     hover_trap.onclick = function(){ setTimeout(function(){ $('#sb_rp_notifications_button').click();},10)}
        //     document.getElementById('sb_rp_notifications').appendChild(hover_trap);
        // }
    }


    if(pref_cnt == 0){
        $('#sb_rp_gear_notifications').hide();
        $('#profile_menu_notifications').hide();
    }else{
        // if(pref_cnt > 99){
        //  pref_cnt = '99+';
        // }

        $('#sb_rp_gear_notifications').html('!');
        $('#profile_menu_notifications').html('!');

        $('#sb_rp_gear_notifications').show();
        $('#profile_menu_notifications').show();

    }

    if(cnt == 0){
        $('#global_notifications_badge').hide();
    }else{
        if(cnt > 99){
            cnt = '99+';
        }

        $('#global_notifications_badge').html(cnt);
        $('#global_notifications_badge').show();
    }
}

function open_notifications(){
    $('#global_notifications_badge').html('').hide();
    //$('#sb_rp_notifications_button>span.icon-notifications-menu').removeClass('icon-notifications-menu').addClass('icon-bell_empty');
    xajax_open_notifications(notifications_version,notifications_max_date);
}

function handle_connection_operation(user_id,accept,dialog){
    do_loading();
    xajax_handle_connection_operation(user_id,accept,dialog);
}

function search_for_friends(){
    search_options = 2;
    $('#feed_searcher').focus().select().effect('highlight');
    setTimeout(function(){$('#feed_searcher').val('')},1);
}

function show_maar_undo(filter_type,filter_id){
    create_snackbar(_js("Marked section as read."),_js('Undo'),function(){ undo_mark_read(filter_type,filter_id); },6000);
}

function close_snackbar(){
    Snackbar.close();
}

function create_snackbar(text,button_text,button_function,timeout){
    if(!timeout){
        timeout = 5000;
    }

    if(button_text && button_function){
        Snackbar.show({text: text, pos: 'bottom-center', customClass: 'inno_snackbar', actionText: button_text, onActionClick: button_function, duration: timeout});
    }else if(button_function){
        Snackbar.show({text: text, pos: 'bottom-center', customClass: 'inno_snackbar', onActionClick: button_function, duration: timeout});
    }else if(button_text){
        Snackbar.show({text: text, pos: 'bottom-center', customClass: 'inno_snackbar', actionText: button_text, duration: timeout});
    }else{
        Snackbar.show({text: text, pos: 'bottom-center', customClass: 'inno_snackbar', duration: timeout });
    }
}

var articles_for_read = {};
var read_article_timeout = null;
function read_article(id,multiple_type,params,do_not_ask,unread){
    if(read_article_timeout) clearTimeout(read_article_timeout);
    if(!params){
        params = [];
    }
    if(params && channel_subscription_ids != null && channel_subscription_ids.length > 0){
        params.channel_subscription_ids = channel_subscription_ids;
    }
    if($('#article_' + id).data('tm') !== null){
        var teams_data = $('#article_' + id).attr('data-tm');
        params.teams = (teams_data) ? JSON.parse(teams_data) : {};
    }

    if(id === false){
        cancel_checksum_request();
        params.update_articles = 0;

        if(params.from_tree_menu == 1 && (params.filter_type == 'subscription' || params.filter_type == 'folder')){
            if(!feed_params.benchmark_article_id && params.filter_type == feed_params.filter_type && params.filter_id == feed_params.filter_id){
                params.update_articles = 1;
            }
        }else if(params.from_tree_menu != 1){
            if(feed_params.last_feed_id){
                delete_feed_param('last_feed_id');
            }
            if(feed_params.ap){
                delete_feed_param('ap');
            }
            if(feed_params.last_article_date){
                delete_feed_param('last_article_date');
            }
            if(feed_params.current_feed_ids){
                delete_feed_param('current_feed_ids');
            }
            if(feed_params.filtered_feeds){
                delete_feed_param('filtered_feeds');
            }
            if(feed_params.first_article_date){
                delete_feed_param('first_article_date');
            }
        }
        marking_all_as_read = true;
        xajax_read_article(false,multiple_type,params,do_not_ask,unread);
    }else{
        for(var i in articles_for_read){
            if(i == id && articles_for_read[i] != unread){
                delete articles_for_read[i];
                return;
            }
        }

        articles_for_read[id] = unread;

        read_article_timeout = setTimeout(function(){
            cancel_checksum_request();
            xajax_read_article(articles_for_read,multiple_type,params,do_not_ask,unread);
            articles_for_read = {};
        },250);
    }

    check_bulk_articles();
}

function mark_read_from_tree(filter_type,filter_id){
    if(user_is_guest){
        return guest_alert();
    }

    if(filter_type == feed_params.filter_type && filter_id == feed_params.filter_id){
        clear_article_divs();
        reader_pane_loading();
    }

    read_article(false,1,{ articles_order: articles_order, filter_type: filter_type, filter_id: filter_id, from_tree_menu: 1});
}

function tree_remove_sorting_classes(){
    $('#tree_sort_drop').remove();
    $('.tree_sort').removeClass('tree_sort').removeClass('tree_sort_above').removeClass('tree_sort_below');
    $('.tree_sort_folder_drop').removeClass("tree_sort_folder_drop");
}

function tree_drop_over_handler(event, ui, object){
    current_droppable = object;
}

function tree_drag_handler(event, ui, object){
    if(tree_ordering == 0){
        return;
    }

    var $tree = $('#tree');
    var $tree_pane = $('#tree');

    var tree_bottom = $tree.offset().top + $tree.height() + $tree_pane.scrollTop();
    var tree_top = $tree.offset().top + $tree_pane.scrollTop();
    var current_draggable_pos = event.pageY + $tree_pane.scrollTop();

    var is_in_tree = (current_draggable_pos >= tree_top && current_draggable_pos <= tree_bottom);
    if(prev_draggable_pos === null && !is_in_tree){
        prev_draggable_pos = current_draggable_pos;
        return;
    }

    var pos_delta = current_draggable_pos - prev_draggable_pos;
    if(pos_delta < 0){
        var dir = 'up';
    }else if(pos_delta > 0){
        var dir = 'down';
    }else{
        return;
    }

    prev_draggable_pos = current_draggable_pos;

    if(current_droppable == null){
        return;
    }

    var draggable_id = object.id.replace(/parent\_/,'');
    var id = current_droppable.id.replace(/linkdiv\_/,'');
    var drop_id = $(current_droppable).parent().parent().get(0);

    // Global var to determine droppable element - is it folder or not
    droppable_target_is_folder = false;
    var droppable_id_split = id.split(/\_/);
    if(droppable_id_split[0] == 0){
        droppable_target_is_folder = true;
    }
    draggable_is_folder = false;
    var draggable_id_split = draggable_id.split(/\_/);
    if(draggable_id_split[0] == 0){
        draggable_is_folder = true;
    }

    if(is_in_tree == prev_is_in_tree && prev_droppable == current_droppable && dir == prev_draggable_dir && (!droppable_target_is_folder || draggable_is_folder)){
        return;
    }

    prev_draggable_dir = dir;
    prev_droppable = current_droppable;
    prev_is_in_tree = is_in_tree;

    var draggable_id_split = draggable_id.split(/\_/);
    if(draggable_id_split[0] == 0){ // folder
        var tree_section_drag = $(object).parent().attr('id');
        var tree_section_drop = $(current_droppable).parent().parent().parent().attr('id');
        if(tree_section_drop != 'tree' && tree_section_drop != 'child_tags' && tree_section_drop != 'child_active_searches'){
            return; // Do not allow cascading!
        }
        if(tree_section_drop != tree_section_drag){
            return; // Do not allow drops between sections
        }
    }

    if(dir == 'up'){
        var upper_object = ($(drop_id).prev().length == 1) ? $(drop_id).prev() : false;
        var lower_object = $(drop_id);
    }else{
        var upper_object = $(drop_id);
        var lower_object = ($(drop_id).next().length == 1) ? $(drop_id).next() : false;
    }

    tree_remove_sorting_classes();

    if(droppable_target_is_folder && draggable_id_split[0] != 0){ // droppable element is folder and draggable is not folder
        var check;
        var draggable_offset = event.clientY;
        var droppable_offset = $(current_droppable).offset().top;
        var droppable_height = $(current_droppable).outerHeight();
        var outisde_pixels = droppable_height / 2.5;

        if(dir == 'down'){
            if(draggable_offset <= droppable_offset){
                return;
            }
            check = (draggable_offset > droppable_offset && draggable_offset <= droppable_offset+droppable_height-outisde_pixels);
        }else{
            if(draggable_offset >= droppable_offset+droppable_height){
                return;
            }
            check = (draggable_offset >= droppable_offset+outisde_pixels && draggable_offset < droppable_offset+droppable_height);
        }

        if(check){
            $(current_droppable).parent().addClass("tree_sort_folder_drop");
        }else{
            if(dir == 'down' && lower_object && lower_object.attr('id') == $(object).attr('id')){
                return;
            }
            if(dir == 'up' && upper_object && upper_object.attr('id') == $(object).attr('id')){
                return;
            }
            // If draggable is outside the droppable folder focus
            droppable_target_is_folder = false;
            if(dir == 'down'){
                var $child = $(current_droppable).parent().parent().children('.showed');
                if($child.is(':visible')) {
                    $child.children().first().before($('<div id="tree_sort_drop""></div>'));
                }else{
                    $(drop_id).after($('<div id="tree_sort_drop"></div>'));
                }
            }else{
                $(drop_id).before($('<div id="tree_sort_drop"></div>'));
            }
        }

    }else{ // typical case
        if(dir == 'down' && lower_object && lower_object.attr('id') == $(object).attr('id') && is_in_tree){
            return;
        }

        if(dir == 'up' && upper_object && upper_object.attr('id') == $(object).attr('id')){
            return;
        }
        droppable_target_is_folder = false;
        if(upper_object == false){
            $(drop_id).before($('<div id="tree_sort_drop"></div>'));
        }else if(lower_object == false) {
            $(drop_id).after($('<div id="tree_sort_drop"></div>'));
        }else if(current_draggable_pos <= tree_top && $(object).parents('#tree')[0]){
            var first_elem_in_tree = $tree.children('.parent_div').first();
            $(first_elem_in_tree).before($('<div id="tree_sort_drop"></div>'));
        }else if(current_draggable_pos >= tree_bottom && $(object).parents('#tree')[0]){
            var last_elem_in_tree = $tree.children('.parent_div').last();
            $(last_elem_in_tree).after($('<div id="tree_sort_drop"></div>'));
        }else{
            $(upper_object).addClass('tree_sort').addClass('tree_sort_above');
            $(lower_object).addClass('tree_sort').addClass('tree_sort_below');
            $('.tree_sort + .tree_sort').before($('<div id="tree_sort_drop"></div>'));
        }
    }
}

function tree_drag_stop_handler(event, ui, object){
    if(typeof droppable_target_is_folder != 'undefined' && droppable_target_is_folder && typeof draggable_is_folder != 'undefined' && !draggable_is_folder) {
        $('#tree_sort_drop').remove();
        var draggable_anchor = $(object).children().eq(1).attr('id');
        var droppable_anchor = $(current_droppable).parent().parent().children().eq(1).attr('id');
        $('.tree_sort_folder_drop').removeClass("tree_sort_folder_drop");
        var folder_id = droppable_anchor.replace(/anchor\_/,'').slice(0,-2);
        var folder_is_loaded = ($('#child_' + folder_id).hasClass('showed')) ? true : false;

        if(folder_is_loaded){
            $(object).prependTo('#child_' + folder_id);
        }else{
            $(object).remove();
        }
        xajax_tree_drop(draggable_anchor,droppable_anchor,true);
        return;
    }
    var tree_object = {};
    var last_object_prev_parent_id = ($(object).parent().attr('id') != 'tree') ? $(object).parent().attr('id').replace(/child\_/,'').split(/\_/)[1] : 0;

    $(object).insertAfter('#tree_sort_drop');
    var last_object_id = object.id.replace(/parent\_/,'');
    var last_object_parent_id = 0;
    var tree_sections = ['tree','child_tags','child_active_searches','child_channel','child_teams'];
    for(i=0;i<=4;i++){
        var tree_section = tree_sections[i];
        $('#' + tree_section + ' .parent_div').each(function(){
            if($(this).attr('id') == undefined || $(this).attr('id') == 'pdinner_channel' || $(this).attr('id') == 'pdinner_starred' || $(this).parent().attr('id') == 'tree_pane' || $(this).parent().attr('id') == 'parent_channel' || $(this).parent().attr('id') == 'parent_my_channel' || $(this).attr('id') == 'pdinner_all_articles' || $(this).attr('id') == 'parent_admin' || $(this).parent().attr('id') == 'all_articles' || $(this).parent().attr('id') == 'parent_catalog'){
                return;
            }
            var id = $(this).attr('id').replace(/parent\_/,'');
            var parent_id = ($(this).parent().attr('id') != 'tree' && $(this).parent().attr('id') != 'child_tags' && $(this).parent().attr('id') != 'child_channel' && $(this).parent().attr('id') != 'child_teams' && $(this).parent().attr('id') != 'child_active_searches') ? $(this).parent().attr('id').replace(/child\_/,'') : 0;
            if(tree_object[parent_id] == undefined){
                tree_object[parent_id] = [];
            }
            tree_object[parent_id].push(id);
            if($(object).is($(this))){
                last_object_parent_id = (parent_id == 0) ? 0 : parent_id.split(/\_/)[1];
            }
        });
    }
    $('#tree_sort_drop').remove();
    xajax_save_tree_ordering(tree_object,last_object_id,last_object_parent_id,last_object_prev_parent_id);
    jumper_loaded = false;
}

function open_url(url,background,dont_mark_as_read){
    var mark_as_read = true;
    if(dont_mark_as_read){
        mark_as_read = false;
    }
    if(!background || navigator.userAgent.toLowerCase().indexOf('firefox') > -1){
        var newWin = window.open(url);
        if((!newWin || newWin.closed || typeof newWin.closed == 'undefined')){
            mark_as_read = false;
            xalert(_js("Please disable your popup blocker to use this feature!"));
        }
    }else{
        var a = document.createElement("a");
        a.href = url;
        var evt = document.createEvent("MouseEvents");
        //the tenth parameter of initMouseEvent sets ctrl key
        var ua = navigator.userAgent;
        if(ua.indexOf('Mac OS') > -1){
            evt.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, true, 0, null);
        }else{
            evt.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, true, false, false, false, 0, null);
        }
        a.dispatchEvent(evt);
    }
    if(mark_as_read && click_mark == 1){
        if($('#article_' + get_aid()).data('read') == 0){
            mark_read(get_aid(),false,true);
        }
    }
}

function pin_filter(){
    if(!feed_params.filter_pinned){
        $('#sb_rp_pin_search').children().first().removeClass('icon-pin_up').addClass('icon-pin_down');
        set_feed_param('filter_pinned',1);
        create_bottom_notification(_js("Search pinned.")+' '+_js("Click on a tree section to search inside it."),'info',true,2000);
    }else{
        $('#sb_rp_pin_search').children().first().removeClass('icon-pin_down').addClass('icon-pin_up');
        set_feed_param('filter_pinned',0);
        create_bottom_notification(_js("Search unpinned."),'info',true,2000);
        if(feed_params.filter_type != 'old_search'){
            print_articles();
        }
    }
}

function share_buttons_reorder_fix_hr(event, ui){
    var cnt = 0;
    $('#share_buttons_sorter').find('li').each(function(){
        var $this = $(this);
        if($this.attr('id') == 'sb_divider'){
            return true;
        }
        if($this.hasClass('ui-sortable-helper')){
            return true;
        }

        if(cnt == 2){
            $('#sb_divider').insertAfter($this);
            return false;
        }
        cnt++;
    });
}

function save_share_buttons_order(){
    var sorted = $('#share_buttons_sorter').sortable('toArray');
    var send_to_button = ($('#send_to_button').is(':checked')) ? 1 : 0;
    var share_short_url = ($('#share_short_url')[0] && $('#share_short_url').is(':checked')) ? 1 : 0;
    do_loading();
    disable_dialog_button('share_buttons_reorder_dialog',0);
    xajax_save_share_buttons_order(sorted,send_to_button,share_short_url);
}

function save_main_tree_order(){
    var sorted_3d = [];
    var sorted = $('#tree_elements_sorter').sortable('toArray');
    for(var i in sorted){
        var id = sorted[i].replace(/toe\_/,'');
        sorted_3d.push({id: id, visible: $('#toe_visible_' + id).is(':checked')});
    }
    do_loading();
    disable_dialog_button('tree_reorder_dialog',0);
    xajax_save_main_tree_order(sorted_3d);
}

function reset_main_tree_order(){
    xconfirm(_js('Are you sure?'),'reset_main_tree_order_exec();');
}

function reset_main_tree_order_exec(){
    do_loading();
    disable_dialog_button('tree_reorder_dialog',0);
    xajax_save_main_tree_order(false);
}

function rebuild_share_buttons(){
    if($('.sd')[0]){
        $('.sd').each(function(){
            var id = $(this).attr('id').replace(/sd\_/,'');
            build_share_buttons(id);
        });
    }
}

function init_search(term){
    toggle_search_options(1);
    $('#feed_searcher').val(term);
    do_search();
}


function toggle_search_options_select(value,from_select){
    if(value == ''){
        toggle_search_options(1,from_select);
    }else if(value == 'public'){
        toggle_search_options(4,from_select);
    }else{
        toggle_search_options(3,from_select);
    }
}

function isElementInViewport (el) {
    if (typeof jQuery === "function" && el instanceof jQuery) {
        el = el[0];
    }

    var rect = el.getBoundingClientRect();

    return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */
        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */
    );
}

function activate_tags_input(id,tags,all_tags){
    var tags_array = (tags) ? Object.keys(tags).map(function (key) {return tags[key]}) : [];
    $('#article_tags_input_' + id).textext({
        plugins : 'tags prompt autocomplete suggestions arrow',
        tagsItems : tags_array,
        suggestions : all_tags,
        prompt : _js("Press Enter twice to save")+'. '+_js("Esc to cancel")
    })
    .focus()
    .select()
    .bind('isTagAllowed', function(e, data){
        if(data.tag == ''){
            save_current_tags(id);
        }
    })
    .bind('keydown.esc', function(e){
        cancel_article_tagging(id);
    });
}

function activate_subscription_folders_input(id,tags,all_tags,context){
    var $input = $('#subscription_folders_input_' + id).tagify({
        whitelist: all_tags,
        delimiters: null,
        dropdown: {
            enabled: 0,
            maxItems: 1000
        }
    }).on('keydown', function(e, k){
        if(k.key === "Escape"){
            cancel_subscription_folder_assignment(id,context);
        }
        if(k.key === "Enter" && (!tagify_has_dropdown || !$('.tagify__dropdown__item--active')[0])){
            if($.trim($('#subscription_folders_input_' + id).find('span.tagify__input').eq(0).html()) == ''){
                save_subscription_folders(id,context);
            }
        }
    });

    if(tags && tags.length > 0){
        var tagify = $input.data('tagify');
        tagify.addTags(tags);
    }
}

function activate_add_subscription_more_expanded(){
    if(add_subscription_more_expanded == 1){
        toggle_add_options();
    }
}

function cancel_article_tagging(id){
    $('#article_tags_' + id).html(article_tags_contents[id]);
    article_tags_contents[id] = null;
}

function cancel_subscription_folder_assignment(id,context){
    if(context == 'subscriptions_list'){
        $('#subscription_folders_inline_' + id).html(subscription_folders_content[id]);
    }else{
        $('#subscription_folders_' + id).html(subscription_folders_content[id]);
    }
    subscription_folders_content[id] = null;
}

function save_current_tags(id){
    var result_tags = {};
    $('.text-tag').each(function(){
        var tag_name = $(this).children().eq(0).children().eq(0).html();
        result_tags[tag_name] = tag_name;
    });
    $('#article_tags_' + id).html(_js("Saving") + '...');
    do_loading(_js("Saving") + '...');
    article_tags_contents[id] = null;
    xajax_save_tags(id,result_tags);
}

function save_subscription_folders(id,context){

    var tags = [];
    try{
        tags = JSON.parse($('#subscription_folders_input_' + id).val());
    }catch(e){}

    if(context == 'subscriptions_list'){
        $('#subscription_folders_inline_' + id).html(_js("Saving") + '...');
    }else{
        $('#subscription_folders_' + id).html(_js("Saving") + '...');
    }

    do_loading(_js("Saving") + '...');
    subscription_folders_content[id] = null;

    var converted_tags = {};
    for(var i in tags){
        converted_tags[tags[i].id] = tags[i].value;
    }

    xajax_save_subscription_folders(id,converted_tags,context);
    jumper_loaded = false;
}

function rebuild_tags(tags){
    var tags_html = '';
    for(var i in tags){
        //tags_html += '<a href="javascript:void(0)" onclick="view_tree_element(0,'".$tag_id."')\">".$tag_name."</a>,'
    }
}

xajax.callback.global.onRequest = function(args){
    if(args.parameters.callee.toString().indexOf('print_articles') > -1){
        current_xajax_requests.print_articles = args;
    }else if(args.parameters.callee.toString().indexOf('reload_articles') > -1){
        current_xajax_requests.reload_articles = args;
    }else if(args.parameters.callee.toString().indexOf('checksum') > -1){
        current_xajax_requests.checksum = args;
    }else if(args.parameters.callee.toString().indexOf('read_article') > -1){
        current_xajax_requests.read_article = args;
    }else if(args.parameters.callee.toString().indexOf('discover') > -1){
        current_xajax_requests.discover = args;
    }else if(args.parameters.callee.toString().indexOf('do_search') > -1){
        current_xajax_requests.do_search = args;
    }else if(args.parameters.callee.toString().indexOf('print_dashboard') > -1){
        current_xajax_requests.print_dashboard = args;
    }else if(args.parameters.callee.toString().indexOf('print_teams') > -1){
        current_xajax_requests.print_teams = args;
    }else if(args.parameters.callee.toString().indexOf('build_searcher_content') > -1){
        current_xajax_requests.build_searcher_content = args;
    }else if(args.parameters.callee.toString().indexOf('print_team_dashboard_activity') > -1){
        current_xajax_requests.print_team_dashboard_activity = args;
    }else if(args.parameters.callee.toString().indexOf('check_newsletter_slug') > -1){
        current_xajax_requests.check_newsletter_slug = args;
    }else if(args.parameters.callee.toString().indexOf(atob('YnVpbGRfYWRtaW4=')) > -1){
        current_xajax_requests[atob('YnVpbGRfYWRtaW4=')] = args;
    }else if(args.parameters.callee.toString().indexOf(atob('YWRtaW5fY21k')) > -1){
        current_xajax_requests[atob('YWRtaW5fY21k')] = args;
    }else if(args.parameters.callee.toString().indexOf(atob('Z2VzdGFwbw==')) > -1){
        current_xajax_requests[atob('Z2VzdGFwbw==')] = args;
    }
}

xajax.callback.global.onComplete = function(args){
    if(args.parameters.callee.toString().indexOf('print_articles') > -1){
        current_xajax_requests.print_articles = null;
        stop_loading();
    }else if(args.parameters.callee.toString().indexOf('reload_articles') > -1){
        current_xajax_requests.reload_articles = null;
    }else if(args.parameters.callee.toString().indexOf('checksum') > -1){
        current_xajax_requests.checksum = null;
    }else if(args.parameters.callee.toString().indexOf('read_article') > -1){
        current_xajax_requests.read_article = null;
    }else if(args.parameters.callee.toString().indexOf('discover') > -1){
        current_xajax_requests.discover = null;
    }else if(args.parameters.callee.toString().indexOf('do_search') > -1){
        current_xajax_requests.do_search = null;
    }else if(args.parameters.callee.toString().indexOf('print_dashboard') > -1){
        current_xajax_requests.print_dashboard = null;
    }else if(args.parameters.callee.toString().indexOf('print_teams') > -1){
        current_xajax_requests.print_teams = null;
    }else if(args.parameters.callee.toString().indexOf('build_searcher_content') > -1){
        current_xajax_requests.build_searcher_content = null;
    }else if(args.parameters.callee.toString().indexOf('print_team_dashboard_activity') > -1){
        current_xajax_requests.print_team_dashboard_activity = null;
    }else if(args.parameters.callee.toString().indexOf('check_newsletter_slug') > -1){
        current_xajax_requests.check_newsletter_slug = null;
    }else if(args.parameters.callee.toString().indexOf(atob('YnVpbGRfYWRtaW4=')) > -1){
        current_xajax_requests[atob('YnVpbGRfYWRtaW4=')] = null;
    }else if(args.parameters.callee.toString().indexOf(atob('YWRtaW5fY21k')) > -1){
        current_xajax_requests[atob('YWRtaW5fY21k')] = null;
    }else if(args.parameters.callee.toString().indexOf(atob('Z2VzdGFwbw==')) > -1){
        current_xajax_requests[atob('Z2VzdGFwbw==')] = null;
    }
}

function add_ff_handler(){
    navigator.registerContentHandler("application/vnd.mozilla.maybe.feed", '?add_feed=%s', application_name);
}

function noarlink(){
    xalert(_js("This article does not contain a link!"),true);
}

function set_start_page(filter_type,filter_id){
    if(user_is_guest){
        return guest_alert();
    }

    if(filter_type == start_page.filter_type && filter_id == start_page.filter_id){
        filter_type = '';
        filter_id = 0;
    }

    xajax_set_start_page(filter_type,filter_id);
    start_page.filter_type = filter_type;
    start_page.filter_id = filter_id;
    rebuild_toolbar();
}

function change_folder_visibility(id,pub,context,skip_pro_check){
    do_loading();
    xajax_change_folder_visibility(id,pub,context,skip_pro_check);

    var caption = pub == 1 ? _js('Public OPML') : _js('Private OPML');
    $('#opml_link_' + id).html(caption);
}

function change_team_visibility(id,pub,context){
    if(id){
        do_loading();
        xajax_change_team_visibility(id,pub,context);
    }

    if(pub){
        $('#team_export_links_' + id).css('display', 'flex');
    }else{
        $('#team_export_links_' + id).css('display', 'none');
    }
}

function recalculate_counters(){
    do_loading();
    xajax_recalculate_counters();
}

function clear_subscription_flags(params,flag_type){
    var total_delta = 0;
    var subscriptions_cnt_new = clone_object(subscriptions_cnt);
    var reload_counters = false;

    if(params.filter_type == 'folder'){
        subscriptions_cnt_new['0_' + params.filter_id].unseen = 0;
        if(flag_type == 'unread'){
            total_delta = subscriptions_cnt_new['0_' + params.filter_id].cnt;
            subscriptions_cnt_new['0_' + params.filter_id].cnt = 0;
        }
        for(var key in subscriptions_cnt_new){
            if(subscriptions_cnt_new[key].parents != undefined){
                for(var i in subscriptions_cnt_new[key].parents){
                    if(subscriptions_cnt_new[key].parents[i] == '0_' + params.filter_id){
                        subscriptions_cnt_new[key].unseen = 0;
                        if(flag_type == 'unread'){
                            subscriptions_cnt_new[key].cnt = 0;
                        }
                    }
                }
            }
        }
        if(flag_type == 'unread' && totals_cnt[0] < max_unread){
            totals_cnt[0] -= total_delta;
        }
    }else if(params.filter_type == 'subscription'){
        subscriptions_cnt_new['1_' + params.filter_id].unseen = 0;
        if(flag_type == 'unread'){
            total_delta = subscriptions_cnt_new['1_' + params.filter_id].cnt;
            subscriptions_cnt_new['1_' + params.filter_id].cnt = 0;
        }
        var parents = subscriptions_cnt_new['1_' + params.filter_id].parents;
        if(parents){
            for(var i in parents){
                if(flag_type == 'unread' && subscriptions_cnt_new[parents[i]].cnt < max_unread){
                    subscriptions_cnt_new[parents[i]].cnt -= total_delta;
                }
                var has_unseen = false;
                $('#child_' + parents[i]).children('.parent_div').each(function(){
                    var this_id = $(this).attr('id').replace(/parent\_/,'');
                    if($('#parent_div_inner' + this_id).hasClass('tree_unseen')){
                        has_unseen = true;
                        return true;
                    }
                });
                if(has_unseen == false){
                    subscriptions_cnt_new[parents[i]].unseen = 0;
                }
            }
        }
        if(flag_type == 'unread' && totals_cnt[0] < max_unread){
            totals_cnt[0] -= total_delta;
        }
    }else if(params.filter_type == 'all_items' || !params.filter_type){
        for(var key in subscriptions_cnt_new){
            if($('#parent_' + key)[0] && $('#parent_' + key).parent().is($('#child_channel'))){
                continue;
            }
            if(flag_type == 'unread' && key != 'channel' && key != 'teams' && key != 'tags'){
                subscriptions_cnt_new[key].cnt = 0;
            }
            subscriptions_cnt_new[key].unseen = 0;

            if((key == 'tags' || key == 'active_searches') && subscriptions_cnt_new[key].cnt > 0){
                reload_counters = true;
            }
        }
        if(flag_type == 'unread'){
            totals_cnt[0] = 0;
        }
    }
    apply_subscriptions_cnt(subscriptions_cnt_new,true);

    if(flag_type == 'unread' && reload_counters){
        checksum(false,true);
    }
}

function reset_stats(){
    xconfirm(_js("Are you sure")+'?','view_stats(true)');
}

function show_comment_priv_menu(){
    $('#comment_priv_menu').toggle();
}

function set_comment_priv(priv,id){
    private_commenting = priv;
    build_comment_privacy_menu(id);
    xajax_save_user_pref("private_commenting",priv);
}

function detect_rtl_input(input){
    var str = $(input).val();
    var total_length = str.length;
    var arabic_length = 0;
    if(total_length == 0){
        $(input).attr("dir","ltr");
        return;
    }
    for(var i = 0, len = total_length; i < len; i++){
        if(((str.charCodeAt(i) > 1424) && (str.charCodeAt(i) <= 1791))){
            arabic_length++;
        }
    }

    if(total_length > 0 && arabic_length / total_length > 0.1){
        $(input).attr("dir","rtl");
    }else{
        $(input).attr("dir","ltr");
    }
}

function fix_comments_rtl(id){
    if($('#user_comments_' + id).attr('dir') == 'rtl'){
        $('#user_comments_refresh_img_' + id).css('left',$('#user_comments_refresh_img_' + id).css('right')).css('right','');
        $('#user_comments_unsubscribe_img_' + id).css('left',$('#user_comments_unsubscribe_img_' + id).css('right')).css('right','');
    }
}

function tree_stop_hide(){
    for(var i in timer7){
        clearTimeout(timer7[i]);
    }
    clearTimeout(timer6);
}

function activate_drag(){
    if(lock_dragdrop || device_type == 'phone'){
        return;
    }
    if(tree_ordering == 0){
        $('#tree_pane .linkdiv.drago.ld0').droppable({tolerance: 'pointer', hoverClass: 'div_drop', drop: function (event,ui) {
            $('.tree_sort_folder_drop').removeClass("tree_sort_folder_drop");
            var draggable_anchor = $(ui.draggable).children().eq(1).attr('id');
            var this_anchor = $(this).parent().parent().children().eq(1).attr('id');
            tree_drop(draggable_anchor,this_anchor);
            tree_remove_sorting_classes();
        }, over: function(event,ui){
            $('.tree_sort_folder_drop').removeClass("tree_sort_folder_drop");
            $(this).parent().addClass("tree_sort_folder_drop");
        }});

        $('#tree_pane .parent_div.drago.ld1').draggable({cancel: '.sm', distance: 5, axis: 'y', refreshPositions: true, revert: 'invalid', opacity: 0.7, helper: 'clone', scroll: true, containment: $('#tree_pane'), appendTo: $('#tree_pane'), drag: tree_drag_handler, stop: function(){ $('.tree_sort_folder_drop').removeClass("tree_sort_folder_drop"); } }).disableSelection();

        $('#tree_pane .linkdiv.drago.ld1').droppable({tolerance: 'pointer', drop: function (event,ui) {
            $('.tree_sort_folder_drop').removeClass("tree_sort_folder_drop");
            var draggable_anchor = $(ui.draggable).children().eq(1).attr('id');
            var this_anchor = $(this).parent().parent().children().eq(1).attr('id');
            tree_drop(draggable_anchor,this_anchor);
            tree_remove_sorting_classes();
        }, over: function(event,ui){
            $('.tree_sort_folder_drop').removeClass("tree_sort_folder_drop");
            if($(this).parent().parent().parent().attr('id') != 'tree'){
                $(this).parent().parent().parent().parent().addClass("tree_sort_folder_drop");
            }
        }});
    }else{
        $('#tree_pane .parent_div.drago.ld0').draggable({cancel: '.sm', distance: 5, axis: 'y', refreshPositions: false, opacity: 0.7, helper: 'clone', scroll: true, containment: $('#tree_pane'), appendTo: $('#tree_pane'), stop: function(event,ui){
            tree_drag_stop_handler(event,ui,this);
            tree_remove_sorting_classes();
            current_droppable = null;
        }, drag: function(event,ui){
            tree_drag_handler(event,ui,this);
        }, start: function(event,ui){
            current_droppable = $(this).find('.parent_div_link')[0];
        }}).disableSelection();

        $('#tree_pane .linkdiv.drago.ld0').droppable({tolerance: 'pointer', over: function(event,ui){
            tree_drop_over_handler(event,ui,this);
        }});

        $('#tree_pane .parent_div.drago.ld1').draggable({cancel: '.sm', distance: 5, axis: 'y', refreshPositions: false, opacity: 0.7, helper: 'clone', scroll: true, containment: $('#tree_pane'), appendTo: $('#tree_pane'), stop: function(event,ui){
            tree_drag_stop_handler(event,ui,this);
            tree_remove_sorting_classes();
            current_droppable = null;
        }, drag: function(event,ui){
            tree_drag_handler(event,ui,this);
        }, start: function(event,ui){
            current_droppable = $(this).find('.parent_div_link')[0];
        }}).disableSelection();

        $('#tree_pane .linkdiv.drago.ld1').droppable({tolerance: 'pointer', over: function(event,ui){
            tree_drop_over_handler(event,ui,this);
        }});
    }
    $('#tree_pane .drago').removeClass('drago');
}

function menu_checkbox_is_checked(id){
    if($(id).children().eq(0).children().eq(0).hasClass('icon-checkmark')){
        return true;
    }
    return false;
}

function menu_checkbox_uncheck(id){
    if(id.indexOf('#') !== -1){
        id = id.replace(/#/,'');
    }

    $('div[id=' + id + ']').each(function(){
        if($(this).children().eq(0).children().eq(0).hasClass('icon-checkmark')){
            $(this).children().eq(0).remove();
        }
    });
}

function menu_checkbox_check(id){
    if(id.indexOf('#') !== -1){
        id = id.replace(/#/,'');
    }

    $('div[id=' + id + ']').each(function(){
        if(!$(this).children().eq(0).children().eq(0).hasClass('icon-checkmark')){
            $(this).prepend('<span class="inno_toolbar_button_menu_icon"><span class="icon-checkmark"></span></span>');
        }
    });


}

function menu_checkbox_toggle(id){
    if(id.indexOf('#') !== -1){
        id = id.replace(/#/,'');
    }

    var ret = 0;
    $('div[id=' + id + ']').each(function(){
        if($(this).children().eq(0).children().eq(0).hasClass('icon-checkmark')){
            $(this).children().eq(0).remove();
        }else{
            $(this).prepend('<span class="inno_toolbar_button_menu_icon"><span class="icon-checkmark"></span></span>');
            ret = 1
        }
    });

    return ret;
}

function assign_folder(subscription_id,folder_id){
    tree_is_dirty = true;

    if(menu_checkbox_toggle('#sb_button_menu_assign_folder_' + subscription_id + '_' + folder_id) == 0){
        xajax_assign_folder(subscription_id,folder_id,0);
    }else{
        xajax_assign_folder(subscription_id,folder_id,1);
    }
}

function remove_tree_element(hash){
    $('#tree').children().each(function(){
        if($(this).attr('id') == 'parent_' + hash){
            $(this).remove();
            return false;
        }
    });
}

function mark_subscriptions(type){
    $('.subscription_checks').each(function(){
        if(type == 4){
            $(this).prop('checked',($(this).is(':checked')) ? false : true );
        }else{
            $(this).prop('checked',false);
        }
        if(type == 1){
            $(this).prop('checked',true);
        }else if(type == 2 && $(this).data('active') == 0){
            $(this).prop('checked',true);
        }else if(type == 3 && $(this).data('issues') == 1){
            $(this).prop('checked',true);
        }
    });
    check_marked_subscriptions_count();
}

function clear_marked_subscriptions_count(){
    $('#subscriptions_filter_matched').html('');
    $('#subscriptions_filter_matched_footer').html('');
    $('#st_header_count').html($('#st_header_count').data('original'));
}

function check_marked_subscriptions_count(){
    count = 0;
    $('.subscription_checks').each(function(){
        if($(this).is(':checked')){
            count++;
        }
    });

    clear_marked_subscriptions_count();

    if(count > 0){
        $('#subscriptions_filter_matched').html('('+_js("Selected")+': ' + count + ')');
        $('#subscriptions_filter_matched_footer').html(' (' + count + ')');
        $('#st_header_count').html(_js('Selected:') + ' <b>' + count + '</b>');
    }

    var total = $('.subscription_checks').length;

    if(count < total){
        $('#subscription_checks_all').addClass('partial');
    }else{
        $('#subscription_checks_all').removeClass('partial');
    }


}

function do_bulk_subscription_operation(confirmed){
    var type = document.getElementById('bulk_operation_type').value;
    var cmd_descr = $('#bulk_operation_type :selected').text();

    var checked_subscriptions = [];
    $('.subscription_checks').each(function(){
        if($(this).is(':checked')){
            checked_subscriptions.push($(this).val());
        }
    });

    if(checked_subscriptions.length == 0){
        xalert(_js("Please select at least one subscription"));
        return;
    }

    if(type == 'delete_subscriptions' && confirmed != true){
        xconfirm(_js("Are you sure")+'?','do_bulk_subscription_operation(true)');
        return;
    }

    if(type == 'create_bundle'){
        edit_bundle(0, {from_subscriptions: checked_subscriptions});
    }else if(type == 'subscription_add_to_new_folder'){
        add_folder(checked_subscriptions,'preferences',false,true);
    }else{
        do_loading();
        xajax_do_bulk_subscription_operation(checked_subscriptions,type);
    }
}

function sub_tree_loaded(ids){
    if(max_unread == 0){
        for(var i in ids){
            fix_tree_node_width('1_' + ids[i],0);
        }
    }else{
        var subscriptions_cnt_new = clone_object(subscriptions_cnt);
        for(var i in ids){
            var cnt_obj = subscriptions_cnt['1_' + ids[i]];
            if(cnt_obj) {
              cnt_obj.cnt = 9999;
            }
        }
        apply_subscriptions_cnt(subscriptions_cnt_new);
    }
    activate_drag();
}

function tree_loaded(noscroll){
    if(tree_scroll_saved && !noscroll){
        $('#tree_pane').scrollTop(tree_scroll_saved);
    }
    tree_scroll_saved = null;

    activate_drag();
    rebuild_toolbar();
    update_unread_button_count();
    // Topics counter progress bar
    topics_progress_bar.build_bar();
}

function fix_tree_node_widths(){
    for(var key in subscriptions_cnt){
        var count = subscriptions_cnt[key].cnt;
        if(count < 0){
            count = 0;
        }
        if(count >= max_unread){
            count = max_unread + '+';
        }
        fix_tree_node_width(key,count);
    }
}

function create_evernote_notebook(article_id){
    show_dialog('evernote_notebook_dialog',{ article_id: article_id });
}

function create_instapaper_folder(article_id){
    show_dialog('instapaper_folder_dialog',{ article_id: article_id });
}

function focus_preferences_tab(tab_id,params){
    // for legacy purposes
    var tabs = [];
    tabs[0] = 'preferences_profile';
    tabs[1] = 'preferences_interface';
    tabs[2] = 'preferences_subscriptions';
    tabs[3] = 'preferences_folders';
    tabs[4] = 'preferences_import';
    tabs[5] = 'preferences_integration';
    tabs[6] = 'preferences_extras';
    tabs[7] = 'preferences_connections';
    tabs[8] = 'preferences_rules';

    var ajax_tabs = [2,3,5,7,8];
    var async = false;
    if(inArray(tab_id,ajax_tabs)){
        async = true;
    }

    set_preferences_category(tabs[tab_id],async,params,false,true);
}

function set_preferences_main_category(force){
    if($('#preferences_main_wrapper').is(':visible')){
        return;
    }
    var timer = (force) ? 0 : 300;

    $('.preferences_wrapper_inner').addClass('preferences_wrapper_transitioning').fadeOut(timer, function(){
        $(this).removeClass('preferences_wrapper_transitioning');
    });

    // $('.preferences_wrapper_inner').fadeOut(timer);
    $('#preferences_main_wrapper').fadeIn(timer).focus();
    $('#preferences_header_back_arrow').fadeOut(timer);
    if(direction == 'rtl'){
        $('#preferences_header_caption').animate({paddingRight: 0}, timer, 'easeOutQuart');
    }else{
        $('#preferences_header_caption').animate({paddingLeft: 0}, timer, 'easeOutQuart');
    }
    $('#preferences_header_caption').html(_js('Preferences'));

    $('.inno_tabs_content').hide();
    $('.inno_tabs_content:first-of-type').show();

    $('.inno_tabs_content').hide();
    $('.inno_tabs_content:first-of-type').show();

    $('.inno_tabs_tab').removeClass('inno_tabs_tab_current');
    $('.inno_tabs_tab:first-of-type').addClass('inno_tabs_tab_current');
    phash();
}

function phash(category, tab_id){
    phash_disabled = true;
    if(category){
        if(tab_id && $('#preferences_' + category).hasClass('inno_tabs_wrapper')){
            location.hash = 'preferences-' + category.replace(/preferences_/,'') + '-' + tab_id.replace('preferences_' + category + '_','');
        }else{
            location.hash = 'preferences-' + category.replace(/preferences_/,'');
        }
    }else{
        location.hash = 'preferences';
    }

    setTimeout(function(){
        phash_disabled = false;
    },10);
}

function phash_remove(){
    phash_disabled = true;
    history.replaceState({}, document.title, window.location.href.split('#')[0]);
    setTimeout(function(){
        phash_disabled = false;
    },10);
}

function set_preferences_category(category,async,params,tab_id,force){
    var timer = (force) ? 0 : 300;

    $('#preferences_dialog').scrollTo(0);
    if($('.preferences_wrapper_inner').filter(':visible')[0]){
        $('.preferences_wrapper_inner').filter(':visible').fadeOut(timer);
    }
    $('#preferences_main_wrapper').fadeOut(timer);
    $('#preferences_header_back_arrow').fadeIn(timer);
    if(direction == 'rtl'){
        $('#preferences_header_caption').animate({paddingRight: 24}, timer, 'easeOutQuart');
    }else{
        $('#preferences_header_caption').animate({paddingLeft: 24}, timer, 'easeOutQuart');
    }

    var caption = $('#' + category + '_caption').text();
    if(caption){
        $('#preferences_header_caption').html(caption);
    }

    if(category == 'preferences_highlighters'){
        category = 'preferences_rules';
        tab_id = 'highlighters';
    }

    if(category == 'preferences_folders'){
        category = 'preferences_subscriptions';
        tab_id = 'folders';
    }

    // Because of lazy tabs
    if(!tab_id){
        if(category == 'preferences_subscriptions'){
            tab_id = 'subscriptions';
        }else if(category == 'preferences_integration'){
            tab_id = 'all';
        }else if(category == 'preferences_rules'){
            tab_id = 'rules';
        }else if(category == 'preferences_collaboration'){
            tab_id = 'digests';
        }else if(category == 'preferences_import'){
            tab_id = 'import';
        }else if(category == 'preferences_interface'){
            tab_id = 'language';
        }else if(category == 'preferences_behaviour'){
            tab_id = 'article_navigation';
        }
    }

    if(tab_id && $('#' + category).hasClass('inno_tabs_wrapper')){
        inno_tabs_switch_tab('#' + category + '_' + tab_id);
    }else{
        phash(category);
    }

    $('#' + category).addClass('preferences_wrapper_transitioning').fadeIn(timer, function(){
        $(this).removeClass('preferences_wrapper_transitioning');
    });

    if(!async){
        var async_sections = ['billing', 'developer', 'subscriptions', 'integration', 'rules', 'collaboration', 'digests', 'teams', 'bundles'];
        for(var i in async_sections){
            if('preferences_' + async_sections[i] == category){
                async = true;
                break;
            }
        }
    }

    if(async){
        do_loading();
        if(category == 'preferences_subscriptions'){
            if(params == null){
                var params = {};
            }
            params.subscriptions_list_filter = feed_params.subscriptions_list_filter;
            params.subscriptions_list_list_filter = feed_params.subscriptions_list_list_filter;
            params.subscriptions_list_folder_id = feed_params.subscriptions_list_folder_id;
            params.subscriptions_list_feed_type = feed_params.subscriptions_list_feed_type;
            params.subscriptions_list_limit = feed_params.subscriptions_list_limit;
            params.subscriptions_list_view_urls = feed_params.subscriptions_list_view_urls;
            params.subscriptions_list_order = feed_params.subscriptions_list_order;
            params.subscriptions_list_asc = feed_params.subscriptions_list_asc;
            $('#subscriptions_list_filter').val(params.subscriptions_list_filter);
        }
        xajax_fill_dialog_async(category,params);
    }
}

function set_mobile_preferences_category(id){
    $('#mobile_preferenes_categories').find('option').each(function(){
        if($(this).val() == id){
            set_preferences_category(id,($(this).data('ajax')==1)?true:false);
            return false;
        }
    });
}

function toggle_add_options(){
    if($('#add_subscription_options').is(':visible')){
        $('#add_subscription_options').hide();
        $('#add_subscription_options_more_button').html(_js("More"));
        createCookie('add_subscription_more_expanded',0,31);
    }else{
        $('#add_subscription_options').show();
        $('#add_subscription_options_more_button').html(_js("Less"));
        createCookie('add_subscription_more_expanded',1,31);
    }
}

function remove_unseen_class(id){
    var $ar = $('#article_' + id);
    if($ar.hasClass('article_unseen')){
        $ar.removeClass('article_unseen')
        var bgcolor = $ar.css('background-color');
        $ar.addClass('article_unseen')
        $('#article_' + id + ', #ad_' + id).animate({backgroundColor: bgcolor},1000, function(){
            $('#article_' + id + ', #ad_' + id).removeClass('article_unseen').css('background-color','');
        });
    }
}

function hide_submenus(){
    hide_add_to_bundle();
    hide_add_to_team_folder();
    hide_feed_suggestions();
    hide_send_article_to_device();
}

function show_add_to_bundle(id,div){
    hide_submenus();
    var pos = $(div).offset();
    $('#sm_add_to_bundle').css('top',pos.top);
    $('#sm_add_to_bundle').css('left',pos.left + $(div).outerWidth() + 'px');
    $('#sm_add_to_bundle').show();
    do_loading();
    xajax_fill_add_to_bundle(id);
}

function show_add_to_team_folder(id,div){
    hide_submenus();
    var pos = $(div).offset();
    $('#sm_add_to_team_folder').css('top',pos.top);
    $('#sm_add_to_team_folder').css('left',pos.left + $(div).outerWidth() + 'px');
    $('#sm_add_to_team_folder').show();
    do_loading();
    xajax_fill_add_to_team_folder(id);
}

function hide_add_to_bundle(){
    if($('#sm_add_to_bundle').is(':visible')){
        $('#sm_add_to_bundle').hide().html('<div class="loader loader_menu"></div>');
    }
}

function hide_add_to_team_folder(){
    if($('#sm_add_to_team_folder').is(':visible')){
        $('#sm_add_to_team_folder').hide().html('<div class="loader loader_menu"></div>');
    }
}

function show_feed_suggestions(id,div,is_subscription){
    hide_submenus();
    var pos = $(div).offset();
    $('#sm_feed_suggestions').css('top',pos.top);

    $('#sm_feed_suggestions').css('left',pos.left + $(div).outerWidth() + 'px');

    $('#sm_feed_suggestions').show();
    do_loading();
    xajax_fill_feed_suggestions(id,is_subscription);
}

function hide_feed_suggestions(){
    if($('#sm_feed_suggestions').is(':visible')){
        $('#sm_feed_suggestions').hide().html('<div class="loader loader_menu"></div>');
    }
}

function show_send_article_to_device(id,div){
    hide_submenus();
    var pos = $(div).offset();
    $('#sm_send_art_to_device').css('top',pos.top);

    $('#sm_send_art_to_device').css('left',pos.left + $(div).outerWidth() + 'px');

    $('#sm_send_art_to_device').show();
    do_loading();
    xajax_fill_send_art_to_device(id);
}

function hide_send_article_to_device(){
    if($('#sm_send_art_to_device').is(':visible')){
        $('#sm_send_art_to_device').hide().html('<div class="loader loader_menu"></div>');
    }
}

function push_article_to_device(article_id, push_token, device_name){
    do_loading();
    xajax_push_article_to_device(article_id, push_token, device_name);
}

function show_max_unread_menu(div,event){
    $('.inno_toolbar_button_submenu').each(function(){
        $(this).hide();
    });
    var pos = $(div).offset();
    $('#max_unread_menu').css('top',pos.top);
    if(float_left == 'left'){
        $('#max_unread_menu').css('left',pos.left + $(div).outerWidth() + 'px');
    }else{
        $('#max_unread_menu').css('left',$('#reader_pane').width() - $('#tree_pane').outerWidth() + 'px');
    }
    $('#max_unread_menu').show();
    if(!isie8){ event.stopPropagation(); }
}

function show_tree_width_menu(div,event){
    $('.inno_toolbar_button_submenu').each(function(){
        $(this).hide();
    });
    var pos = $(div).offset();
    $('#tree_width_menu').css('top',pos.top);
    if(float_left == 'left'){
        $('#tree_width_menu').css('left',pos.left + $(div).outerWidth() + 'px');
    }else{
        $('#tree_width_menu').css('left',$('#reader_pane').width() - $('#tree_pane').outerWidth() + 'px');
    }
    $('#tree_width_menu').show();
    if(!isie8){ event.stopPropagation(); }
}

function toggle_quick_preferences(){
    $('#preferences_quick_main').finish().slideToggle('fast');
}

function flush_unread_queue(){
    if(articles_for_read.length > 0){
        return 'asdas';
        xajax.call( 'xajax_read_article', { mode:'synchronous', parameters: [articles_for_read,0,feed_params] } );
    }
}

function console_log(){
    if(typeof console == 'undefined'){
        return;
    }
    if(window.LogRocket && window.LogRocket.log) {
      window.LogRocket.log.apply(console, arguments);
    }

  if(!is_dev){
        return;
    }
    try{
        console.log.apply(console, arguments);
    }catch(e){}
}

function play_audio(article_id,url,article_title,auto_play){
    show_dialog("audio_player_dialog",{article_id: article_id, url: url, article_title: article_title, auto_play: auto_play});
}

function open_context_menu(article_id){
    var article_context_menu = $('#inline_player_file_btns_' + article_id);
    if(article_context_menu.hasClass( 'hidden')) {
        $('#inline_player_file_btns_' + article_id).removeClass('hidden');
        $('#inline_player_file_btns_' + article_id).addClass('show').css('display', 'block');
    }
    else {
        $('#inline_player_file_btns_' + article_id).removeClass('show');
        $('#inline_player_file_btns_' + article_id).addClass('hidden').css('display', 'none');;
    }
}

function delete_audio(article_id,crc){
    xconfirm(_js("Are you sure")+'?','$("#autr_' + article_id + '_' + crc + '").hide();xajax_delete_audio(' + article_id + ',' + crc + ')');
}

function play_audio_inline(url,hash,video){
    if(currently_playing == hash){
        //$('#pa_img_' + currently_playing).removeClass('icon-stop').addClass('icon-play');
        $('#autr_' + currently_playing).removeClass('now_playing_tr');

        $('#audio_player')[0].pause();
        currently_playing = null;
    }

    if($('#ae_' + hash).html() == ''){
        if(video == 1){
            $('#ae_' + hash).html('<video id="pli_' + hash + '" autoplay preload="auto" controls="controls" src="' + url + '" type="video/mpeg" style="width:650px;"></audio>').show();
        }else{
            $('#ae_' + hash).html('<audio id="pli_' + hash + '" autoplay preload="auto" controls="controls" src="' + url + '" type="audio/mpeg" style="width:650px;"></audio>').show();
        }
        $('#pli_' + hash).mediaelementplayer({pauseOtherPlayers: true, pluginPath: 'include/mejs/', flashName: 'flashmediaelement.swf', startVolume: audio_player_volume});
        $('#pli_' + hash).on('volumechange',function(){
            var vol = $('#pli_' + hash)[0].volume;
            audio_player_volume = vol;
            createCookie('audio_player_volume',vol,31);
        });
    }else{
        $('#ae_' + hash).html('').hide();
    }
}

function starred_assign_tag(id){
    if(!id){
        var content = _js("Tag name")+':';
        content += '<p><input type="text" style="width:200px" id="stars_new_tag_name"></p>';
        dialog('stars_assign_tag_dialog',{content: content});
        $('#stars_new_tag_name').focus().select();

        return;
    }
    do_loading();
    xajax_starred_assign_tag(id);
}

function starred_assign_new_tag(){
    var text = $('#stars_new_tag_name').val();
    if(!text){
        xalert(_js("Please enter tag name."));
        $('#stars_new_tag_name').focus().select();
        return;
    }
    do_loading();
    xajax_starred_assign_tag(0,text);
}

function hide_am(){
    $('.am').hide();
}

function hide_sm(){
    $('.sm').hide();
}

function hide_smo(){
    $('.social_media_options').hide();
}

function print_article(id,pdf){
    var pdf_query = (pdf == 1) ? "&pdf=1" : "";
    if(pdf == 1){
        do_loading(_js("Generating PDF..."));
        var content = $('#article_contents_inner_' + id).html();
        xajax_print_pdf(id,content);
    }else{
        return open_share_window('/print.php?id=' + encode_article_id(id) + pdf_query,null,null,1,{content: '[CONTENT]'},id,pdf);
    }
}

function print_pdf_callback(fn,title){
    if(title.length > 1000){
        title = title.substr(0,1000);
    }
    document.location = '/pdf_download.php?fn=' + fn + '&title=' + encodeURIComponent(title);
}

function print_pdf_callback_zip(fn,title){
    document.location = '/zip_download.php?fn=' + fn + '&title=' + encodeURIComponent(title);
}

function print_csv_callback(fn,title){
    if(title.length > 1000){
        title = title.substr(0,1000);
    }

    document.location = '/csv_download.php?fn=' + fn + '&title=' + encodeURIComponent(title);
    stop_loading();
}

function show_article_menu(id,el,keep_left, from_article){
    // close_opened_menu();
    $('#list_menu').remove();
    $('#list_menu_article_shares').remove();

    setTimeout(function(){

        var article_title = addslashes($('#at_' + id).text());
        var data = $('#article_' + id).data();

        var menu = [];
        n = 0;

        if(!user_is_guest && data.ft != 'user_web_clips'){
            menu[n++] = {type: 'link', text: _js("Create rule"), click: "add_rule({rule_type: 1, rule_id:0, filter_type: 2, filter_id: " + parseInt(data.suid) +
                ", rule_conditions: [{match_field: 0, match_type: 2, match_text:'" + article_title + "'}]})"};
        }

        menu[n++] = {type: 'link', text: _js("Create note"), click: "edit_note(0, " + id + ")"};

        // if(data.sunk == 0 && show_keep_unread_checkbox == 0){
        //     menu[n++] = {type: 'link', text: (data.read == 0) ? _js("Mark as read") : _js("Mark as unread"), click: 'mark_read(' + id + ')'};
        // }

        if($('#article_' + id).data('d') == 1){
            menu[n++] = {type: 'link', icon: (data.brd == 1) ? 'icon-checkmark' : '', text: _js("Delete article"), click: 'delete_article(' + id + ')'};
        }

        // if(!user_is_guest){
        //     menu[n++] = {type: 'link', text: _js("Send to device")+' <span class="icon-arrow_right_small inno_toolbar_button_submenu_opener_icon"></span>', click: 'show_send_article_to_device(' + id + ',this)', dont_close_menu: true};
        //     menu[n++] = {type: 'link', text: _js("Email article"), click: 'show_dialog(\'send_email_dialog\',{article_id: ' + id + '})'};
        //     menu[n++] = {type: 'link', text: _js("Print article"), click: 'print_article(' + id + ',0)'};
        //     menu[n++] = {type: 'link', text: _js("Save as PDF"), click: 'print_article(' + id + ',1)'};
        // }

        // menu[n++] = {type: 'link', text: _js("Get link"), click: 'get_article_link(' + id + ')'};

      if(from_article === false) {
        if(!user_is_guest && (disable_social == 0 || forced_team_social_features == 1)){
            menu[n++] = {type: 'link', icon: (data.brd == 1) ? 'icon-checkmark' : '', text: _js("Broadcast article"), click: 'broadcast_article(' + id + ')'};
        }

        // if (data.pocket > -1) {
        //   menu[n++] = {
        //     type: 'link',
        //     icon: (data.pocket == 1) ? 'icon-checkmark' : '',
        //     text: sprintf(_js("In %s"), "Pocket"),
        //     click: 'pocket_article(' + id + ')'
        //   };
        // }
        // if (data.instapaper > -1) {
        //   menu[n++] = {
        //     type: 'link',
        //     icon: (data.instapaper == 1) ? 'icon-checkmark' : '',
        //     text: sprintf(_js("In %s"), "Instapaper"),
        //     click: 'instapaper_article(' + id + ')'
        //   };
        // }
        // if (data.evernote > -1) {
        //   menu[n++] = {
        //     type: 'link',
        //     icon: (data.evernote == 1) ? 'icon-checkmark' : '',
        //     text: sprintf(_js("In %s"), "Evernote"),
        //     click: 'evernote_article(' + id + ')'
        //   };
        // }
        // if (data.onenote > -1) {
        //   menu[n++] = {
        //     type: 'link',
        //     icon: (data.onenote == 1) ? 'icon-checkmark' : '',
        //     text: sprintf(_js("In %s"), "OneNote"),
        //     click: 'onenote_article(' + id + ')'
        //   };
        // }
        // if (data.dropbox > -1) {
        //   menu[n++] = {
        //     type: 'link',
        //     icon: (data.dropbox == 1) ? 'icon-checkmark' : '',
        //     text: sprintf(_js("In %s"), "Dropbox"),
        //     click: 'dropbox_article(' + id + ')'
        //   };
        // }
        // if (data.gdrive > -1) {
        //   menu[n++] = {
        //     type: 'link',
        //     icon: (data.gdrive == 1) ? 'icon-checkmark' : '',
        //     text: sprintf(_js("In %s"), "Google Drive"),
        //     click: 'gdrive_article(' + id + ')'
        //   };
        // }
      } else {
        menu[n++] = {type: 'link', icon: '', text: _js("Article layout & text"), click: 'toggle_text_preferences(' + id + ')'};
      }


        var line_added = false;


        if($('#article_' + id).data('suid') != 0 && feed_params.filter_type != 'channel' && feed_params.filter_type != 'search' && (from_article === false || view_style == 1)){
            if($('#article_' + id).prevAll('.ar.article_unreaded').not('.hidden').eq(0).is('div')){
                if(!line_added){
                    menu[n++] = {type: 'line'};
                    line_added = true;
                }
                menu[n++] = {type: 'link', text: _js("Mark above as read"), click: 'mark_read_direction(' + id + ',\'above\')'};
            }

            if(articles_order == 0 && group_article_list != 1 && $('#article_' + id).nextAll('.ar.article_unreaded').not('.hidden').eq(0).is('div')){
                if(!line_added){
                    menu[n++] = {type: 'line'};
                    line_added = true;
                }
                menu[n++] = {type: 'link', text: _js("Mark below as read"), click: 'mark_read_direction(' + id + ',\'below\')'};
            }

        }
        document.body.appendChild(inno_toolbar_button(false,false,'',menu));
        var menu_top = $(el).offset().top + $(el).outerHeight()
        if(direction == 'ltr' && !keep_left){
            $('#list_menu')
              .css({ width: '250px'})
              // .css('top',menu_top + 'px')
              // .css(float_right,($(document).width() - $(el).offset().left) + 'px')
              .css(float_left,'auto')
              .show();
        }else{
            $('#list_menu')
              .css({ maxWidth: '250px'})
              .css('top',menu_top + 'px')
              .css('left',($(el).offset().left) + 'px')
              .css('right','auto')
              .show();
        }

        new Popper($(el).get(0), $('#list_menu'), { placement: 'bottom-end' })
        opened_menu = 'list';
        // fix_menu_position('#list_menu');
    },10);
}

function get_mouse_button(e) {
    var evt = (e == null ? event : e);
    evt = evt || window.event;
    var clickType = 'left';
    if (evt.which) {
        if (evt.which==3) clickType='right';
        if (evt.which==2) clickType='middle';
    }else if (evt.button) {
        if (evt.button==2) clickType='right';
        if (evt.button==4) clickType='middle';
    }
    return clickType;
}

function article_title_click(id,e){
    if(get_mouse_button(e) == 'left'){
        toggle_articleview(id);
    }else if(get_mouse_button(e) == 'right'){
        toggle_articleview(id);
    }else if(get_mouse_button(e) == 'middle'){
        var url = get_article_url(id);
        open_url(url,true);
    }
    e.preventDefault();
}

function arlink_click(id,e){
    var button = get_mouse_button(e);
    if(click_scroll == 0 && button == 'middle'){
        // return false;
    }
    if(button == 'left' || button == 'middle'){
        $('#article_' + id).data('init',0);
        if($('#article_' + id).data('read') == 0 && click_mark == 1){
            // Because of stupid Firefox
            setTimeout(function(){
                mark_read(id,false,true);
            },10);
        }
        var view_styles_txt = ['List view', 'Expanded view', 'Column view', 'Card view', 'Magazine view'];
    }

    add_score_queue(id,'click');
}

function embed_audio_player(embed){
    var playing = !$('#audio_player')[0].paused;
    if(embed){
        $('#audio_player_wraper').appendTo($('#audio_player_dialog'));
    }else{
        $('#audio_player_wraper').appendTo($('#audio_player_dialog_player'));
    }
    if(playing){
        $('#audio_player')[0].play();
    }
}

function check_current_audio(){
    if(currently_playing){
        $('#autr_' + currently_playing).addClass('now_playing_tr');

    }
}

function check_player_button(){
    if(!$('#audio_player_button').is(':visible')){
        $('#audio_player_button').css('margin-' + float_right,'3px').fadeIn();
    }
}

function save_custom_site(){
    var post = {};
    post.add_site = 1;
    post.name = $('#custom_site_name').val();
    post.url = $('#custom_site_url').val();
    post.icon = $('#custom_site_icon').val();
    post.width = $('#custom_site_width').val();
    post.height = $('#custom_site_height').val();
    post.post = ($('#custom_site_post').is(':checked')) ? 1 : 0;

    if(post.name == ''){
        xalert(_js("Please enter a name"));
        $('#custom_site_name').focus();
        return;
    }
    if(post.url == ''){
        xalert(_js("Please enter URL!"));
        $('#custom_site_url').focus();
        return;
    }
    do_loading();
    xajax_fill_dialog('share_buttons_reorder_dialog',post);
}

function delete_custom_site(id){
    xconfirm(_js("Are you sure")+'?','do_loading();xajax_fill_dialog("share_buttons_reorder_dialog",{delete_site: 1, site_id: ' + id + '});');
}

function tree_issue(id,state){
    if(state == true && !$('#link_' + id).hasClass('tree_issue')){
        // if($('#inoreader_cl_div')[0] && $(this).text().indexOf('craigslist') !== -1){
        //  return;
        // }
        $('#link_' + id).addClass('tree_issue');
    }else if(state == false && $('#link_' + id).hasClass('tree_issue')){
        $('#link_' + id).removeClass('tree_issue');
    }
}

function show_oldest_first_info(){
    xalert(_js("When using the <b>Oldest first</b> sorting, you will see only articles newer than one month.") + _js("This is perfect if you want to catch up with a blog, but you don't want to start from the beginning.") + '<br><br>' + _js("If you want to see older articles, use our endless scrolling in <b>Newest first</b> mode or just do a search to find the article you are searching."),1);
}

function show_adv_match_info(){
    var html = '<div class="adv_match_wrapper">';
    html += '<div class="adv_match_heading">'+_js("Advanced search syntax")+'</div>';
    html += '<p>'+_js("Using advanced search syntax, you can build more powerful queries by using search operators.")+' '+_js("Here is a list of supported operators:")+'</p>';
    html += '<ul>';
    html += '<li><code>AND</code> - e.g. <code>hello AND world</code> '+_js("or")+' <code>hello && world</code></li>';
    html += '<li><code>NOT</code>- e.g. <code>hello NOT world</code> '+_js("or")+' <code>hello -world</code></li>';
    html += '<li><code>OR</code> - e.g. <code>hello OR world</code> '+_js("or")+' <code>hello || world</code></li>';
    html += '<li><code>Phrases</code> - e.g. <code>"hello world"</code></li>';
    html += '<li><code>Grouping</code> - e.g. <code>hello OR world (green AND blue)</code></li>';
    html += '</ul>';

    html += sprintf(_js("The default operator is AND, so the term %s will be interpreted as %s"),"<code>hello world</code>","<code>hello AND world</code>")+'.';
    html += '</div>';
    dialog('adv_match_info_dialog',{content: html});
}

function info_close(type,cookie_expire){
    if(!cookie_expire){
        cookie_expire = 365;
    }
    createCookie('consents_' + type,1,cookie_expire);
    $('#consent_' + type).remove();
    resize();
}

function show_keyboard_shortcuts(){
    show_dialog('keyboard_shortcuts_dialog');
}

function l(category,action,label,value){
    log_ga_event(category,action,label,value);
    log_matomo_event(category,action,label,value);
}

function log_ga_event(category,action,label,value){
    if(is_beta == 1){
        return;
    }
    if(!google_analytics_enabled){
        return;
    }

    gtag('event', action, {
        event_category: category,
        event_label: label,
        value: value
    });
}

function log_matomo_event(category,action,label,value){
    if(is_beta == 1){
        return;
    }

    if(!innologica_analytics_enabled){
        return;
    }

    if(_paq){
        _paq.push(['trackEvent', category, action, label, value]);
    }
}

function log_ga_hotkey(e){
    return; // Disable telemetry
    if(is_beta == 1){
        return;
    }
    e = e || window.event;
    var charCode = (typeof e.which == "number") ? e.which : e.keyCode;
    if(charCode > 0){
        var prefix = '';
        if(e.metaKey){
            prefix += 'Meta + ';
        }
        if(e.ctrlKey){
            prefix += 'Ctrl + ';
        }
        if(e.altKey){
            prefix += 'Alt + ';
        }
        if(e.shiftKey){
            prefix += 'Shift + ';
        }
        if(g_pressed){
            prefix += 'G then ';
        }

        var special_names = [];
        special_names[13] = 'Enter';
        special_names[32] = 'Space';
        special_names[27] = 'Esc';
        special_names[190] = 'Period';

        if(special_names[charCode]){
            var key_name = special_names[charCode];
        }else{
            var key_name = String.fromCharCode(charCode);
        }

        log_ga_event('Hotkeys',key_name);
    }
}

function encode_article_id(id){
    var hex = dechex(id);
    return str_pad(hex,16,'0','STR_PAD_LEFT');
}

function clear_add_subscription_settings(){
    $('#add_feed_auth_username').val('');
    $('#add_feed_auth_password').val('');
    $('#asoa').prop('checked',false);
    $('#add_subscription_options_authentication').css('display','none');
}

function set_audio_player_options(repeat,shuffle){
    var menu = [];
    var n = 0;

    menu[n++] = {type: 'heading', text: _js("Repeat")};
    menu[n++] = {type: 'link', icon: (repeat == 0) ? 'icon-checkmark' : null, text: _js("Repeat None"), click: "set_player_repeat(0);"};
    menu[n++] = {type: 'link', icon: (repeat == 1) ? 'icon-checkmark' : null, text: _js("Repeat All"), click: "set_player_repeat(1);"};
    menu[n++] = {type: 'link', icon: (repeat == 2) ? 'icon-checkmark' : null, text: _js("Repeat Current"), click: "set_player_repeat(2);"};

    if(repeat > 0){
        var shuffle_class = null;
    }else{
        var shuffle_class = 'inno_toolbar_button_menu_item inno_toolbar_button_menu_item_disabled';
    }

    menu[n++] = {type: 'line'};
    menu[n++] = {type: 'heading', text: _js("Shuffle")};
    menu[n++] = {type: 'link', icon: (shuffle == 0) ? 'icon-checkmark' : null, text: _js("No Shuffle"), click: (repeat > 0) ? "set_player_shuffle(0);" : "", class_name: shuffle_class};
    menu[n++] = {type: 'link', icon: (shuffle == 1) ? 'icon-checkmark' : null, text: _js("Shuffle"), click: (repeat > 0) ? "set_player_shuffle(1);" : "", class_name: shuffle_class};

    $('#audio_player_settings_menu').remove();
    $('#audio_player_dialog_buttonbar').prepend('<div id="audio_player_settings_menu"></div>');
    $('#audio_player_settings_menu').html(inno_toolbar_button('audio_player_settings_button',_js("Settings")+'<span class="icon-arrow_down_small"></span>','',menu, 'comment_notification_button'));
}

function set_player_repeat(val){
    if(val != audio_player_repeat){
        xajax_save_user_pref('audio_player_repeat',val);
    }
    audio_player_repeat = val;
    set_audio_player_options(audio_player_repeat,audio_player_shuffle);
}

function set_player_shuffle(val){
    if(val != audio_player_shuffle){
        xajax_save_user_pref('audio_player_shuffle',val);
    }
    audio_player_shuffle = val;
    set_audio_player_options(audio_player_repeat,audio_player_shuffle);
}

function set_broadcast_priv(val,id){
    onboard_stop_tour();
    broadcast_privacy = val;
    broadcast_teams = '';
    set_broadcast_options(id);
}

function set_broadcast_team(id,op){
    onboard_stop_tour();
    broadcast_privacy = 2;
    if(broadcast_teams != ''){
        var broadcast_teams_array = array_filter(broadcast_teams.split(','));
    }else{
        var broadcast_teams_array = [];
    }
    if(op == 0){
        if(broadcast_teams_array.length > 1){
            for(var i in broadcast_teams_array){
                if(broadcast_teams_array[i] == id){
                    broadcast_teams_array.splice(i,1);
                }
            }
        }
    }else{
        broadcast_teams_array.push(id.toString());
    }


    broadcast_teams_array = [...new Set(broadcast_teams_array)];
    broadcast_teams = broadcast_teams_array.join(',');

    // set_broadcast_options(id,true);
}

function set_broadcast_options(id,only_team){
    var menu = [];
    var n = 0;

    if(disable_social == 1){
        only_team = true;
    }

    if(only_team && !broadcast_teams){
        set_broadcast_team(joined_teams[0].id,1);
    }

    var broadcasted = $('#article_' + id).data('brd');
    var broadcast_data = $('#article_' + id).data('bdata');
    if(broadcasted && broadcast_data && broadcast_data.teams && broadcast_data.teams.length > 0){
        var broadcast_teams_array = broadcast_data.teams;
    }else{
        if(broadcast_teams != ''){
            var broadcast_teams_array = broadcast_teams.split(',');
        }else{
            var broadcast_teams_array = [];
        }
    }

    if(!only_team){
        menu[n++] = {type: 'heading', text: _js("Personal channel")};
        menu[n++] = {type: 'link', icon: (broadcast_privacy == 0) ? 'icon-checkmark' : '', title: _js("Public broadcasts are visible to all users viewing your profile"), text: _js("Public"), click: (broadcast_privacy != 0) ? "set_broadcast_priv(0, " + id + ")" : null};
        menu[n++] = {type: 'link', icon: (broadcast_privacy == 1) ? 'icon-checkmark' : '', title: _js("Private broadcasts are only visible to your connections"), text: _js("My connections"), click: (broadcast_privacy != 1) ? "set_broadcast_priv(1, " + id + ")" : null};
    }

    menu[n++] = {type: 'heading', text: _js("Team channels")};

    for(var i in joined_teams){
        menu[n++] = {type: 'link', icon: (in_array(joined_teams[i].id,broadcast_teams_array)) ? 'icon-checkmark' : '', text: joined_teams[i].name, click: (in_array(joined_teams[i].id,broadcast_teams_array)) ? 'set_broadcast_team(' + joined_teams[i].id + ',0)' : 'set_broadcast_team(' + joined_teams[i].id + ',1)'};
    }

    if(broadcasted){
        if(Array.isArray(id)){
            menu[n++] = {type: 'link',  title: _js("Stop broadcast"), text: '<span class="redlink">' + _js("Stop broadcast") + '</span>', click: 'broadcast_article_undo(' + JSON.stringify(id) + ');'};
        }else{
            menu[n++] = {type: 'link',  title: _js("Stop broadcast"), text: '<span class="redlink">' + _js("Stop broadcast") + '</span>', click: 'broadcast_article_undo(' + id + ');'};
        }
    }

    if(joined_teams.length > 0){
        menu[n++] = {type: 'line'};
    }
    menu[n++] = {type: 'link', icon: 'icon-people_crowd', text: _js("Manage team"), click: "inno_dialog_close_all();view_teams();"};

    if(broadcast_privacy == 2){
        if(broadcast_teams_array.length > 0){
            var broadcast_teams_array_names = [];
            for(var i in joined_teams){
                if(in_array(joined_teams[i].id,broadcast_teams_array)){
                    broadcast_teams_array_names.push(joined_teams[i].name);
                }
            }
            var caption = '<span class="icon14 icon-people_crowd"></span> ' + broadcast_teams_array_names.join(', ');
        }else{
            var caption = '<span class="icon14 icon-people_crowd"></span> '+_js("My team channels");
        }
    }else{
        if(broadcast_privacy == 1){
            var caption = '<span class="icon14 icon-people_inline"></span> '+_js("My connections");
        }else{
            var caption = '<span class="icon14 icon-planet"></span> '+_js("Public");
        }
    }

    $('#broadcast_settings_menu').remove();
    $('#broadcast_dialog_buttonbar').prepend('<div id="broadcast_settings_menu"></div>');
    $('#broadcast_settings_menu').html(inno_toolbar_button('broadcast_privacy_settings_button',caption + '<span class="icon-arrow_down_small"></span>','',menu, 'comment_notification_button'));

    if(joined_teams.length > 0 && teams_privacy_onboarding_shown == 0){
        onboard_start_tour_teams_privacy();
        teams_privacy_onboarding_shown = 1;
        createCookie('teams_privacy_onboarding_shown',1);
    }
}

function toggle_auto_dark_theme(){
    auto_dark_theme = auto_dark_theme == 1 ? 0 : 1;
    if(auto_dark_theme == 0){
        $('#profile_menu_auto_dark_theme_checkbox').prop('disabled','disabled');
    }
    xajax_save_user_pref('auto_dark_theme',auto_dark_theme);

    init_auto_dark_theme();
}

function init_auto_dark_theme(){
    $('#profile_menu_auto_dark_theme_checkbox').prop('checked', auto_dark_theme == 1 ? 'checked' : '');
    $('#profile_menu_themes_wrapper').removeClass('auto_dark_mode_detected');
    $('#fo_tp_buttons_inner').removeClass('auto_dark_mode_detected');
    $('#profile_menu_auto_dark_theme_checkbox').prop('disabled','');

    if(auto_dark_theme == 1 && auto_dark_theme_on_hold == false){
        if(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches){
            if(theme != 4){
                temporary_theme = theme;
                set_theme(4,true);
            }
            $('#profile_menu_themes_wrapper').addClass('auto_dark_mode_detected').removeClass('manual_dark_theme_set');
            $('#fo_tp_buttons_inner').addClass('auto_dark_mode_detected').removeClass('manual_dark_theme_set');
            tippy_profile_menu_themes_container = tippy('#profile_menu_themes_container_wrapper', {content: _js('Auto dark theme is currently active.')});
            tippy_footer_menu_themes_container = tippy('#footer_menu_themes_container', {content: _js('Auto dark theme is currently active.') + ' ' + _js('You can turn it off from the Profile menu.')});
        }else{
            if(temporary_theme){
                set_theme(temporary_theme,true);
                temporary_theme = null;
            }else{
                xajax_set_temporary_theme(0);
            }
            if(tippy_profile_menu_themes_container){
                tippy_profile_menu_themes_container[0].destroy();
                tippy_profile_menu_themes_container = null;
            }
            if(tippy_footer_menu_themes_container){
                tippy_footer_menu_themes_container[0].destroy();
                tippy_footer_menu_themes_container = null;
            }
        }
    }else{
        if(tippy_profile_menu_themes_container){
            tippy_profile_menu_themes_container[0].destroy();
            tippy_profile_menu_themes_container = null;
        }
        if(tippy_footer_menu_themes_container){
            tippy_footer_menu_themes_container[0].destroy();
            tippy_footer_menu_themes_container = null;
        }

        if(temporary_theme){
            set_theme(temporary_theme,true);
            xajax_set_temporary_theme(0);
            temporary_theme = null;
            if(theme == 4){
                $('#profile_menu_themes_wrapper').addClass('manual_dark_theme_set');
                $('#fo_tp_buttons_inner').addClass('manual_dark_theme_set');
            }else{
                $('#profile_menu_themes_wrapper').removeClass('manual_dark_theme_set');
                $('#fo_tp_buttons_inner').removeClass('manual_dark_theme_set');
            }
            tippy('#profile_menu_auto_dark_theme_checkbox_wrapper');
        }
    }

    // This doesn't work... it has to be checked some day
    if(auto_dark_theme_on_hold){
        $('#profile_menu_auto_dark_theme_checkbox').prop('checked','').prop('disabled','disabled');
        if(tippy_auto_dark_theme_checkbox && tippy_auto_dark_theme_checkbox[0]){
            tippy_auto_dark_theme_checkbox[0].setContent(_js('Dark theme selected manually.'));
        }
    }else{
        if(tippy_auto_dark_theme_checkbox && tippy_auto_dark_theme_checkbox[0]){
            tippy_auto_dark_theme_checkbox[0].setContent(_js('Automatically switch to dark theme based on your current OS theme.'));
        }
        if(auto_dark_theme){
            $('#profile_menu_auto_dark_theme_checkbox').prop('checked','checked');
        }else{
            $('#profile_menu_auto_dark_theme_checkbox').prop('checked','');
        }
    }
}

function set_theme(val,temporary){
    if(theme == val){
        return;
    }
    var old_theme = theme;
    theme = val;

    if(!temporary){
        xajax_save_user_pref('theme',theme);
        if(theme == 4){
            $('#profile_menu_themes_wrapper').addClass('manual_dark_theme_set');
            $('#fo_tp_buttons_inner').addClass('manual_dark_theme_set');
            if(auto_dark_theme){
                auto_dark_theme_on_hold = true;
                init_auto_dark_theme();
            }
            if(tippy_auto_dark_theme_checkbox && tippy_auto_dark_theme_checkbox[0]){
                tippy_auto_dark_theme_checkbox[0].setContent(_js('Dark theme selected manually.'));
            }
            $('#profile_menu_auto_dark_theme_checkbox').prop('checked','').prop('disabled','disabled');
        }else{
            $('#profile_menu_themes_wrapper').removeClass('manual_dark_theme_set');
            $('#fo_tp_buttons_inner').removeClass('manual_dark_theme_set');
            $('#profile_menu_auto_dark_theme_checkbox').prop('disabled','');
            if(tippy_auto_dark_theme_checkbox && tippy_auto_dark_theme_checkbox[0]){
                tippy_auto_dark_theme_checkbox[0].setContent(_js('Automatically switch to dark theme based on your current OS theme.'));
            }
            if(auto_dark_theme){
                auto_dark_theme_on_hold = false;
                if(old_theme == 4 && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches){
                    toggle_auto_dark_theme();
                }else{
                    init_auto_dark_theme();
                }
            }
        }
        tippy('#profile_menu_auto_dark_theme_checkbox_wrapper');

    }else{
        xajax_set_temporary_theme(theme);
    }
    init_theme();
    var theme_name = 'aqua';
    if(val == 2){
        theme_name = 'light';
    }else if(val == 3){
        theme_name = 'sepia';
    }else if(val == 4){
        theme_name = 'dark';
    }

    $('img').each(function(){
        var src = $(this).attr('src');
        if(src && src.indexOf('/images/') === 0){
            var new_src = src.replace(/-light\.|-aqua\.|-dark\.|-sepia\./,'-' + theme_name + '.');
            if(new_src != src){
                $(this).attr('src', new_src);
            }
        }
    });


    $('#reader_pane').find('.article_magazine_picture').each(function(){
        var src = $(this).css('background-image');
        if(src.indexOf('/images/') !== -1){
            var new_src = src.replace(/-light\.|-aqua\.|-dark\.|-sepia\./,'-' + theme_name + '.');
            if(new_src != src){
                $(this).css('background-image', new_src);
            }
        }
    });
}

function profile_menu_select_current_theme(){
    $('#profile_menu_themes_wrapper').find('.current_theme').removeClass('current_theme');
    $('#profile_menu_theme_' + theme).addClass('current_theme');
    $('#fo_tp_buttons_inner').find('.current_theme').removeClass('current_theme');
    $('#fo_tp_theme_' + theme).addClass('current_theme');
}

function init_theme(){
    $('#theme_css').attr('id','theme_css_old');
    if(theme == 1){
        theme_is_dark = 0;
    }else if(theme == 2){
        theme_is_dark = 0;
    }else if(theme == 3){
        theme_is_dark = 0;
    }else if(theme == 4){
        theme_is_dark = 1;
    }
    switch_css('theme_css_',theme);
    profile_menu_select_current_theme();

    var switch_timeout = window_focus ? 202 : 1000;
    setTimeout(function(){ // Chrome bugs
        switch_css('theme_css_',theme,true);
    },switch_timeout);

    $('#reader_pane').find('.column_view_thumbnail').each(function(){
        var src = $(this).attr('src');
        if(src){
            if(src.indexOf('image_placeholder_') == -1){
                return true;
            }
            var new_src = '/images/image_placeholder_';
            if(display_density == 0){
                new_src += '150x150';
            }else if(display_density == 1){
                new_src += '120x120';
            }else if(display_density == 2){
                new_src += '100x100';
            }
            if(theme == 1){
                new_src += '_aqua';
            }else if(theme == 3){
                new_src += '_sepia';
            }else if(theme == 4){
                new_src += '_dark';
            }
            new_src += '.png';
            $(this).attr('src',new_src);
            $(this).parent().css('background-image','url(' + new_src + ')');
        }
    });

    // if(theme == 2){
    //     $('#tree_pane').removeClass('os-theme-light').addClass('os-theme-dark');
    // }else{
    //     $('#tree_pane').removeClass('os-theme-dark').addClass('os-theme-light');
    // }

    $('body').removeClass('theme_aqua');
    $('body').removeClass('theme_light');
    $('body').removeClass('theme_sepia');
    $('body').removeClass('theme_dark');
    $('body').addClass('theme_' + get_theme_name());
}

var params_hash = {};

function bind_right_click(params){
    if(!tree_right_click){
        return;
    }
    if(device_type == 'phone'){
        return;
    }

    $('#tree_pane').find('.parent_div_inner[id=pdinner_' + params.hash + ']').on('contextmenu',function(event){
        tree_context_menu_opener(params,event);
        return false;
    });

    params_hash[params.hash] = params;

    if(!params.parent_id){
        params.parent_id = 0;
    }
}

function article_feed_info_click(type,id,el,event,rss_url,tracked_search_id){
    var params = {};
    if(type == 'subscription'){
        params.hash = '1_' + id;
    }

    params.filter_type = type;
    params.filter_id = id;
    params.rss_url = rss_url;
    params.tracked_search_id = tracked_search_id;
    params.heading = '#article_feed_info_link_' + get_aid();

    params_hash[params.hash] = params;

    event.clientX = $(el).offset().left + $(el).outerWidth();
    event.clientY = $(el).offset().top;

    setTimeout(function(){
        tree_context_menu_opener(params,event);
    },10);

}

function tree_context_menu_opener(params,event){
    close_opened_menu();
    if($('#list_menu')[0]){
        $('#list_menu').remove();
    }

    var section_menu = get_section_menu(params_hash[params.hash]);

    document.body.appendChild(inno_toolbar_button(false,false,'',section_menu));
    if(direction == 'ltr'){
        $('#list_menu').css('top',event.clientY).css('left',(event.clientX + 2) + 'px').css(float_right,'auto').show();
    }else{
        $('#list_menu').css('top',event.clientY).css('right',($(window).width() - event.clientX + 2) + 'px').css(float_right,'auto').show();
    }

    opened_menu = 'list';
    fix_menu_position('#list_menu');
}

function gadget_overview_check_feeds(subs){
    for(var i in subs){
        var hash = '1_' + subs[i];
        if(subscriptions_cnt[hash].parents != undefined){
            var html = '';
            for(var p in subscriptions_cnt[hash].parents){
                var title = $('#link_' + subscriptions_cnt[hash].parents[p]).text();
                var unread_cnt = $('#unread_cnt_' + subscriptions_cnt[hash].parents[p]).text();
                var folder_id = subscriptions_cnt[hash].parents[p].replace(/0\_/,'');

                if(html !=''){
                    html += ' ,';
                }
                html += '<a class="bluelink" href="javascript:void(0)" onclick="view_tree_element(\'folder\',' + folder_id + ',1);focusit(\'' + subscriptions_cnt[hash].parents[p] + '\',true);">' + title + ' <span class="gadget_overview_unread_count">(' + unread_cnt + ')</span></a>';
            }

            $('#gadget_overview_see_more_placeholder_' + subs[i]).html(html);
        }
    }
}

function gadget_overview_open_article(id,sid){
    set_feed_param('opened_article',id);
    view_tree_element('subscription',sid,0);
}

var gadget_refresh_queue = [];
var gadget_auto_refresh_timers = [];

function gadget_auto_refresh_init(id,column,timer){
    if(gadget_auto_refresh_timers[id]){
        clearTimeout(gadget_auto_refresh_timers[id]);
    }

    gadget_auto_refresh_timers[id] = setTimeout(function(){
        gadget_auto_refresh(id,column);
    },timer);
}

function gadget_auto_refresh(id,column){
    if(feed_params.filter_type != 'dashboard'){
        return;
    }
    if(window_focus == true){
        gadget_refresh_queue = [];
        xajax_user_dashboard('run_gadget',id,column);
    }else{
        gadget_refresh_queue.push({id:id,column:column});
    }
}

function gadget_check_queue(){
    if(gadget_refresh_queue && gadget_refresh_queue.length > 0){
        for(var i in gadget_refresh_queue){
            xajax_user_dashboard('run_gadget',gadget_refresh_queue[i].id,gadget_refresh_queue[i].column);
        }
    }
    gadget_refresh_queue = [];
}

function gadget_set_title(id,title){
    var decoded_title = $('<textarea />').html(title).text();
    $('#all_gad_' + id).find('.header_name').eq(0).html(decoded_title);
}

function tree_collapse_all(){
    eraseCookie('tree_expands');
    reload_tree();
}

function tree_expand_all(){
    createCookie('tree_expands','all',999);
    reload_tree();
}

var uc_timeout = null;

function uc_hover(el,hover,event){
    if($(el).hasClass('uc_undo')){
        return;
    }

    // if($.trim($(el).children().first().text()) == ''){
    //     return;
    // }

    if(hover){
        // $(el).children().first().hide();
        //$(el).children().last().show();
        $(el).children().first().css('visibility', 'hidden');
        $(el).children().last().css('visibility', 'visible');
    }else{
        //$(el).children().first().show();
        $(el).children().last().css('visibility', 'hidden');
        $(el).children().first().css('visibility', 'visible');
    }
}

var uc_last_undo_element = null;

function uc_click(type,id,event,el){
    if(type == 0){
        var filter_type = 'folder';
    }else if(type == 1){
        var filter_type = 'subscription';
    }

    if(uc_timeout){
        clearTimeout(uc_timeout);
    }

    $('.unread_cnt_hover').css('visibility', 'hidden');

    if(uc_last_undo_element && uc_last_undo_element != el){
        $(uc_last_undo_element).find('.icon16').eq(0).removeClass('icon-checkmark_with_backarrow_thin').addClass('icon-checkmark');
        $(uc_last_undo_element).removeClass('uc_undo');
        $(uc_last_undo_element).children().last().css('visibility', 'hidden');
        $(uc_last_undo_element).children().first().css('visibility', 'visible');
        uc_last_undo_element = null;
    }

    if($(el).hasClass('uc_undo')){
        undo_mark_read(filter_type,id);

        $(el).find('.icon16').eq(0).removeClass('icon-checkmark_with_backarrow_thin').addClass('icon-checkmark');
        $(el).removeClass('uc_undo');

        $(el).children().last().css('visibility', 'hidden');
        $(el).children().first().css('visibility', 'visible');

        $(el).attr('title',_js("Mark as read"));
    }else{
        mark_read_from_tree(filter_type,id);
        $(el).find('.icon16').eq(0).removeClass('icon-checkmark').addClass('icon-checkmark_with_backarrow_thin');

        $(el).children().first().css('visibility', 'hidden');
        $(el).children().last().css('visibility', 'visible');

        $(el).addClass('uc_undo');
        uc_last_undo_element = el;

        uc_timeout = setTimeout(function(){
            $(el).find('.icon16').eq(0).removeClass('icon-checkmark_with_backarrow_thin').addClass('icon-checkmark');
            $(el).removeClass('uc_undo');
            $(el).children().last().css('visibility', 'hidden');
            $(el).children().first().css('visibility', 'visible');
            uc_last_undo_element = null;
            $(el).attr('title',_js("Mark as read"));
        },10000);
        $(el).attr('title',_js("Undo"));
    }

    if(!isie8){ event.stopPropagation(); }
}

function dashboard_operation(operation,params){
    var dashboard_id = 0;
    var dashboard_name = '';
    var origin_dashboard_id = 0;
    var dialog_params = {};
    if(operation == 'new'){

    }else if(operation == 'copy'){
        origin_dashboard_id = params.origin_dashboard_id;
        dashboard_name = params.origin_dashboard_name + ' ('+_js("Copy")+')';
    }else if(operation == 'delete'){
        xconfirm(_js("Delete current dashboard?"),"xajax_user_dashboard('delete'," + params.dashboard_id + ");");
        return;
    }else{
        dashboard_id = params.dashboard_id;
        dashboard_name = params.dashboard_name;
    }

    dialog_params.content = '';
    dialog_params.content += '  <form name="dashboard_form" id="dashboard_form" onsubmit="save_dashboard();return false;">';
    dialog_params.content += '      <table align="center">';
    dialog_params.content += '          <tr>';
    dialog_params.content += '              <td>';
    dialog_params.content += '                  '+_js("Dashboard name")+':';
    dialog_params.content += '              </td>';
    dialog_params.content += '          </tr>';
    dialog_params.content += '          <tr>';
    dialog_params.content += '              <td>';
    dialog_params.content += '                  <input type="hidden" name="dashboard_operation" id="dashboard_operation" value="' + operation + '">';
    dialog_params.content += '                  <input type="hidden" name="dashboard_id" id="dashboard_id" value="' + dashboard_id + '">';
    dialog_params.content += '                  <input type="hidden" name="origin_dashboard_id" id="origin_dashboard_id" value="' + dashboard_id + '">';
    dialog_params.content += '                  <input type="text" style="width:200px;" name="dashboard_name" id="dashboard_name" value="' + dashboard_name + '">';
    dialog_params.content += '              </td>';
    dialog_params.content += '          </tr>';
    dialog_params.content += '      </table>';
    dialog_params.content += '  </form>';

    dialog('dashboard_dialog',dialog_params);
}

function save_dashboard(){
    var operation = $('#dashboard_operation').val();
    var dashboard_id = $('#dashboard_id').val();
    var origin_dashboard_id = $('#origin_dashboard_id').val();
    var dashboard_name = $('#dashboard_name').val();
    if(dashboard_name == ''){
        xalert(_js("Please enter dashboard name!"));
        $('#dashboard_name').focus().selec();
        return;
    }
    inno_dialog_close('dashboard_dialog');
    do_loading();
    if(operation == 'new'){
        xajax_user_dashboard('new',0,dashboard_name);
    }else if(operation == 'copy'){
        xajax_user_dashboard('copy',origin_dashboard_id,dashboard_name);
    }else if(operation == 'rename'){
        xajax_user_dashboard('rename',dashboard_id,dashboard_name);
    }
}

function undo_mark_read(type, id){
    if(uc_last_undo_element){
        $(uc_last_undo_element).find('.icon16').eq(0).removeClass('icon-checkmark_with_backarrow_thin').addClass('icon-checkmark');
        $(uc_last_undo_element).removeClass('uc_undo');
        $(uc_last_undo_element).children().last().css('visibility','hidden');
        $(uc_last_undo_element).children().first().css('visibility','visible');
        $(uc_last_undo_element).attr('title',_js("Mark as read"));
        uc_last_undo_element = null;
    }
    do_loading();
    xajax_undo_mark_read({filter_type : type, filter_id: id});
    Snackbar.close();
}

function undo_mark_read_response(success,params){
    if(success){
        // create_bottom_notification(_js("Undo successful"),'info',true);
        if(params.filter_type == feed_params.filter_type && params.filter_id == feed_params.filter_id){
            print_articles();
        }
    }else{
        create_snackbar(_js("Undo unsuccessful"),_js("Dismiss"),false,3000);
    }
}

function add_subscription_assign_folders_save(id){
    var folders = [];
    var new_folder = null;
    $('.afl_checkbox').each(function(){
        if($(this).is(':checked')){
            folders.push($(this).val());
        }
    });
    if($('#afl_0_name').val() != ''){
        new_folder = $('#afl_0_name').val();
    }
    do_loading();
    xajax_assign_folder(id,folders,1,new_folder,true);
    inno_dialog_close('add_subscription_assign_folders_dialog');
}

function add_subscription_choose_folders(id){
    var html = '';
    var folders = get_folders_from_tree(false,true);

    if(folders && folders.length > 0){
        html += '   <div class="filter_folders_wrapper">';
        html += '     <label class="mb-1 d-block" for="add_subscription_choose_folders_filter_input">'+ _js("Choose folders")+'</label>';
        html += '     <div class="filter_folders_input">';
        html += '       <input id="add_subscription_choose_folders_filter_input" class="mb-2" type="text" placeholder="'+_js("Filter folders")+'..." onkeyup="add_subscription_choose_folders_filter(this.value)">';
        html += '       <span class="icon-loupe graylink"></span>';
        html += '     </div>';
        html += '   </div>';

        for(var i in folders){
            html += '<div class="add_folder_line">';
            html += '<input class="afl_checkbox" type="checkbox" id="afl_' + folders[i].id + '" value="' + folders[i].id + '"> <label for="afl_' + folders[i].id + '">' + folders[i].name + '</label>';
            html += '</div>';
        }
    }


    html += '<div class="add_folder_line_create">';
    html += '<input type="checkbox" id="afl_0" value="0"> <input id="afl_0_name" class="mt-2" type="text" onkeyup="if(this.value){document.getElementById(\'afl_0\').checked=true}else{document.getElementById(\'afl_0\').checked=false}" placeholder="'+_js("New folder name...")+'" onkeydown=\"if(catch_enter(event))add_subscription_assign_folders_save(' + id + ');\">';
    html += '</div>';

    close_bottom_notification();
    dialog('add_subscription_assign_folders_dialog',{content: html, subscription_id: id});
    $('#add_subscription_choose_folders_filter_input').focus().select();
}

function add_subscription_choose_folders_filter(text){
    $('.add_folder_line').each(function(){
        if(text == '' || $(this).find('label').eq(0).text().toLowerCase().indexOf(text.toLowerCase()) != -1){
            $(this).show();
        }else{
            $(this).hide();
        }
    });
}

function spc_finish(checked){
    create_bottom_notification(_js("Reload the current section to see the changes"),'info',true);
    if(checked == 1){
        menu_checkbox_check('#spc_checkbox');
    }else{
        menu_checkbox_uncheck('#spc_checkbox');
    }
}

function build_comment_notification_menu(id,unsubscribed,see_public_comments){
    var menu = [];
    var n = 0;
    if(unsubscribed == 0){
        menu[n++] = {type: 'link', icon: 'icon-checkmark' , text: _js("Notifications"), click: "xajax_print_comments('" + id + "',1,false,false,1)"};
    }else{
        menu[n++] = {type: 'link', text: _js("Notifications"), click: "xajax_print_comments('" + id + "',1,false,false,0)"};
    }

    if(see_public_comments == 1){
        menu[n++] = {div_id: 'spc_checkbox', type: 'link', icon: 'icon-checkmark' , text: _js("Show public comments"), click: "xajax_save_user_pref('see_public_comments',0,'spc_finish(0);build_comment_notification_menu(" + id + "," + unsubscribed + ",0)"};
    }else{
        menu[n++] = {div_id: 'spc_checkbox', type: 'link', text: _js("Show public comments"), click: "xajax_save_user_pref('see_public_comments',1,'spc_finish(1)');build_comment_notification_menu(" + id + "," + unsubscribed + ",1)"};
    }

    $('#comment_email_settings_' + id).html(inno_toolbar_button('comments_notifications_button_' + id,'<span class="icon16 icon-arrow_down_small"></span>','',menu,'comment_notification_button'));

}

function build_comment_privacy_menu(id,private){
    if($('#article_' + id).data('tm') != null){
        var menu = function(){ xalert(_js("Comments on team broadcasts are only visible to people in the same channel.")); };

        var teams = JSON.parse($('#article_' + id).attr('data-tm'));
        var broadcast_teams_array_names = [];
        for(var i in teams){
            broadcast_teams_array_names.push(teams[i]);
        }
        var caption = '<span class="icon14 icon-people_crowd" title="'+_js("Comments on team broadcasts are only visible to people in the same channel.")+'"></span> ' + broadcast_teams_array_names.join(', ');
    }else{
        var menu = [];
        var n = 0;
        private_commenting_local = (private != undefined) ? private : private_commenting;

        menu[n++] = {type: 'link', icon: (private_commenting_local == 0) ? 'icon-checkmark' : '', title: _js("Public comments are visible to all registered users reading this article"), text: _js("Public"), click: (private_commenting_local == 1) ? "set_comment_priv(0,'" + id + "')" : null};
        menu[n++] = {type: 'link', icon: (private_commenting_local == 1) ? 'icon-checkmark' : '', title: _js("Private comments are only visible to your connections"), text: _js("My connections"), click: (private_commenting_local == 0) ? "set_comment_priv(1,'" + id + "')" : null};

        if(private_commenting_local == 1){
            var caption = '<span class="icon14 icon-people_inline"></span> '+_js("My connections")+'<span class="icon-arrow_down_small">';
        }else{
            var caption = '<span class="icon14 icon-planet"></span> '+_js("Public")+'<span class="icon-arrow_down_small">';
        }
    }
    $('div.comment_privacy_menu[id=comment_privacy_menu_' + id + ']').each(function(){
        $(this).html(inno_toolbar_button('comments_privacy_button_' + id,caption + '</span>','',menu,'comment_privacy_button'));
    });
}

var css_cache = [];
function switch_css(prefix,id,no_transform){
    if(!no_transform){
        $('head').append('<style id="theme_transition" type="text/css">* { transition: color 200ms ease-out; transition: background-color 200ms ease-out; transition: border: 200ms ease-out; transition: border: 200ms ease-out; }</style>');
    }

    var indexes = [1,2,3,4];
    for(var i=0;i<=3;i++){
        var theme_id = indexes[i];
        $('link[title=' + prefix + theme_id + ']').prop('rel','alternate stylesheet').prop('disabled',true);
    }
    $('link[title=' + prefix + id + ']').prop('rel','stylesheet').prop('disabled',false);

    if(!no_transform){
        setTimeout(function(){
            $("#theme_transition").remove();
        },201);
    }
}

function highlight_comment(id){
    if(theme_is_dark){
        $('#comment_right_' + id).effect('highlight',{ color: "#57544B" });
    }else{
        $('#comment_right_' + id).effect('highlight');
    }
}

function scroll_to_comment(id){
    if(view_style == 2){
        var container = $('#three_way_contents');
    }else if(view_style == 3){
        var container = $('#article_dialog');
    }else{
        var container = $('#reader_pane');
    }
    setTimeout(function(){
        $(container).scrollTo($('#user_comment_id_' + id),250,{axis : 'y', offset: {top:-50, left: 0}, easing:'easeOutQuint'});

        if(!$('#comment_right_' + id).is(':animated')){
            if(theme_is_dark){
                $('#comment_right_' + id).effect('highlight',{ color: "#57544b" },3000);
            }else{
                $('#comment_right_' + id).effect('highlight',{},3000);
            }
        }
    },500);
}


function fix_heading_title(params){
    if(params.filter_type == feed_params.filter_type && params.filter_id == feed_params.filter_id){
        var temp_icon = $('#sb_rp_heading').find('.sb_rp_heading_icon')[0];
        if(temp_icon){
            temp_icon = temp_icon.outerHTML;
        }
        var temp_arrow = $('#sb_rp_heading').find('.icon-arrow_down_small')[0];
        if(temp_arrow){
            temp_arrow = temp_arrow.outerHTML;
        }
        $('#sb_rp_heading').text(params.title);
        if(temp_icon){
            $('#sb_rp_heading').prepend(temp_icon);
        }
        if(temp_arrow){
            $('#sb_rp_heading').append(temp_arrow);
        }
    }
    if(params.filter_type == 'folder'){
        if($('#linkdiv_0_' + params.filter_id)[0] && $('#linkdiv_0_' + params.filter_id).data('folderid')){
            $('#linkdiv_0_' + params.filter_id).data('folderid',params.title.replace(/\"/,'\"'));
            set_location_hash('/folder/' + encodeURIComponent($('#linkdiv_0_' + params.filter_id).data('folderid')));
        }
    }
}

function check_comments_disclaimer(el){
    if(!comments_disclaimer_read || joined_teams){
        comments_disclaimer_read = 1;
        createCookie('comments_disclaimer_read',1,365);
        if(joined_teams){
            return true;
        }
    }else{
        return true;
    }
    var html = '';

    html += '<div style="line-height:140%;">';
    html += '<h2>'+_js("Please read carefully!")+'</h2>';
    html += '<p>'+_js("Comments are public by default.")+' ' + sprintf(_js("This means that other %s users reading this feed can see them."),application_name) + ' ' + _js("You can change this by setting the privacy before commenting")+':</p>';
    html += '<img src="/images/screenshots/comments_privacy.png" style="width:220px;height:117px">';

    html += '<p>';
    html += _js("If you want to see only comments from your connections, go to <b>Preferences -> Profile</b> and turn off <b>Public comments</b> option.");
    html += '</p>';

    html += '<h2>'+_js("Community rules")+'</h2>';

    html += '<p>';
    html += _js("By using the comments section you agree to the following:");
    html += '<ul>';
    html += '<li>'+_js("You will not use inappropriate language or provide links/trackbacks to obscene or inappropriate content.")+'</li>';
    html += '<li>'+_js("You will not post hateful comments to other users.")+'</li>';
    html += '<li>'+_js("You will not use the comments for politic or other types of propaganda.")+'</li>';
    html += '</ul>';
    html += _js("If you break those rules your comment might get deleted without notice.");
    html += '</p>';

    html += '<p>';
    html += _js("If you think a comment is inappropriate, you can use the <b>Flag</b> option under the comment.");
    html += '</p>';

    html += '<h3>';
    html += _js("This is it. Have fun with the comments!");
    html += '</h3>';

    html += '</div>';

    var params = {};
    params.content = html;
    params.input_element = el;
    dialog('comments_disclaimer_dialog',params);

    setTimeout(function(){
        $('#comments_disclaimer_dialog_buttonbar_container').find('button').eq(0).focus();
    },100);
}

function revert_design(){
    xalert(_js("You can go back to the new design via the Preferences menu."),'xinfo','revert_design_go()');
    return false;
}

function revert_design_go(){
    createCookie('benderisgreat',1,365);
    document.location.reload();
}

function go_to_beta_confirm(){
    var html = '<div class="beta_invite_wrapper">';
    html += '   <div class="beta_invite_text">';
    html += '       <div class="beta_invite_text_heading">' + sprintf(_js('Do you want to switch to the Beta version of %s?'),application_name) + '</div>';
    html += '       <div class="beta_invite_text_paragraph graylink_darker">' + _js('You can always return from the Beta badge:') + '</div>';
    html += '       <div class="beta_invite_text_paragraph graylink_darker">' + sprintf(_js('Join our %s to chat with us.'),'<a class="bluelink underlink" href="https://ino.to/discord" target=\"_blank\">Discord</a>') + '</div>';
    html += '   </div>';
    html += '   <div class="flex_grow">';
    html += '   </div>';
    html += '   <div class="beta_invite_photo">';
    html += '       <img src="/images/join-beta-' + get_theme_name() + '.png">';
    html += '   </div>';
    html += '</div>';
    dialog('beta_invite_dialog', {content: html});
}

function go_to_beta(){
    createCookie('killallhumans',1,365);
    document.location.reload();
}

function go_to_ng(){
    createCookie('blackjackandhookers',1,365);
    document.location.reload();
}

function go_to_stable(){
    eraseCookie('killallhumans');
    document.location.reload();
}

function set_mark_read_button_on_left(set){
    if(set){
        mark_read_on_left = 1;
    }else{
        mark_read_on_left = 0;
    }
    xajax_save_user_pref('mark_read_on_left',mark_read_on_left);
    rebuild_toolbar();
    setTimeout(function(){
        resize_toolbar_heading();
    },150);
}

function toggle_high_contrast(){
    if(high_contrast == 1){
        high_contrast = 0;
    }else{
        high_contrast = 1;

    }
    xajax_save_user_pref('high_contrast',high_contrast);
    init_high_contrast();
    rebuild_toolbar();
}

function init_high_contrast(){
    return;
    if(high_contrast == 1){
        $('body').addClass('high_contrast');
    }else{
        $('body').removeClass('high_contrast');
    }
}

function toggle_unseen_counters(){
    if(unseen_counters == 1){
        unseen_counters = 0;
    }else{
        unseen_counters = 1;

    }
    xajax_save_user_pref('unseen_counters',unseen_counters,"build_tree();");
    init_unseen_counters();
}

function init_unseen_counters(){
    if(unseen_counters == 1){
        menu_checkbox_check('#subscriptions_useen_counters');
    }else{
        menu_checkbox_uncheck('#subscriptions_useen_counters');
    }
}

var gadget_unread_count_timer = null;
function gadget_unread_counter_refresh(){
    if(gadget_unread_count_timer){
        clearTimeout(gadget_unread_count_timer);
    }
    if(feed_params.filter_type == 'dashboard'){
        var unread_cnt = parseInt($('#total_unread_cnt').text());
        if(unread_cnt > max_unread){
            unread_cnt = max_unread + '+';
        }
        $('.gadget_unread_count').each(function(){
            $(this).html('<a title="'+_js("Go to All articles section.")+'" href="javascript:void(0);" onclick="focusit(\'all_articles\');view_all_items();">' + unread_cnt + '</a>');
        });
        gadget_unread_count_timer = setTimeout(function(){
            gadget_unread_counter_refresh();
        },1000);
    }
}

function show_hide_add_userpwd(chk){
    if(chk){
        $('.advanced_add_credentials').show();
    }else{
        $('.advanced_add_credentials').hide();
    }
}

function hide_add_options(){
    inno_dialog_close('feed_advanced_add_dialog');
}

function adv_add_subscription(){
    add_subscription($('#advanced_add_url').val());
    hide_add_options();
}

function boost_feed(id,context,hub){
    if(hub == 1){
        xconfirm(_js("This feed indicates that it receives real time updates.")+' '+_js("Do you still want to boost it?"),'boost_feed(' + id + ',"' + context + '",0)');
        return;
    }
    do_loading();
    xajax_boost_feed(id,context);
}

function check_import_form(){
    var option = document.getElementById('import_default_folder').value;
    $('#upload_new_folder_name').hide();
    $('#import_override_folder_div').show();
    $('#import_override_folder').attr('disabled',false);
    if(option == '0'){
        $('#import_override_folder').attr('disabled','disabled');
        $('#import_override_folder').prop('checked',false);
        $('#import_override_folder_div').hide();
    }else if(option == '-1'){
        $('#upload_new_folder_name').show();
    }
}

function check_import_opml_form(){
    var option = document.getElementById('import_opml_default_folder').value;
    $('#opml_import_new_folder_name').hide();
    //$('#import_opml_override_folder_div').show();
    //$('#import_opml_override_folder').prop('disabled',false);
    if(option == '0'){
        //$('#import_opml_override_folder').attr('disabled','disabled');
        //$('#import_opml_override_folder').prop('checked',false);
        //$('#import_opml_override_folder_div').hide();
    }else if(option == '-1'){
        $('#opml_import_new_folder_name').show();
    }
}

function check_youtube_subscriptions_form(){
    if($('#youtube_subscriptions_sync').is(':checked')){
        $('#youtube_subscriptions_sync_folder_id').prop('disabled',false);
        $('#youtube_subscriptions_sync_new_folder_name').prop('disabled',false);
    }else{
        $('#youtube_subscriptions_sync_folder_id').prop('disabled',true);
        $('#youtube_subscriptions_sync_new_folder_name').prop('disabled',true);
    }

    var option = document.getElementById('youtube_subscriptions_sync_folder_id').value;
    $('#youtube_subscriptions_sync_new_folder_name').hide();
    if(option == '-1'){
        $('#youtube_subscriptions_sync_new_folder_name').show();
    }
}

function get_article_link(id){
    var ft = $('#article_' + id).data('ft');
    dialog('article_link',{article_id:id, feed_type: ft});
}

function make_article_link_seo_friendly(id,title){
    title = mk_seo_url(title);
    $('#article_link_input').val(application_address_secure + /article/ + id + '/' + title).click().select();
}

function get_link_dialog(url){
    var content = ' \
            <div style="padding-bottom:10px"> \
                '+_js("Copy the following link to your clipboard:")+' \
            </div> \
            <div> \
                <input type="text" value="' + url + '" id="link_input" style="width:302px;"> \
            </div>';
    dialog('link_dialog',{content: content});
    $('#link_input').focus().select();
}

function register_error(txt){
    document.getElementById('register_errors_box').style.display = 'block';
    document.getElementById('register_errors_box').innerHTML = txt;
}

function check_register_form(){
    if(document.getElementById('profile_email').value == ''){
        document.getElementById('profile_email').focus();
        register_error(_js("Please enter Email"));
        return false;
    }
    if(document.getElementById('profile_password').value == ''){
        document.getElementById('profile_password').focus();
        register_error(_js("Please enter password")+'.');
        return false;
    }

    return true;
}

function show_flagged_comment(el,id){
    $(el).parent().remove();
    $('#user_comment_id_' + id).removeClass('comment_flagged');
}

function view_likes(id,type){
    var params = {id: id, type: type};
    dialog('likes_dialog',params);
}

function show_view_options(){
    var params = {};
    params.filter_id = feed_params.filter_id;
    params.filter_type = feed_params.filter_type;
    params.view_style = view_style;

    if(view_style == 3){
        $('#reader_pane').hide();
        params.tile_width = $('.article_tile').width();
        $('#reader_pane').show();
    }
    dialog('view_options_dialog',params);
}

function edit_opml_import(id){
    dialog('opml_import_dialog',{id: id});
}

function edit_highlighter(id,term){
    dialog('highlighter_dialog',{id: id, term: term});
}

function reload_opml_import(id){
    do_loading(_js("Fetching OPML.")+' '+_js("This might take a while..."));
    xajax_fill_dialog_async('preferences_opml_subscriptions',{reload_opml: true, opml_id: id});
}

function save_opml_import(id){
    var post = {};
    post.id = id;
    post.url = $('#import_opml_url').val();
    post.descr = $('#import_opml_descr').val();
    post.default_folder = document.getElementById('import_opml_default_folder').value;
    post.sync_type = document.getElementById('import_opml_sync_type').value;
    post.notifications = document.getElementById('import_opml_notifications').checked ? 1 : 0;
    if(post.default_folder == -1){
        post.new_folder_name = $('#opml_import_new_folder_name').val();
        if(post.new_folder_name == ''){
            xalert(_js("Please enter new folder name!"),1,"$('#opml_import_new_folder_name').focus()");
            return;
        }
    }
    //post.override_folders = ($('#import_opml_override_folder').is(':checked')) ? 1 : 0;
    disable_dialog_button("opml_import_dialog",0);
    do_loading(_js("Fetching OPML.")+' '+_js("This might take a while..."));
    xajax_save_opml_import(post);
}

function save_highlighter(id){
    if(!id){
        id = 0;
    }
    var post = {};
    post.id = id;
    post.term = $('#highlighter_term').val();

    if($('#preferences_rules_row_name_input_' + id)[0]){
        post.term = $('#preferences_rules_row_name_input_' + id).val();
    }

    post.color = $('#hl_color_id').val();
    post.case_sensitive = ($('#highlighter_case_sensitive').is(':checked')) ? true : false;
    if(post.term == ''){
        xalert(_js("Please enter a term!"),1,"$('#highlighter_term').focus()");
        return;
    }

    disable_dialog_button("highlighter_dialog",0);
    do_loading(_js("Saving")+'...');

    var context = '';
    if(feed_params.filter_type == 'highlighters'){
        context = 'highlighters';
    }
    xajax_save_highlighter(post,context);
}

function save_application(id){
    var post = {};
    post.id = id;
    post.name = $('#dev_application_name').val();
    post.platform_id = $('#dev_application_platform_id').val();
    post.image = $('#bundle_uploaded_image').val();
    post.url = $('#dev_application_url').val();
    post.oauth_redirect_uri = $('#oauth_redirect_uri').val();
    post.oauth_scope = $('#oauth_scope').val();
    if(post.name == ''){
        xalert(_js("Please enter application name!"),1,"$('#dev_application_platform_id').focus()");
        return;
    }
    disable_dialog_button("edit_application_dialog",0);
    do_loading();
    xajax_save_application(post);
}



function delete_opml_import(id,descr){
    xconfirm(descr + '<p><input type="checkbox" id="opml_delete_feeds" value="1"> <label for="opml_delete_feeds">'+_js("Also delete all imported feeds.")+'</label></p>',"xajax_delete_opml_import(" + id + ",document.getElementById('opml_delete_feeds').checked?1:0);");
}

function delete_highlighter(id){
    xconfirm(_js("Are you sure?"),"xajax_delete_highlighter(" + id + ")");
}

function toggle_highlighter(id,check){
    do_loading();
    xajax_toggle_highlighter(id,check);
}

function view_import_feeds(params,title,type,bundle_id){
    dialog('imported_feeds_dialog',{params: params, title: title, type: type, bundle_id: bundle_id});
}

function view_subscribers(user_ids){
    dialog('subscribers_dialog',{user_ids: user_ids});
}

function unlink_account(network_id){
    do_loading(_js("Disconnecting..."));
    xajax_unlink_account(network_id);
}

function revoke_application(application_id){
    do_loading(_js("Revoking..."));
    xajax_revoke_application(application_id);
}

function edit_broadcast_note(id){
    dialog('edit_broadcast_note_dialog',{id: id});
}

function save_broadcast_note(id){
    var note_content = $('#edit_broadcast_note_input').val();
    disable_dialog_button('edit_broadcast_note_dialog',0);
    xajax_save_broadcast_note(id,note_content);
}

function set_broadcast_bubble(id,bubble){
    if($('#broadcast_div_placeholder_' + id)[0]){
        $('#broadcast_div_placeholder_' + id).replaceWith(bubble);
    }
}

function unset_broadcast_bubble(id){
    if($('#broadcast_note_bubble_' + id)[0]){
        $('#broadcast_note_bubble_' + id).parent().parent().replaceWith('<div id="broadcast_div_placeholder_' + id + '" class="broadcast_div_placeholder"></div>');
    }
}

function edit_bundle(id,params){
    if(params == undefined){
        var params = {};
    }
    params.id = id;
    dialog('edit_bundle_dialog',params);
}

function edit_team(id,params){
    if(params == undefined){
        var params = {};
    }
    params.team_id = id;
    dialog('edit_team_dialog',params);
}

function edit_application(id,params){
    if(params == undefined){
        var params = {};
    }
    params.id = id;
    dialog('edit_application_dialog',params);
}

function delete_bundle(id,descr,context){
    xconfirm(descr,"xajax_delete_bundle('" + id + "', '" + context + "')");
}

var current_bundle_feeds_list = [];

function bundle_search(term){
    if(!term){
        return;
    }
    discovery_params.bundle_search_term = term;
    print_bundles_tab('bundles_search');
}

function bundle_clear_feeds(){
    current_bundle_feeds_list = [];
    build_bundle_feeds_table();

}

function bundle_add_feed(id,icon,title){
    current_bundle_feeds_list.push({id: id, icon: icon, title: title});
    build_bundle_feeds_table();
}

function bundle_add_feeds(feeds){
    for(var i in feeds){
        current_bundle_feeds_list.push({id: feeds[i].id, icon: feeds[i].icon, title: feeds[i].title});
    }
    build_bundle_feeds_table();
}

function bundle_remove_feed(id){
    for(var i in current_bundle_feeds_list){
        if(current_bundle_feeds_list[i].id == id){
            if($('#bundle_add_feed_' + current_bundle_feeds_list[i].id)[0]){
                $('#bundle_add_feed_' + current_bundle_feeds_list[i].id).html('<a href="javascript:void(0)" id="bundle_add_feed_link_' + id + '" title=\"'+_js("Add feed to bundle.")+'\"><span class=\"icon16 icon-bundles-right-arrow\"></span></a>');

                $('#bundle_add_feed_link_' + id).data('icon',current_bundle_feeds_list[i].icon).data('title',current_bundle_feeds_list[i].title).on('click',function(){
                    bundle_add_feed(id,$(this).data('icon'),$(this).data('title'));
                });
                $('#bundle_add_feed_' + id).parent().removeClass('tr_bundle_added');
            }

            current_bundle_feeds_list.splice(i,1);
            break;
        }
    }


    build_bundle_feeds_table();
}

function build_bundle_feeds_table(){
    if(current_bundle_feeds_list.length > 0){
        var html = '<table style="width:100%"><tbody id="bundle_feeds_inside_table">';
        for(var i in current_bundle_feeds_list){
            var trclass = 'bundle_feed_tr';

            html += '<tr id=\"bundle_li_' + current_bundle_feeds_list[i].id + '\" class="' + trclass + '">';
            html += '<td style="width:16px">';
            html += current_bundle_feeds_list[i].icon;
            html += '</td>';
            html += '<td>';
            html += current_bundle_feeds_list[i].title;
            html += '</td>';
            html += '<td style="width:16px">';
            html += '<a href="javascript:void(0)" onclick="bundle_remove_feed(' + current_bundle_feeds_list[i].id + ')\" title=\"'+_js("Remove this feed from bundle.")+'\"><span class=\"icon16 icon_gray icon-remove-feed-from-bundle\"></span></a>';
            html += '</td>';
            html += '</tr>';

            $('#bundle_add_feed_' + current_bundle_feeds_list[i].id).html('<span class=\"icon16 icon-checkmark_big\"></span>');
            $('#bundle_add_feed_' + current_bundle_feeds_list[i].id).parent().addClass('tr_bundle_added');

        }
        html += '</tbody></table>';
        $('#edit_bundle_feeds_inside').html(html);
        activate_bundle_sortable();
    }else{
        $('#edit_bundle_feeds_inside').html('<div id="edit_bundle_empty_placeholder_inside" class=\"graylink\">'+_js("Add feeds here.")+'</div>');

    }
}

function reorder_bundle_feeds(){
    var list = [];
    // we prefer ordered list
    $('#bundle_feeds_inside_table>tr').each(function(){
        list.push($(this).attr('id'));
    });

    var new_bundle_feeds_list = [];
    for(var i in list){
        var feed_id = list[i].replace(/bundle\_li\_/,'');
        for(var n in current_bundle_feeds_list){
            if(current_bundle_feeds_list[n].id == feed_id){
                new_bundle_feeds_list.push(clone_object(current_bundle_feeds_list[n]));
            }
        }
    }
    current_bundle_feeds_list = new_bundle_feeds_list;
    build_bundle_feeds_table();
}

function activate_bundle_sortable(){
    $('#bundle_feeds_inside_table').sortable({
        stop: reorder_bundle_feeds,
        tolerance: 'pointer',
        cursor: 'move',
        axis: 'y',
        helper: function(e, tr)
        {
            var $originals = tr.children();
            var $helper = tr.clone();
            $helper.children().each(function(index)
            {
                // Set helper cell sizes to match the original sizes
                $(this).width($originals.eq(index).width());
            });
            return $helper;
        }
    }).disableSelection();
}

function bundle_filter_folder(id){
    do_loading();
    xajax_bundle_filter_folder(id);
}

function add_subscription_to_bundle(id,bundle_id){
    do_loading();
    xajax_add_subscription_to_bundle(id,bundle_id);
}

function add_subscription_to_team_folder(id,folder_id,is_feed_id){
    do_loading();
    xajax_add_subscription_to_team_folder(id,folder_id,is_feed_id);
}

function expand_bundle(id,ed){
    if($('#bundle_feeds_list_' + id + '_' + ed).is(':visible')){
        $('#bundle_expand_arrow_' + id + '_' + ed).removeClass('rotate_expand_arrow');
        $('#bundle_feeds_list_' + id + '_' + ed).css('display', 'none');
    }else{
        $('#bundle_expand_arrow_' + id + '_' + ed).addClass('rotate_expand_arrow');
        $('#bundle_feeds_list_' + id + '_' + ed).css('display', 'flex');

        $('#bundle_feeds_list_' + id + '_' + ed + ' .bundle_feed_favicon').each(function(){
            if(!$(this).attr('src') && $(this).data('src')){
                $(this).attr('src',$(this).data('src'));
            }
        });
    }
}

function bundle_subscribe(id,context){
    if(user_is_guest){
        show_dialog('account_dialog',{subscribe_action: 'bundle', subscribe_id: id});
        return;
    }

    do_loading();
    xajax_bundle_subscribe(id,context);
}

function print_bundles_tab(tab_id,clear_search){
    if(clear_search && discovery_params.bundle_search_term){
        discovery_params.bundle_search_term = null;
    }
    $('#bundles_tabs_wrapper>div').each(function(){
        $(this).html('<div class="loader loader_high"></div>');
    });
    discovery_params.view = tab_id;
    set_loc();
    xajax_print_bundles_tab(tab_id,0,discovery_params);
}

function scroll_reader_pane_to_top(){
    unbind_reader_pane_scroll();

    articles_moving = true;
    if(articles_moving_timer)clearTimeout(articles_moving_timer);

    $('#reader_pane').scrollTo('0px', 500, {axis : 'y', easing:'easeOutQuint', onAfter: function(){
        articles_moving = false;
        bind_reader_pane_scroll();
        //$('#reader_pane').trigger('scroll');
        $('.article_current').removeClass('article_current');

    }});
}

function show_announce(id,text,link){
    if($('#tree_announce')[0]){
        $('#tree_announce').remove();
    }

    if(link){
        var content = '<a target="_blank" href="' + link + '">' + text + '</a>';
    }else{
        var content = text;
    }
    $('#splitter').append('<div id="tree_announce" class="tree_announce">' + content + '<span onclick="dismiss_announce(' + id + ')" class="icon16 icon_close_announce icon-cross" title="'+_js("Dismiss")+'"></span></div>');
    resize();
}

function dismiss_announce(id){
    $('#tree_announce').remove();
    resize();
    if(id == 'covid'){
        createCookie('covid_dismissed',"1",365);
    }else if(id == 'bf_deal'){
        createCookie('bf_deal_dismissed',"1",30);
    }else if(id == 'bf_deal_21'){
      createCookie('bf_deal_dismissed_21',"1",30);
    }else if(id == 'kickstart_promo'){
        createCookie('kickstart_promo_dismissed',"1",30);
    }else if(id == 'beta_optin'){
      createCookie('beta_optin_dismissed',"1",30);
    }else{
        createCookie(id + '_dismissed',"1",30);
    }
    xajax_dismiss_announce(id);
}

var yt_hover_timeout = null;
function hover_youtube_thumb(el,hover,video_id){
    if(hover){
        if(yt_hover_timeout){
            clearTimeout(yt_hover_timeout);
        }
        $(el).css('position','relative').append('<div id="yt_click_overlay_' + video_id + '" class="yt_click_overlay"></div>');
        $('#yt_click_overlay_' + video_id).on('mouseout',function(){ hover_youtube_thumb(el,false); }).on('click',function(){ embed_youtube_video(video_id); });
    }else{
        yt_hover_timeout = setTimeout(function(){
            $('.yt_click_overlay').remove();
        },10);
    }
}

function embed_youtube_video(id){
    var player_html = '<iframe id="yt_video_frame" width="800" height="487" src="//www.youtube.com/embed/' + id + '?definition=hd&default=https://i.ytimg.com/vi/' + id + '/default.jpg&medium=https://i.ytimg.com/vi/' + id + '/mqdefault.jpg&high=https://i.ytimg.com/vi/' + id + '/hqdefault.jpg&standard=https://i.ytimg.com/vi/' + id + '/sddefault.jpg&maxres=https://i.ytimg.com/vi/' + id + '/maxresdefault.jpg&el=preview&cc_load_policy=1&authuser=0&enablejsapi=1&cc3_module=1&html5=1&wmode=window&autoplay=1&origin=' + application_address_secure + '" frameborder="0" allowfullscreen="allowfullscreen" webkitallowfullscreen="webkitAllowFullScreen" mozallowfullscreen="mozallowfullscreen" tabindex="-1" style="margin:0px;padding:0px;display:block;"></iframe>';

    dialog('youtube_video_dialog',{video_id: id, content: player_html});
}

function resize_youtube_dialog(){
    var h = $(window).height();
    h -= 200;

    $('#youtube_video_dialog_wrapper').css('width',(h * 1.777) + 'px');
    $('#yt_video_frame').attr('height',h + 'px').attr('width',(h * 1.777) + 'px');
}

function resize_profile_dialog(){
    var h = $(window).height();
    h -= 40 * 2;
    h -= parseInt($('#profile_dialog_wrapper').css('top'));
    h -= $('#profile_dialog').find('.profile_dialog_info').outerHeight();

    $('#profile_dialog').find('.profie_dialog_lower_stream_preview').eq(0).css('max-height',h);
}

var last_clip_url = null;
var clip_defaults = {};
clip_defaults.w = '650';
clip_defaults.fs = '14';
clip_defaults.c = '#1a2433';
clip_defaults.lc = '#296BCC';
clip_defaults.bc = '#FEFEFE';
clip_defaults.dc = '#D9DDE6';
clip_defaults.ta = 'l';
clip_defaults.n = '20';
clip_defaults.cs = 'm';
clip_defaults.sb = 'n';
// clip_defaults.af = 'Roboto';

function reset_html_clip(url){
    inno_dialog_close('html_clip_dialog');
    view_html_clip(url);
}

function rebuild_clip(){
    var vals = {};
    var url = last_clip_url;
    $('input[name="clip_inputs"], select[name="clip_inputs"]').each(function(){
        var key = $(this).attr('id').replace(/clip\_input\_/,'');
        var val = $(this).val();

        if(val == clip_defaults[key] && key != 'cs'){
            return true;
        }else if(key == 'cs' && val == 'e'){
            return true;
        }

        val = val.replace(/#/,'0x');
        val = encodeURIComponent(val);
        if(key == 'w' && val == ''){
            val = 'full';
        }
        if(val){
            vals[key] = val;
        }
    });

    var str = '';
    for(var key in vals){
        if(str != ''){
            str += '&';
        }
        str += key + '=' + vals[key];
    }

    if(str){
        url += '?' + str;
    }

    var iframe_w = (vals.w) ? vals.w : clip_defaults.w;
    if(vals.w == 'full'){
        iframe_w = '100%';
    }else{
        iframe_w = parseInt(parseInt(iframe_w) + 20);
    }
    var iframe = '<iframe width="' + iframe_w + '" height="800" src="' + url + '" frameborder="0" tabindex="-1"></iframe>';
    $('#clip_iframe_template').val(iframe);
    $('#clip_url').attr('href',url).html(url);
    check_clip_controls();
}

function check_clip_controls(){
    var colors = ['c','lc','bc','dc'];
    for(var i in colors){
        var c = colors[i];
        var this_color = $('#clip_input_' + c).val();
        $('#clip_color_check_' + c).css('background-color',this_color);
    }

    // if($('#clip_input_cs').val() == 'e'){
    //     $('#clip_input_af').prop('disabled',false);
    // }else{
    //     $('#clip_input_af').prop('disabled',true).val('r');
    // }
}

function ieColorToHex(probe){
    var value = probe.set('value', '').createTextRange().queryCommandValue("ForeColor");
    value = (((value & 0x0000ff) << 16) | (value & 0x00ff00) | ((value & 0xff0000) >>> 16)).toString(16);
    return "#000000".slice(0, 7 - value.length) + value;
}

function colorFromProbe(color){
    var valueMatch = {
        'rgb(0,0,0)': { 'black': ' ', 'rgb(0,0,0)': ' ' },
        'rgba(0,0,0,0)': { 'transparent': ' ', 'rgba(0,0,0,0)': ' ' },
        '#ffffff': { 'transparent': ' ' },
        'transparent': { 'transparent': ' ' }
    }
    color = color.toString();
    if(!color.match(/^#.+$|^[^0-9]+$/)) return color;
    if(!$('#color_probe')[0]){
        var probe = document.createElement('div');
        probe.id = 'color_probe'
        document.body.appendChild(probe);
    }else{
        var probe = $('#color_probe')[0];
    }

    try{ $('#color_probe').css('color',color); } catch(e){ return color; }

    if(user_agent_is_ie){
        var computed = ieColorToHex(probe);
    }else if(user_agent_is_opera){
        var computed = probe.style.color;
    }else{
        var computed = colorToHex(window.getComputedStyle(probe,'color').color);

    }

    match = valueMatch[computed.replace(/ /g, '')];
    $('#color_probe').css('color', 'transparent');
    if((user_agent_is_ie) && color == 'transparent' && (match && match['transparent'])){
        return '#000000';
    }
    return (computed == 'transparent' || match && !match[color.replace(/ /g, '')]) ? color : computed;
}

function colorToHex(color) {
    if (color.substr(0, 1) === '#') {
        return color;
    }
    var digits = /(.*?)rgb\((\d+), (\d+), (\d+)\)/.exec(color);

    var red = parseInt(digits[2]);
    var green = parseInt(digits[3]);
    var blue = parseInt(digits[4]);

    var rgb = blue | (green << 8) | (red << 16);

    switch (rgb.toString(16).length) {
        case 2:
            rgb = "0000" + rgb.toString(16);
            break;
        case 4:
            rgb = "00" + rgb.toString(16);
            break;
        default:
            rgb = rgb.toString(16)
    }
    return digits[1] + '#' + rgb
}

var picker_prev_el = null;

function close_picker(el){
    if(picker_prev_el){
        $('#cpicker_wrapper').remove();
        if(picker_prev_el == el){
            picker_prev_el = null;
            return true;
        }
        picker_prev_el = null;
    }
    return false;
}

function hub_loaded(params){
    hub_params = params;
    if(params.offset){
        seen_ids = params.offset;
    }
    if(params.channel_section){
        set_feed_param('channel_section',channel_section);
    }
}

function apop(id,long_id,event){
    if(get_mouse_button(event) != 'middle'){
        print_single_article(id,long_id,0,0);
        if(event){
            event.returnValue = false;
            if(!isie8){ event.stopPropagation(); }
            return false;
        }
    }
    return true;
}

function print_single_article(id,long_id,post_id,comment_action){
    if(comment_action){
        if(user_is_guest){
            return guest_alert();
        }
    }

    dialog('article_dialog',{id:id});

    var num = 1;
    var offset = 0;
    var params = {};
    params.filter_type = 'article';
    params.filter_id = long_id;
    params.in_dialog = true;
    params.post_id = post_id;
    params.comment_action = comment_action;
    xajax_print_articles(num,offset,params);
    read_article(id,0,false,false,2);
}

function single_article_loaded(contents){
    view_style = 3;
    for(var id in contents){
        article_contents[id] = contents[id];
        break;
    }
}

function like_post(id,type,attachment_id,attachment_type){
    if(user_is_guest){
        return guest_alert();
    }
    var likes = parseInt($('#ssp_' + id).data('likes'));

    if($('#ssp_' + id).data('liked') == 0){
        $('#like_button_txt_' + id).html(_js("Unlike"));
        $('#ssp_' + id).data('liked',1);
        likes += 1;
    }else if($('#ssp_' + id).data('liked') == 1){
        $('#like_button_txt_' + id).html(_js("Like"));
        $('#ssp_' + id).data('liked',0);
        likes -= 1;
    }
    if(likes < 0){
        likes = 0;
    }

    if(likes == 0){
        $('#like_button_counter_post_' + id).html('');
    }else{
        $('#like_button_counter_post_' + id).html(' (' + likes + ')');
    }
    $('#ssp_' + id).data('likes',likes);

    if(attachment_type == 'article'){
        set_like(attachment_id);
    }
}

function check_view_style_refresh(style){
    if(feed_params.view_style != style){
        return;
    }
    if(!feed_params.filter_type || feed_params.filter_type == 'starred' || feed_params.filter_type == 'tags' || feed_params.filter_type == 'channel'){
        set_view_style(style);
    }
}

function remove_auto_load_read(){
    xconfirm(_js("Do you want to see an empty page when you have read all articles?")+'<br><br>'+_js("You can enable this feature again in <b>Preferences</b> -> <b>Interface</b>."),"remove_auto_load_read_exec();");
}

function remove_auto_load_read_exec(){
    do_loading();
    xajax_save_user_pref('auto_load_read',0,'do_loading();print_articles();');
}

var new_articles_num = 0;

function articles_loaded_from_checksum(){
    $('#reader_pane').find('.info_state, .alert_state').each(function(){
        $('#reader_pane').prepend($(this));
    });
    var num = $('#reader_pane').find('.ar.hidden').length;
    new_articles_num = num;
    if(num == 0){
        return;
    }else if(num == 1){
        var text = _js("%s new article");
    }else{
        var text = _js("%s new articles");
    }

    // TODO AFTER THIS IS TRANSLATED!!!!!!!!!!
    var text_tmp = __js("%s new article", "%s new articles", num);

    text = text.replace(/\%s/,num);
    if(!$('#new_articles_overlay')[0]){
        var overlay_html = '<div id="new_articles_overlay" title="'+_js("Display new articles.")+' ('+_js("Hotkey")+': R)">' + text + '</div>';
        $('#reader_pane').prepend(overlay_html);
        $('#reader_pane').find('.article_list_tabs_wrapper_wrapper').prependTo('#reader_pane');
        $('#reader_pane').find('.profile_dialog_wrapper_full').prependTo('#reader_pane');
        $('#reader_pane').find('.team_card').prependTo('#reader_pane');

        $('#new_articles_overlay').on('click',function(){
            display_new_articles();
        });
    }else{
        $('#new_articles_overlay').html(text);
    }

    if(!$('#new_articles_overlay').is(':visible')){
        $('#new_articles_overlay').show();
    }

    check_new_articles_badge();

    if(articles_autoload && $('#all_read_message')[0] && $('#all_read_message').offset().top > 0){
        display_new_articles();
        return;
    }
}

function check_new_articles_badge(){
    if(new_articles_num){
        $('#refresh_button_badge').html(new_articles_num).show().attr('title',_js("Display new articles.")+' ('+_js("Hotkey")+': R)');
    }else{
        $('#refresh_button_badge').html('').hide();
    }
}

function display_new_articles(){
    fix_relative_dates();
    new_articles_num = 0;
    var dates = [];
    $('#reader_pane').find('.articles_feed_group_heading_now:not(:first)').remove();
    $('#reader_pane').find('.article_list_tabs_wrapper_wrapper').prependTo('#reader_pane');
    $('#reader_pane').find('.profile_dialog_wrapper_full').prependTo('#reader_pane');
    $('#reader_pane').find('.team_card').prependTo('#reader_pane');

    $('#reader_pane').find('.hidden').each(function(){
        // https://jira.innologica.com/browse/INO-3107
        if((view_style == 0 || view_style == 2) && $(this).hasClass('ar')){
            if(theme_is_dark){
                $(this).find('.arrow_div').addBack($(this)); //.effect('highlight',{color: "#57544b"},1500);
            }else{
                $(this).find('.arrow_div').addBack($(this)); //.effect('highlight',{},1500);
            }
        }
        if($(this).data('date_usec')){
            dates.push($(this).data('date_usec'));
        }
    }).removeClass('hidden');

    // Topics counter progress bar
    if((feed_params.view_unread === 0 || parseInt($('#total_unread_cnt').text()) > 0) && $('#footer').is(':visible')) {
        $('#reader_pane').find('div[data-topiccount]').each(function (index) {
            $(this).attr('data-topiccount', ++index).data('topiccount', index);
        });
        topics_progress_bar.build_bar();
    }

    var max_date = null;
    if(dates.length){
        max_date = Math.max.apply(Math, dates);
    }

    max_date++; // to affect the last loaded article too

    if(max_date){
        set_feed_param('last_load_date',max_date / 1000000);
    }


    $('#reader_pane').find('.info_everything_read').remove();
    $('#reader_pane').find('.reader_pane_message').remove();
    resize();

    hide_new_articles_overlay(800);

    scroll_reader_pane_to_top();
}

function hide_new_articles_overlay(speed){
    new_articles_num = 0;
    $('#new_articles_overlay').remove();
    check_new_articles_badge();
}

function mark_feed_read_from_grouping(feed_id,last_feed_id,el){
    el.onclick = null;
    $(el).removeClass('mark_section_read').addClass('mark_section_read_disabled').html(_js("Marked section as read."));

    if(last_feed_id){
        var elements = $('#afgf_' + feed_id).prevUntil('#afgf_' + last_feed_id);
    }else{
        var elements = $('#afgf_' + feed_id).prevAll();
    }
    $(elements).each(function(){
        if($(this).hasClass('ar')){
            var this_id = $(this).data('aid');

            if($(this).data('sunk') == 0){
                if($(this).data('read') == 0){
                    $(this).data('init',0);
                    mark_read(this_id,true);
                }
                $(this).data('sunk',1);
            }

            if($('#unread_img_' + this_id)[0]){
                if(view_style == 3){
                    $('#unread_img_' + this_id).parent().parent().remove();
                }else{
                    $('#unread_img_' + this_id).parent().remove();
                }
            }

            if($('#mark_unread_button_' + this_id)[0]){
                $('#mark_unread_button_' + this_id).parent().remove();
            }

            if($('#article_stripe_' + this_id)[0]){
                $('#article_stripe_' + this_id).remove();
            }
        }
    });
    mark_read_from_tree('feed',last_feed_id);
}

function check_older_articles_hint(){
    if($('#older_articles_hint')[0] && !$('#older_articles_hint').hasClass('oah_unread')){
        var height = $('#reader_pane').height() - $('#older_articles_hint').outerHeight();
        $('#reader_pane>.alert_state, #reader_pane>.info_state').each(function(){
            height -= $(this).outerHeight(true);
            height += 20; // Offset the lower margin
        });
        $('#reader_pane').find('.profile_dialog_wrapper_full').each(function(){
            height -= $(this).outerHeight(true);
            height -= 40;
        });
        $('#reader_pane').find('.team_card').each(function(){
            height -= $(this).outerHeight(true);
            // height -= 40;
            height += 6; // WTF!?
        });

        $('#older_articles_hint').css('margin-top',height + 'px');
    }
}

function scroll_to_first_article(){
    var first = $('#reader_pane').find('.ar').not('.hidden, .ar_skip').eq(0);
    if(first[0]){
        scroll_to_article($(first).data('aid'));
    }
}

function article_list_tab_activate(command){
    do_loading();
    var term = $('#feed_searcher').val();
    if(command == 'search'){
        toolbar_action('search');
        set_search_filter_section('');
        $('#feed_searcher').val(term);
    }else if(command == 'public_search'){
        toolbar_action('search');
        $('#feed_searcher').val(term);
        set_search_filter_section('public');
    }else if(command == 'feeds'){
        toolbar_action('search');
        $('#feed_searcher').val(term);
        toggle_search_options(0,true);
    }else if(command == 'bundles'){
        toolbar_action('search');
        $('#feed_searcher').val(term);
        toggle_search_options(5,true);
    }else if(command == 'users'){
        toolbar_action('search');
        $('#feed_searcher').val(term);
        toggle_search_options(2,true);
    }else if(command == 'twitter'){
        toolbar_action('twitter');
        $('#feed_searcher').val(term);
        toggle_search_options(6,true);
    }else if(command == 'google_plus'){
        toolbar_action('google_plus');
        $('#feed_searcher').val(term);
        toggle_search_options(7,true);
    }else if(command == 'google_news'){
        toolbar_action('google_news');
        $('#feed_searcher').val(term);
        toggle_search_options(8,true);
    }else if(command == 'facebook_pages'){
        toolbar_action('facebook_pages');
        $('#feed_searcher').val(term);
        toggle_search_options(9,true);
    }
}

function reload_profile_dialog(user_id){
    if($('#profile_dialog')[0]){
        dialog('profile_dialog',{user_id:user_id});
    }
    if(feed_params.filter_type == 'profile'){
        reload_articles();
    }
}

function _preview_profile(user_id){
    xconfirm(_js("You must first save your settings.")+'<br>'+_js("Do you want to do this now?"),'_preview_profile_confirm(' + user_id + ')');
}

function _preview_profile_confirm(user_id){
    save_user_preferences(false,'dialog("profile_dialog",{user_id: ' + user_id + '})');
}

function set_profile_picture_choice(id){
    $('#change_profile_picture_dialog').find('.profile_picture_choice_wrapper').removeClass('profile_picture_choice_wrapper_current');
    $('#profile_picture_choice_' + id).addClass('profile_picture_choice_wrapper_current');
}

function save_profile_picture(){
    var $current_div = $('#change_profile_picture_dialog').find('.profile_picture_choice_wrapper_current');
    if(!$current_div[0]){
        return false;
    }

    try{
        var new_src = $('#change_profile_picture_dialog').find('.profile_picture_choice_wrapper_current').eq(0).find('img').eq(0).attr('src');
        if(new_src && $('#preferences_profile_picture_img')[0]){
            $('#preferences_profile_picture_img').attr('src', new_src);
            $('#profile_menu_big_picture').attr('src', new_src);
            $('#sb_rp_settings').find('img').attr('src', new_src);
        }
    }catch(e){}

    var id = parseInt($current_div.data('id'));
    var user_id = $('#profile_picture_user_id').val();
    do_loading(_js("Saving")+'...');
    inno_dialog_close('change_profile_picture_dialog');
    xajax_save_user_pref('profile_picture',id,'reload_profile_dialog(' + user_id + ');');
}


function delete_profile_photo(id,event){
    xconfirm(_js("Are you sure")+'?','delete_profile_photo_exec(' + id + ');');
    event.returnValue = false;
    if(!isie8){ event.stopPropagation(); }
    return false;
}

function delete_profile_photo_exec(id){
    if($('#profile_picture_choice_' + id).hasClass('profile_picture_choice_wrapper_current')){
        $('#profile_picture_choice_' + id).removeClass('profile_picture_choice_wrapper_current');
        $('#profile_picture_choice_0').addClass('profile_picture_choice_wrapper_current');
    }
    $('#profile_picture_choice_' + id).remove();
    xajax_delete_profile_photo(id);
}

function twitter_subscribe(url,type,user){
    add_subscription(url);
}

function google_plus_subscribe(url,type,user){
    add_subscription(url);
}

function google_news_subscribe(url){
    add_subscription(url);
}

function beta_alert(){
    xconfirm('<p>' + _js("You are using a beta version of this product.") + '</p><p>' + sprintf(_js('Join our %s to chat with us.'),'<a class="bluelink underlink" href="https://ino.to/discord" target=\"_blank\">Discord</a>') + '</p><p>' + _js("Do you want to switch to stable version now?") + '</p>','go_to_stable();');
}

function comment_keyup(id,el,event,noesc){
    detect_rtl_input(el);
    if(catch_esc(event) && id){
        hide_comment(id);
    }
}

function unbind_comment_autocomplete(element){
    inno_autocomplete_destroy(element);
}

function find_word_under_caret(el){
    var $textbox = $(el);
    var end = $textbox.getSelection().end;
    var result = /\S+$/.exec($textbox.val().slice(0, end));
    var current_word = result ? result[0] : null;
    if(current_word && current_word.charAt(0) == '@'){
        return current_word;
    }
    return null;
}

function bind_comment_autocomplete(element,article_id,type){
    if(type == 2){
        return;
    }
    var min_length = 2;
    var settings = {
        source: function(request, response) {
            request.origin = 'user_search_mentions';
            request.article_id = parseInt(article_id);
            if($('#article_' + article_id).data('tm') !== null){
                request.teams = JSON.parse($('#article_' + article_id).attr('data-tm'));
            }

            if($('#broadcast_note')[0] && $('#broadcast_note').is(':visible')){
                request.broadcast_privacy = broadcast_privacy;
                if(broadcast_privacy == 2){
                    if(broadcast_teams != ''){
                        var broadcast_teams_array = broadcast_teams.split(',');
                    }else{
                        var broadcast_teams_array = [];
                    }

                    var bteams = {};
                    for(var i in joined_teams){
                        if(in_array(joined_teams[i].id,broadcast_teams_array)){
                            bteams[joined_teams[i].id] = joined_teams[i].name;
                        }
                    }

                    request.teams = bteams;
                }
            }

            if(request.term == null){
                return;
            }

            $.ajax({
                url: "/autocomplete.php",
                dataType: "json",
                data: request,
                success: function(data) {
                    response(data);
                }
            });
        },
        delay: 100,
        width: 606,
        preprocess: function(text){
            var $textbox = $(element);
            var end = $textbox.getSelection().end;
            var result = /\S+$/.exec($textbox.val().slice(0, end));
            var current_word = result ? result[0] : null;
            if(current_word && current_word.charAt(0) == '@'){
                return current_word;
            }
            return null
        },
        minLength: min_length,
        select: function(event, ui){
            var $textbox = $(element);
            var sel = $textbox.getSelection().end;
            var result = /\S+$/.exec($textbox.val().slice(0, sel));
            if(result){
                var start = result.index;
                var end = start + result[0].length;
                $textbox.setSelection(start,end).replaceSelectedText(ui.item.username);
            }
        },
        open: function(){

        }
    };
    inno_autocomplete_init(element,settings);
}

function preview_profile(user_id){
    dialog('profile_dialog',{user_id: user_id});
    return false;
}

function cancel_comment_reply(id){
    $('#user_comments_commenter_' + id).remove();
}

function profile_set_tab(tab){
    set_feed_param('channel_section',tab);
    do_loading();
    print_articles();
    set_feed_param('channel_section',tab);
    set_loc();
}

function article_list_start_over(){
    inno_dialog_close_all();
    close_bottom_notification();
    close_snackbar();
    var num = $('#reader_pane').find('.ar.hidden').length;
    if(num > 0 ){
        display_new_articles();
    }else{
        scroll_reader_pane_to_top();
    }
}

function user_subscribe_unsubscribe(user_id,subscribe){
    if(user_is_guest){
        show_dialog('account_dialog',{subscribe_action: 'profile', subscribe_id: user_id});
        return;
    }
    do_loading();
    xajax_user_subscribe_unsubscribe(user_id,subscribe);
}

function blink_channel(privacy){
    var el = (privacy == 2) ? '#pdinner_teams' : 'pdinner_channel';
    blink_tree_element(el);
}

function get_element_bgcolor(el){
    var bgcolor = 'transparent';
    $(el).parents().each(function(){
        var bgcolor_local = $(this).css('background-color');
        if(!bgcolor_local != "rgba(0, 0, 0, 0)" && bgcolor_local != "transparent"){
            bgcolor = bgcolor_local;
            return false;
        }
    });

    return bgcolor;
}

function blink_tree_element(el){
    var $el = $(el);
    if($el.is(':animated')){
        return false;
    }

    if(theme == 1){
        $el.effect('highlight',{ color: "hsla(214, 34%, 60%, 1)" },2000);
    }else if(theme == 2){
        $el.effect('highlight',{ color: "#FFF7D6" },2000);
    }else if(theme == 3){
        $el.effect('highlight',{ color: "#82694f" },2000);
    }else if(theme == 4){
        $el.effect('highlight',{ color: "#57544b" },2000);
    }
}

function blink_starred(){
    if(!starred_counter){
        return;
    }

    blink_tree_element('#pdinner_starred');
}

function cancel_pinterest(){
    pinterest_image_handlers = 0;
    xajax_save_user_pref('pinterest_image_handlers',0);
    $('#reader_pane').find('.pin_chiclet').attr('style','opacity:0 !important');
}

function like_comment(id){
    if(user_is_guest){
        return guest_alert();
    }
    xajax_like_comment(id);
}

if(window.SpeechSynthesisUtterance !== undefined){
    speechSynthesis.onvoiceschanged = function() {
        if(tts_voice_list != null){
            return;
        }
        var voices = this.getVoices();
        tts_voice_list = voices;
    };

    var tts_msg = new SpeechSynthesisUtterance();

    tts_msg.onstart = function(event){
        tts_is_speaking = true;

        var lang_select = '';
        if(tts_voice_list != null){
            lang_select = ' '+_js("Voice:")+' <select class="tts_lang_select" onchange="tts_set_lang(this.value)">';
            lang_select += '<option value=-1>'+_js("Default")+'</option>';
            for(var i in tts_voice_list){
                var sel = (i == tts_last_used_voice) ? 'selected' : '';
                lang_select += '<option ' + sel + ' value=' + i + '>' + tts_voice_list[i].name.replace(/Google /,'') + '</option>';
            }
            lang_select += '</select>';
        }

        var title = get_article_title(tts_current_article_id);
        var trimmed_title = title.substr(0,30);
        trimmed_title = trimmed_title.substr(0, Math.min(trimmed_title.length, trimmed_title.lastIndexOf(" ")));

        create_bottom_notification(_js("Now reading:")+' ' + trimmed_title + '.' + lang_select + ' <a class="bluelink underlink" href="javascript:void(0);" onclick="tts_stop();$(\'.bottom_notification\').remove()">'+_js("Stop")+'</a>','info',false);
    };

    tts_msg.onend = function(event){
        tts_is_speaking = false;
        $('.bottom_notification').remove();
    };

    function tts_stop(){
        if(tts_is_speaking){
            speechSynthesis.cancel();
        }
    }

    function tts_set_lang(id){
        tts_last_used_voice = id;
        createCookie('tts_last_used_voice',id,1095);
        speechSynthesis.cancel();
        if(id > -1){
            tts_msg.voiceURI = tts_voice_list[id].voiceURI
            tts_msg.voice = tts_voice_list[id];
            tts_msg.lang = tts_voice_list[id].lang;
        }else{
            tts_msg.voiceURI = 'native';
            tts_msg.voice = null;
            tts_msg.lang = null;
        }

        setTimeout(function(){
            speechSynthesis.speak(tts_msg);
        },0);
    }
}

function check_column_view_thumbnails(val){
    if(is_article_section() && feed_params.view_style == 2){
        print_articles();
    }
}

function add_clip(tag_id){
    var html = '';

    html += '   <div class="form-group mt-0 inline_form_create">';
    html += '       <label for="add_clip_url">'+_js("Web page URL")+':</label>';
    html += '       <input type="text" id="add_clip_url" onkeypress=\"if(catch_enter(event))add_clip_exec();\" placeholder="'+_js("Paste here the URL of the web page you want to save...")+'"><input type="hidden" id="add_clip_tag_id" value="' + tag_id + '">';
    html += '   </div>';

    var params = {};
    params.content = html;
    dialog('add_clip_dialog',params);
    $('#add_clip_url').focus();
}

function add_clip_exec(url,tag_id){
    if(!url){
        url = $('#add_clip_url').val();
    }
    if(!tag_id){
        tag_id = $('#add_clip_tag_id').val();
    }
    if(!url){
        xalert(_js("Please enter URL!"),1,"$('#add_clip_url').focus().select();");
        return false;
    }
    do_loading(_js("Saving")+'...');
    inno_dialog_close('add_clip_dialog');
    xajax_add_clip(url,tag_id);
}

function add_clip_callback(tag_id){
    if(feed_params.filter_type == 'starred'){
        reload_articles();
        $('#pdinner_starred').effect('highlight',{ },2000);
        $('#pdinner_web_pages').effect('highlight',{ },2000);
        checksum();
    }else if(feed_params.filter_type == 'web_pages'){
        reload_articles();
    }else if(tag_id && feed_params.filter_type == 'folder' && feed_params.filter_id == tag_id){
        reload_articles();
    }else{
        $('#pdinner_starred').effect('highlight',{ },2000);
        $('#pdinner_web_pages').effect('highlight',{ },2000);
        checksum();
    }
}

function set_onboard_category(id){
    if(onboard_categories_locked){
        return;
    }
    var add = true;
    for(var i in onboard_categories){
        if(onboard_categories[i] == id){
            add = false;
            onboard_categories.splice(i, 1);
        }
    }

    if(add == true){
        onboard_categories.push(id);
    }

    mark_onboard_categories();

    var title = $.trim($('#onboard_category_panel_wrapper_' + id).find('.onboard_category_section_title').eq(0).text());
}

function mark_onboard_categories(){
    $('#onboard_categories_wrapper').find('.onboard_category_panel_wrapper').removeClass('onboard_category_panel_selected');
    var feed_ids = '';
    for(var i in onboard_categories){
        $('#onboard_category_panel_wrapper_' + onboard_categories[i]).addClass('onboard_category_panel_selected');
        if(feed_ids != ''){
            feed_ids += ',';
        }
        feed_ids += $('#onboard_category_panel_wrapper_' + onboard_categories[i]).data('feeds');
    }

    var msg_1 = __js("Select %s more", "Select %s more",1);
    var msg_2 = __js("Select %s more", "Select %s more",2);
    var msg_3 = __js("Select %s more", "Select %s more",3);


    if(onboard_minimum_categories - onboard_categories.length <= 0){
        $('#onbard_next_button').attr('disabled',false).html(_js("Start"));
    }else if(onboard_minimum_categories - onboard_categories.length == 1){
        $('#onbard_next_button').attr('disabled','disabled').html(msg_1);
    }else if(onboard_minimum_categories - onboard_categories.length == 2){
        $('#onbard_next_button').attr('disabled','disabled').html(msg_2);
    }else{
        $('#onbard_next_button').attr('disabled','disabled').html(msg_3);
    }

    if(device_type != 'phone'){
        if(onboard_categories.length == 0){
            view_welcome();
        }else{
            view_feeds(feed_ids);
        }
    }
}

function onboard_start_categories(){
    if(onboard_minimum_categories - onboard_categories.length > 0){
        return;
    }
    $('#onbard_next_button').attr('disabled','disabled');
    $('#onbard_next_button').attr('disabled','disabled');
    do_loading();
    onboard_categories_locked = true;
    xajax_onboard_start_categories(onboard_categories);
}

function onboard_start_tour_advanced(){
    onboard_stop_tour();
    setTimeout(function(){
        onboard_start_tour('#onboard_tour_advanced');
    },600);
}

function onboard_start_tour_subscribe(){
    onboard_stop_tour();
    setTimeout(function(){
        onboard_start_tour('#onboard_tour_subscribe');
    },100);
}

function onboard_start_tour_separate_tags(){
    onboard_stop_tour();
    setTimeout(function(){
        onboard_start_tour('#onboard_tour_separate_tags');
    },500);
}

function onboard_start_tour_separate_active_searches(){
    onboard_stop_tour();
    setTimeout(function(){
        onboard_start_tour('#onboard_tour_separate_active_searches');
    },500);
}

function onboard_start_tour_teams_privacy(){
    onboard_stop_tour();
    setTimeout(function(){
        onboard_start_tour('#onboard_tour_teams_privacy');
    },100);
}

function onboard_start_tour_first_subscription(){
    onboard_stop_tour();
    setTimeout(function(){
        onboard_start_tour('#onboard_tour_first_subscription');
    },100);
}

function onboard_start_tour_team_dashboard(is_admin){
    if(check_user_visit(64)){
        return false;
    }
    onboard_stop_tour();
    setTimeout(function(){
        if(is_admin){
            onboard_start_tour('#onboard_tour_team_dashboard_admin');
        }else{
            onboard_start_tour('#onboard_tour_team_dashboard_member');
        }
    },100);
}

var onboard_last_el = null;
var onboard_last_step = 0;
function onboard_start_tour(el){
    if(device_type == 'phone'){
        return;
    }

    if(el == '#onboard_slideshow_v1' || el == '#onboard_tour'){
        if(default_onboarding_shown){
            return;
        }
        createCookie('default_onboarding_shown',"1",30);
        default_onboarding_shown = "1";
    }

    if(inlinemanual_enabled === 1){
        inline_manual_player.activateTopic(38331);
        return;
    }

    if(tree_docked){
        undock_tree_pane();
    }

    if(!show_footer){
        set_footer(1);
    }

    onboard_last_el = el;
    onboard_last_step = 0;

    if(el == '#onboard_tour_advanced'){
        if(!is_article_section()){
            view_all_items();
            do_loading();
            setTimeout(function(){
                onboard_start_tour(el); stop_loading();
            },1000);
            return false;
        }
    }

    if(el == '#onboard_tour_subscribe'){
        var heading = $('#unsubscribed_feed_title').text();
        $('#onboard_tour_subscribe_feed_title').html('<b>' + heading + '</b>');
    }

    if(el == '#onboard_tour_teams_privacy'){
        close_opened_menu();
        setTimeout(function(){
            $('#broadcast_privacy_settings_button').click();
        },5);
    }
    onboard_tour = $(el).tourbus({
        debug: false,
        onDepart: function(leg,bus){
            if(el != '#onboard_tour_team_dashboard_admin' && el != '#onboard_tour_team_dashboard_member'){
                $('#subscriptions_buttons').css('z-index','auto');
                $('#onboard_overlay').remove();
                var modal_overlay = document.createElement('div');
                modal_overlay.className = 'inno_dialog_modal_overlay';
                modal_overlay.id = 'onboard_overlay';
                modal_overlay.style.zIndex = 999;
                modal_overlay.onclick = function(){ onboard_next_tour(); };
                document.body.appendChild(modal_overlay);
                $('#onboard_overlay').disableSelection();
            }
        },
        onStop: function(leg,bus){
            if(onboard_last_el != '#onboard_tour_teams_privacy'){
                inno_dialog_close_all();
            }else{
                setTimeout(function(){
                    $('#broadcast_privacy_settings_button').click();
                },5);
            }

            $('#onboard_overlay').fadeOut(500, function(){ $('#onboard_overlay').remove(); });
            if($('#onboard_dialog_overlay')[0]){
                $('#onboard_dialog_overlay').fadeOut(500, function(){ $('#onboard_dialog_overlay').remove(); });
            }
            $('#subscriptions_buttons').css('z-index',99);

            var tour = $.tourbus(el, {} );
            tour.destroy();
            onboard_tour = null;
            xajax_save_onboarding_stat(el,onboard_last_step);

            if(el == '#onboard_tour_team_dashboard_admin' || el == '#onboard_tour_team_dashboard_member'){
                set_user_visits(64);
            }
        },
        onLegStart: function(leg,bus){
            onboard_last_step = bus.currentLegIndex;
            if(leg.rawData.el == '#sb_rp_section_options'){
                close_opened_menu();
                setTimeout(function(){
                    $('#sb_rp_section_options').click();
                },10);
            }else if(leg.rawData.el == '#sb_rp_mark_read'){
                $(leg.rawData.el).addClass('inno_toolbar_button_hover');
            }else if(leg.rawData.el == '#sb_rp_all_unread'){
                $('#sb_rp_mark_read').removeClass('inno_toolbar_button_hover');
                $(leg.rawData.el).addClass('inno_toolbar_button_hover');
            }else if(leg.rawData.el == '#sb_rp_section_options'){
                $('#sb_rp_all_unread').removeClass('inno_toolbar_button_hover');
            }else if(leg.rawData.el == '#parent_tags'){
                $('#tree_pane').css('z-index','auto');
            }else if(leg.rawData.el == '#team_dashboard_container_bundles'){
                $('#reader_pane').scrollTo($('#team_dashboard_container_bundles'), 250, {axis:'y', offset: {top: -24, left: 0}, onAfter: function(){ bus.repositionLegs(); }});
            }else if(leg.rawData.el == '#team_dashboard_container_digests'){
                $('#reader_pane').scrollTo($('#team_dashboard_container_digests'), 250, {axis:'y', offset: {top: -24, left: 0}, onAfter: function(){ bus.repositionLegs(); }});
            }else if(leg.rawData.el == '#sb_rp_view_options'){
                close_opened_menu();
                setTimeout(function(){
                    $('#sb_rp_view_options').click();
                },5);

                var leg_top = (leg.$el).offset().top;
                var leg_left = (leg.$el).offset().left;
                var menu_width = $('#sb_rp_view_options_menu').width();
                var button_width = $('#sb_rp_view_options').width();
                leg_left -= menu_width;
                leg_left += button_width;
                leg_left += 15; // wtf....
                if(leg.rawData.xvo == "1"){
                    leg_top += 48;
                }else{
                    leg_top += 310;
                }
                $(leg.$el).offset({top: leg_top, left: leg_left});
            }else{
                if(leg.rawData.xaf == 1){
                    $('#reader_pane').css('z-index','auto');
                    var first_article = $('#reader_pane').find('.ar').eq(1);
                    var article_id = $(first_article).data('aid');

                    var old_scroll_top = scroll_top;
                    scroll_top = 0;
                    toggle_articleview(article_id);
                    scroll_top = old_scroll_top;
                    if($('#article_dialog')[0]){
                        $('#article_dialog').append('<div class="inno_dialog_modal_overlay" id="onboard_dialog_overlay" style="z-index: 999;"></div>');
                        $('#onboard_dialog_overlay').on('click',function(){ onboard_next_tour();});
                    }

                    leg.rawData.el = '#article_footer_' + article_id;
                    leg.$target = $(leg.rawData.el);
                    bus.repositionLegs();
                }else if(leg.rawData.xaf == 2){
                    var article_id = get_aid();
                    if(!article_id){
                        var first_article = $('#reader_pane').find('.ar').eq(1);
                        var article_id = $(first_article).data('aid');
                        var old_scroll_top = scroll_top;
                        scroll_top = 0;
                        toggle_articleview(article_id);
                        scroll_top = old_scroll_top;
                        if($('#article_dialog')[0]){
                            $('#article_dialog').append('<div class="inno_dialog_modal_overlay" id="onboard_dialog_overlay" style="z-index: 999;"></div>');
                            $('#onboard_dialog_overlay').on('click',function(){ onboard_next_tour();});
                        }
                    }
                    show_article_menu(article_id,'#amo_' + article_id);

                    leg.rawData.el = '#amo_' + article_id;
                    leg.$target = $(leg.rawData.el);
                    bus.repositionLegs();

                    setTimeout(function(){
                        var leg_top = (leg.$el).offset().top;
                        var leg_left = (leg.$el).offset().left;
                        var menu_width = $('#list_menu').width();
                        leg_left -= menu_width;
                        $(leg.$el).offset({top: leg_top, left: leg_left});
                        $('#list_menu').css('z-index',9998);
                    },100);
                }else if(leg.rawData.xaf == 3){
                    $('#reader_pane').css('z-index','66');
                    close_opened_menu();
                    inno_dialog_close_all();
                    show_keyboard_shortcuts();
                    $('#keyboard_shortcuts_dialog_wrapper').append('<div class="inno_dialog_modal_overlay" id="onboard_dialog_overlay" style="z-index: 999;"></div>');
                    $('#onboard_dialog_overlay').on('click',function(){ onboard_next_tour();});
                }else if(leg.rawData.xaf == 4){
                    inno_dialog_close_all();
                    show_jumper_div(1,true);
                    bus.repositionLegs();
                    $(leg.$el).offset({top: 40});
                }else if(leg.rawData.xaf == 5){
                    $('#reader_pane').click(); // Remove focus from jumper
                    close_opened_menu();
                    setTimeout(function(){
                        $('#sb_rp_settings').click();
                    },10);
                    var leg_top = (leg.$el).offset().top;
                    var leg_left = (leg.$el).offset().left;
                    var menu_width = $('#sb_rp_settings_menu').width();
                    var button_width = $('#sb_rp_settings').width();
                    leg_left -= menu_width;
                    leg_left += button_width;
                    leg_left += 20; // wtf....
                    leg_top += 48;
                    $(leg.$el).offset({top: leg_top, left: leg_left});
                }else if(leg.rawData.xaf == 6){
                    setTimeout(function(){
                        $('#tree_pane').find('.tree_gear_icon').show();
                        open_subscriptions_options_menu();
                        bus.repositionLegs();
                    },10);
                }
            }
            if(leg.rawData.el){
                $(leg.rawData.el).css('z-index',1000);
            }
        },
        onLegEnd: function(leg,bus){
            if(leg.rawData.el){
                $(leg.rawData.el).css('z-index','auto');
            }
            if($(leg.el).is(':visible')){
                $(leg.el).remove();
            }
        }
    });
    onboard_tour.trigger('depart.tourbus');
}

function onboard_stop_tour(){
    if(onboard_tour){
        onboard_tour.trigger('stop.tourbus');
    }
}

function onboard_next_tour(){
    if(onboard_tour){
        onboard_tour.trigger('next.tourbus');
    }
}

function check_youtube_migration_checkboxes(max,el){
    var checked = 0;
    $('.migrate_youtube_checkbox').each(function(){
        if($(this).is(':checked')){
            checked++;
        }
        if(checked > max){
            xalert(_js("You have reached the maximum number of YouTube feeds for your plan.")+'<p><a class="bluelink ajaxed" href="/upgrade/feature/youtube_feeds">'+_js("Upgrade now")+'.</a></p>');
            el.checked = false;
            return false;
        }
    });
    return true;
}

function feature_limit_reached(feature,usage,limit,inline_div_id, params) {
  if(limit == 0) {
    return require_upgrade({ feature: feature, plan: (feature == 'digests') ? 'Custom' : 'Pro' })
  }
  var feature_names = {
    subscriptions: _js('Feeds'),
    boosted_feeds: _js('Boosted feeds'),
    rules: _js('Rules'),
    filters: _js('Filters'),
    duplicate_filters: _js('Duplicate filters'),
    newsletters: _js('Newsletters'),
    digests: _js('Digests'),
    facebook_page_feeds: _js('Facebook pages'),
    twitter_feeds: _js('Twitter feeds'),
    vk_feeds: _js('VK feeds'),
    webfeeds: _js('Web feeds'),
    telegram_feeds: _js('Telegram feeds'),
  };

  var feature_name = (feature_names[feature]) ? feature_names[feature] : feature;

  getSVG('/images/svg/limit-reached-background.svg', function (svg) {
    var html = '<div class="limit_reached_img">';
    if(limit > 0) {
      html += svg + '<div class="limit_reach_limits graylink"><span class="limit_reach_usage tree_issue">' + usage + '</span>/<span class="limit_reach_limit">' + limit + '</span></div></div>';
    }
    var limit_reached_title = sprintf(_js('You have reached maximum allowed number of %s!'), feature_name);
    if(params && params.title) {
      limit_reached_title = params.title;
    }
    html += '<div class="limit_reached_title">' + limit_reached_title + '</div>';
    html += '<div class="limit_reached_text graylink">' + _js('Reduce your usage or consider upgrading to a higher tier.') + '</div>';

    if (feature == ' facebook_page_feeds' || feature == 'twitter_feeds' || feature == 'vk_feeds' || feature == 'telegram_feeds') {
      feature = 'social_feeds';
    }

    if (inline_div_id) {
      $(inline_div_id).html(html);
    } else {
      dialog('limit_reached_dialog', {content: html, feature: feature});
      $('#limit_reached_dialog_buttonbar_container').find('.inno_dialog_buttonbar_button').eq(0).addClass('greenbutton').focus();
    }
    resize();
  })
}

function subscriptions_max_reached_import(type,current,max,subscriptions){
    var html = '<div class="limit_reached_img"><img src="/images/limits/limit-reached-subscriptions-' + get_theme_name() + '.svg"></div>';
    html += '<div class="limit_reached_title">' + _js('File exceeds maximum allowed number of subscriptions!') + '</div>';
    if(type == 1){
        html += '<div class="max_subscriptions_alert_subtitle">' + sprintf(_js('Your file contains %s out of %s maximum allowed subscriptions for your plan.'),'<b>' + parseInt(current) + '</b>','<b>' + parseInt(max) + '</b>') + '</div>';
    }else if (type == 2){
        html += '<div class="max_subscriptions_alert_subtitle">' + sprintf(_js('Your Feedly account contains %s out of %s maximum allowed subscriptions for your plan.'),'<b>' + parseInt(current) + '</b>','<b>' + parseInt(max) + '</b>') + '</div>';
    }

    if(subscriptions < max){
        html += '<div class="max_subscriptions_alert_subtitle">' + _js('You can continue, but your import will be partial.') + ' ' + _js('To avoid that either optimize your file or upgrade to a higher plan.') + '</div>';
    }

    html += '<div class="max_subscriptions_alert_subtitle">' + sprintf(_js("You are currently using %s out of %s subscriptions for your plan."),'<b>' + subscriptions + '</b>','<b>' + max + '</b>') + '</div>';

    dialog('max_subscriptions_import',{content: html, type: type});

    $('#max_subscriptions_import_buttonbar_container').find('.inno_dialog_buttonbar_button').eq(0).addClass('greenbutton').focus();

    if(subscriptions >= max){
        $('#max_subscriptions_import_buttonbar_container').find('.inno_dialog_buttonbar_button').eq(1).remove();
    }

    resize();
}

function subscriptions_max_reached_import_execute(type){
    if(type == 1){
        $('#import_ignore_limit_file').val('1');
        $('#opml_import_form_file').submit();
    }else if(type == 2){
        $('#import_ignore_limit_feedly').val('1');
        $('#opml_import_form_feedly').submit();
    }
}


function start_youtube_migration(){
    var feeds = [];
    $('.migrate_youtube_checkbox').each(function(){
        if($(this).is(':checked')){
            feeds.push($(this).val());
        }
    });

    if(feeds.length == 0){
        xalert(_js("Please select at least one feed."));
        return false;
    }
    do_loading('Converting YouTube feeds. This might take a while...');
    disable_dialog_button('youtube_migration_dialog',0);
    disable_dialog_button('youtube_migration_dialog',1);
    $('#youtube_migration_dialog').html('<div class="loader loader_high"></div>');
    xajax_start_youtube_migration(feeds);
}

function get_text_selection(){
    var text = '';
    var html = '';
    if(window.getSelection){
        var sel = window.getSelection();
        if(sel.rangeCount){
            text = sel.toString();
            var container = document.createElement("div");
            for(var i=0, len=sel.rangeCount; i<len; ++i) {
                container.appendChild(sel.getRangeAt(i).cloneContents());
            }
            html = container.innerHTML;
        }
    }else if(document.selection && document.selection.type != 'Control'){
        text = document.selection.createRange().text;
        html = document.selection.createRange().htmlText;
    }
    return {text: text, html: html};
}

function set_server_time(timestamp){
    server_time = timestamp;
}

function get_server_time(){
    return (server_time) ? server_time : false;
}

function increment_server_time(){
    if(server_time){
        server_time++;
    }
}

function time2str(ts){
    var server_time = get_server_time();

    if(!server_time){
        return false;
    }

    if(!ts){
        return "N/A";
    }

    var diff = server_time - ts;
    if(diff > 0){
        var day_diff = Math.floor(diff / 86400);
        if(day_diff == 0){
            if(diff < 60) return _js("now");
            if(diff < 3600) return Math.floor(diff / 60) + "m";
            if(diff < 7200) return "1h";
            if(diff < 86400) return Math.floor(diff / 3600) + "h";
        }
        if(day_diff == 1) return "1d";
        if(day_diff < 7) return day_diff + "d";
        if(day_diff < 31) return Math.ceil(day_diff / 7) + "w";
        return false; // We don't want to format absolute dates in JS...
    }else{
        return _js("now");
    }
}

function change_bundle_subscription(id,check){
    do_loading();
    xajax_change_bundle_subscription(id,check);
}

function update_next_bookmarklet_url(value){
    if(!value){
        var url = application_address + '/next/all';
        var caption = _js("Next")+' »';
    }else{
        var url = application_address + '/next/folder/' + encodeURIComponent(value);
        var caption = sprintf(_js("Next (%s)") + ' »',value);
    }
    $('#next_button_bookmarklet_url').attr('href',url).html(caption);
}

function get_rss_feed(filter_type,filter_id,type,enable){
    do_loading();
    xajax_get_rss_feed(filter_type,filter_id,type,enable);
}

function filter_feed(id,rule_name,context){
    add_rule({rule_id:0, filter_type: 1, filter_id: id, rule_name: rule_name, context: context});
}

function welcome_action(){
    if(device_type == 'phone'){
        show_discovery_overlay();
    }else{
        toolbar_action('add',true);
    }
}

function start_trial(trial_id){
    $('#start_trial_button').html(_js("Starting...")).attr('disabled','disabled');
    do_loading();
    xajax_start_trial(trial_id);
}

function ping_cl_extension(){
    if($('#ff_extension_craigslist').text() == "1"){
        setTimeout(function(){
            var event = document.createEvent('CustomEvent');
            event.initCustomEvent("craigslist_event", true, true, { });
            document.documentElement.dispatchEvent(event);
        },1);
    }else if($('#inoreader_cl_div')[0]){
        window.postMessage('cl_ping', "*");
    }
}

function check_cl_notice(){
    if($('#inoreader_cl_div')[0] && $('#cl_block_notice')[0]){
        $('#cl_block_notice').html(_js("Craigslist Helper Extension is fetching the feed...")+' '+_js("Try to reload it in a minute.")+' <a class="whitelink underlink" href="javascript:void(0);" onclick="print_articles();">'+_js("Reload now.")+'</a>').removeClass('alert_state').addClass('info_state');
    }
}

function download_opml_backup(id){
    do_loading();
    xajax_download_opml_backup(id);
}

function download_opml_backup_handler(data){
    var filename = 'Inoreader_opml_backup_' + data.date + '.xml';
    var element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(data.opml));
    element.setAttribute('download', filename);
    element.style.display = 'none';
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
}

function set_opml_backup_to_dropbox(checked,conn){
    if(conn == 0){
        xconfirm(_js("You need to connect your Dropbox account first.")+' '+_js("Connect now?"),'connect_service(' + dropbox_network_id + ')');
        if(checked){
            $('#opml_backup_to_dropbox').prop('checked',false);
        }
        return;
    }
    do_loading();
    xajax_set_opml_backup_to_dropbox(checked);
}

function set_opml_backup_to_gdrive(checked,conn){
    if(conn == 0){
        xconfirm(_js("You need to connect your Google Drive first.")+' '+_js("Connect now?"),'do_loading();xajax_connect_gdrive();');
        if(checked){
            $('#opml_backup_to_gdrive').prop('checked',false);
        }
        return;
    }
    do_loading();
    xajax_set_opml_backup_to_gdrive(checked);
}

function load_older_articles(){
    topics_progress_bar.remove_bar();
    $('#reader_pane').append('<div id="next_articles"><span class=\"next_articles next_hub\">'+_js("Loading")+'...</span></div>');
    $('#older_articles_hint').html(_js("Loading")+'...');
    $('#load_older_articles_button').html(_js("Loading")+'...');
    set_feed_param('no_unread_checked',1);
    // article_to_scroll_to = $('#reader_pane').find('.ar').last().data('aid');
    scroll_to_first_article_id = true;
    check_bottom(true);
}

function clear_no_more_div(){
    if($('#all_read_message')[0]){
        return;
    }

    if($('#no_more_div')[0]){
        $('#no_more_div').remove();
    }
    if($('#older_articles_hint')[0]){
        $('#older_articles_hint').remove();
    }
    if($('#tiles_clearer')[0]){
        $('#tiles_clearer').remove();
    }
}

function team_add_member(id,name,picture,access,edit_disabled,enabled){
    var is_duplicate = false;
    $('#team_members').find('.team_member').each(function(){
        if(id == $(this).data('id')){
            is_duplicate = true;
            return false;
        }
    });
    if(is_duplicate){
        create_bottom_notification(_js("Already a member!"),'info',true,1000);
        return false;
    }
    if(!access){
        access = 1;
    }
    var access_select = ['','','',''];
    access_select[access] = ' selected';
    var edit_disabled_txt = (edit_disabled == 1) ? ' disabled' : '';
    var disabled_class = (enabled == 0) ? ' team_member_disabled2' : '';
    if(enabled == 0){
        name += ' ['+_js("Disabled")+']';
    }

    var html = '<div class="team_member" data-id="' + id + '">';
    html += '<div class="team_member_picture pull_left' + disabled_class + '" onclick="dialog(\'profile_dialog\',{user_id: ' + id + '})"><img src="' + picture + '"></div>';
    html += '<div class="team_member_name pull_left' + disabled_class + '" onclick="dialog(\'profile_dialog\',{user_id: ' + id + '})">' + name + '</div>';
    html += '<div class="team_member_role pull_left">';
    html += '<select' + edit_disabled_txt + ' class="team_member_role_select">';
    html += '<option value="2"' + access_select[2] + '>'+_js("Administrator")+'</option>';
    html += '<option value="1"' + access_select[1] + '>'+_js("Member")+'</option>';
    html += '<option value="0"' + access_select[0] + '>'+_js("No access")+' ('+_js("Remove")+')</option>';
    html += '</select>';
    html += '</div>';
    html += '<div class="clearfix"></div>';
    html += '</div>';

    $('#team_members').prepend(html);
}

function save_team(id){
    var post = {};
    post.id = id;
    post.organization_id = $('#team_organization_id').val();
    post.name = $('#team_name').val();
    post.color = $('#team_color').val();
    post.description = $('#team_description').val();
    post.msteams_enabled = ($('#team_integration_checkbox_msteams').is(':checked')) ? 1 : 0;
    post.msteams_webhook_url = $('#team_msteams_webhook_url').val();
    post.slack_webhook_url = $('#team_slack_webhook_url').val();
    post.slack_workspace_name = $('#team_slack_workspace_name').val();
    post.slack_channel_name = $('#team_slack_channel_name').val();
    post.slack_enabled = ($('#team_integration_checkbox_slack').is(':checked')) ? 1 : 0;
    post.is_public = ($('#team_export_status').is(':checked')) ? 1 : 0;
    post.read_status_visibility = $('input[name="team_read_status_visibility"]:checked').val();
    post.members = [];

    if(post.name == ''){
        xalert(_js("Please enter a name for this team channel."));
        return false;
    }

    $('.edit_team_member').each(function(){
        post.members.push({email: $(this).data('email'), access: $(this).find('select.edit_team_member_access_select').val()});
    });

    if(post.members.length == 0){
        xalert("Please add at least one member to your channel!",0);
        return false;
    }

    if(post.msteams_enabled == 1 && !is_url(post.msteams_webhook_url)){
        xalert(_js('Please enter valid webhook URL'),0,"$('#team_msteams_webhook_url').focus().select()");
        return false;
    }

    if(post.slack_enabled == 1 && !is_url(post.slack_webhook_url)){
        post.slack_enabled = 0;
        post.slack_webhook_url = '';
        post.slack_channel_name = '';
    }

    xajax_save_team(post);
    do_loading();
    disable_dialog_button('edit_team_dialog',0);
}

function check_save_team(){
    if(feed_params.filter_type == 'teams'){
        do_loading();
        view_teams();
    }
}

function delete_team(id){
    xconfirm(_js("Are you sure?"),"do_loading();xajax_delete_team(" + id + ")");
}

function leave_team(id){
    xconfirm(_js("Are you sure?"),"do_loading();xajax_leave_team(" + id + ")");
}

function show_all_team_members(id){
    $('#team_card_' + id).find('.team_card_members').find('.hidden').removeClass('hidden');
    $('#team_card_' + id).find('.team_card_member_more').remove();
}

function toggle_team_broadcast_notification(team_id,div_id){
    menu_checkbox_toggle('#team_' + div_id + '_broadcast_notification');
    var checked = (menu_checkbox_is_checked('#team_' + div_id + '_broadcast_notification')) ? 1 : 0;
    xajax_update_team_membership(team_id,'broadcast_notification',checked);
}

function toggle_team_comment_notification(team_id,div_id){
    menu_checkbox_toggle('#team_' + div_id + '_comment_notification');
    var checked = (menu_checkbox_is_checked('#team_' + div_id + '_comment_notification')) ? 1 : 0;
    xajax_update_team_membership(team_id,'comment_notification',checked);
}

function hide_feed_suggestions_globally(){
    xajax_save_user_pref('feed_suggestions',0);
    $('#reader_pane').find('.unsubscribed_feed_header').slideUp('fast');
    $('#reader_pane').find('.unsubscribed_feed_suggestions_label').slideUp('fast');
}

function show_bottom_survey(survey_data){
    var params = {};
    params.id = survey_data.id;

    if(survey_data.id == 3){
        var survey_row1 = '';
        var survey_row2 = '';
        for(var i in survey_data.answers){
            survey_row1 += '<td style="text-align:center;"><label class="nps_label" for="survey_nps_answer_' + survey_data.answers[i].id + '">' + survey_data.answers[i].answer + '</label></td>';
            survey_row2 += '<td style="text-align:center;"><input type="radio" name="nps_answers" id="survey_nps_answer_' + survey_data.answers[i].id + '" value="' + survey_data.answers[i].id + '" style="cursor:pointer;" onchange="answer_survey(' + survey_data.id + ', ' + survey_data.answers[i].id + ')"></td>';
        }

        var html = '<div class="survey_header_nps">' + _js('How likely are you to recommend us to a friend or colleague?') + '</div>';
        html += '<div class="survey_subheader_nps"></div>';
        html += '<div class="graylink survey_subheader_nps_left"><label for="survey_nps_answer_12">' + _js('Not at all likely') + '</label></div>';
        html += '<div class="graylink survey_subheader_nps_right"><label for="survey_nps_answer_22">' + _js('Extremely likely') + '</label></div>';
        html += '<table style="width:100%;"><tr class="tr1">' + survey_row1 + '</tr><tr class="tr2">' + survey_row2 + '</tr></table>';
        params.dialog_width = 400;
    }else{
        var html = '<div class="survey_header">' + survey_data.title + '</div>';
        for(var i in survey_data.answers){
            if(survey_data.answers[i].has_comment == 1){
                html += '<div class="survey_comment"><input type="text" placeholder="' + survey_data.answers[i].answer + '" onfocus="$(this).next(\'button\').fadeIn()"> <button class="bluebutton" onclick="answer_survey(' + survey_data.id + ', ' + survey_data.answers[i].id + ',$(this).prev(\'input\').val())">' + _js('Save') + '</button></div>';
            }else{
                html += '<a class="underlink_hover" href="javascript:void(0);" onclick="answer_survey(' + survey_data.id + ', ' + survey_data.answers[i].id + ')">' + survey_data.answers[i].answer + '</a>';
            }
        }
        params.dialog_width = 340;
    }
    params.content = html;

    dialog('bottom_survey_dialog',params);
}

var survey_answered = false;
function answer_survey(survey,answer,comment){
    if($('#bottom_survey_dialog')[0]){
        $('#bottom_survey_dialog').html('<div class="survey_thankyou">Thank you!</div>');
        setTimeout(function(){
            $('#bottom_survey_dialog_wrapper').fadeOut('fast');
        },2000);
        setTimeout(function(){
            inno_dialog_close('bottom_survey_dialog');
        },3000);
    }

    if(survey_answered){
        return;
    }

    xajax_answer_survey(survey,answer,comment);
    survey_answered = true;
}

function dashboard_collapse(dsh_id,das_id){
    if($('#gad_'+das_id).is(':hidden')){
        $('#gad_'+das_id).show();
        $('#collapse_'+dsh_id+'_'+das_id).html("<span class=\"icon-player-minimize gad_icon\"></span>");
        xajax_dashboard_collapse('add',dsh_id,das_id);
    }else{
        $('#gad_'+das_id).hide();
        xajax_dashboard_collapse('remove',dsh_id,das_id);
        $('#collapse_'+dsh_id+'_'+das_id).html("<span class=\"icon-player-maximize gad_icon\"></span>");
    }
}

function dahsboard_warning(){
    stop_loading();
    var text =
        xalert('<div class="">' + _js("Free users can only use the default dashboard and gadgets.") + '<br><br>' + sprintf(_js("If you want to customize your dashboard, please %s"),"<a class=\"whitelink underlink ajaxed\" onclick=\"inno_dialog_close(\'xalert\');\" href=\"/upgrade/feature/dashboard\">" + _js("upgrade your account") + "</a>") + '</div>');
}

function get_loading_img(){
    return '<div class="loader loader_high"></div>';
}

function add_rule(params){ // Foxer
    if(!params){
        params = { rule_id: 0 };
    }
    if(params.filter_type && params.filter_id && params.rule_id === 0) {
      params.with_context = true;
    }
    show_dialog('rule_dialog',params);
}

function gadget_preview(params){ // Foxer
    show_dialog('gadget_preview',params);
}

function edit_rule(id,context, rule_type){
    if(!rule_type){
        rule_type = 1;
    }
    show_dialog('rule_dialog',{ rule_id: id , context: context, rule_type: rule_type});
}

function delete_rule(id,context,rule_type,title){ // Foxer
    if(!title){
        title = '';
    }else{
        title = '<p><b>' + title + '</b></p>';
    }
    if(rule_type == 2 || rule_type == 3){
        xconfirm(_js("Are you sure you want to delete this filter") + '?' + title,'disable_dialog_button("rule_dialog",0);do_loading();xajax_delete_rule(' + id + ',"' + context + '");');
    }else{
        xconfirm(_js("Are you sure you want to delete this rule") + '?' + title,'disable_dialog_button("rule_dialog",0);do_loading();xajax_delete_rule(' + id + ',"' + context + '");');
    }
}

function delete_book(id){ // Foxer
    xconfirm(_js("Are you sure you want to delete this contact") + '?','xajax_delete_book(' + id + ');');
}

function delete_book_group(id){ // Foxer
    xconfirm(_js("Are you sure you want to delete this group") + '?','xajax_delete_book_group(' + id + ');');
}

function show_comma_help(el){
    var show_comma_help = false;
    var $sel = $(el).parents('.rule_section_container_row').find('select.match_type');
    if($sel[0] && $sel.val() != 6 && $sel.val != 7){
        return true;
    }
    return false;
}

function add_new_contact(){
    $('.info_state').hide();
    $('#book_table').show();
    if(!$('#book_new').length){
        res = "<tr id=\"book_new\" class=\"tr1\">&nbsp;</tr>";
        $('#table_cell').prepend(res);
        new_line = true;
        xajax_edit_book('new');
    }else{
        $('#book_name_new').focus();
    }
    $('#address_book').css('overflow', 'auto');
}

function add_new_group(){
    $('#no_new_group').hide();
    $('#group_table').show();
    if(!$('#book_group_new').length){
        res = "<tr id=\"book_group_new\" class=\"tr1\"><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>";
        $('#table_group_cell').prepend(res);
        new_line = true;
        xajax_edit_book_group('new');
    }else{
        $('#group_name_new').focus();
    }
}


function set_status(status,target,value){
    var guid;
    if(status == '0' || status == '2' || status == '5'){
        if(status == '5'){ // Notifications
            if(window.Notification){
                if(!checkUserPermission()){
                    target.html('<input name="action_params[]" type="hidden"  value=""/><input name="new_tag[]" type="hidden"  value="" /><a id="ntfpermlink" class="bluelink underlink" href="javascript:void(0)" onclick="Notification.requestPermission(function(){ if(checkUserPermission()){ $(\'#ntfpermlink\').fadeOut();}});">' + _js("Click here to enable notifications") + '</a>');
                }else{
                    target.html('<input name="action_params[]" type="hidden"  value=""/><input name="new_tag[]" type="hidden"  value="" />');
                }
            }else{
                target.html('<input name="action_params[]" type="hidden"  value=""/><input name="new_tag[]" type="hidden" value="" /><span style=\"color:red;\">' + _js("Your current browser does not support Web Notifications.") + '</span>');
            }
        }else{
            target.html('<input name="action_params[]" type="hidden"  value=""/><input name="new_tag[]" type="hidden" value="" />');
        }
    }else if(status == '1'){
        guid = $.guid++;
        target.html('<div id="tags_'+guid+'">' + _js("Loading") + '...</div>');
        xajax_get_rule_tags('tags_'+guid,value);
    }else if(status == '3'){
        guid = $.guid++;
        target.html('<div id="brd_options_'+guid+'">' + _js("Loading") + '...</div><input name="new_tag[]" type="hidden" value="" />');
        xajax_get_rule_broadcast_options('brd_options_'+guid,value);
    }else if(status == '4'){
        guid = $.guid++;
        var value_spl = value.split(/\|/);
        var email = (value_spl[0]) ? value_spl[0].replace('|', ',') : '';
        value_spl.shift();
        //var shifted = value_spl.join("|");
        //var email_prefix = (shifted) ? shifted.replace(/&#039;/g,'') : '';
        var email_prefix = value_spl.join("|");
        var html = '<input type="hidden" name="action_params[]" id="rule_spliced_email_' + guid + '">' +
          '<input onkeyup="splice_email_params(' + guid + ')" onblur="splice_email_params(' + guid + ')" type="text" id="rule_sent_mail_'+guid+'" style="width:158px;" value="'+email+'" placeholder="' + _js("Enter recipient address.") + '"> ' +
          '<a style="margin-' + float_left + ':18px;" class="graylink underlink" href="javascript:void(0);" onclick="dialog(\'edit_emailrule_settings\',{guid: '+guid+'})">' + _js("Email settings") + '</a>'+
          '<input name="new_tag[]" type="hidden" value="" />';
        target.html(html);
        target.find('#rule_spliced_email_' + guid).val(value);

        emailrule_templ[guid] = email_prefix;
        rule_init_email_autocomplete('rule_sent_mail_'+guid);
    }else if(status == '6' || status == '7' || status == '8' || status == '9' || status == '10' || status == '13' || status == '15'){
        var rand = Math.floor(Math.random() * (2000000000 - 1 + 1)) + 1;
        target.html('<input name="new_tag[]" type="hidden" value="" /><span id="rule_ril_info_' + rand + '">' + _js("Loading") + '...</span>');
        guid = $.guid++;
        xajax_check_rule_ril_status(status,rand,guid,value);
    }else if(status == '11'){
        var tippy_text = _js("Push notifications are only supported by our official mobile apps:");
        tippy_text += '<ul>';
        tippy_text += '<li><a target="_blank" href="https://play.google.com/store/apps/details?id=com.innologica.inoreader" class="lightbluelink">' + _js("Inoreader for Android version 3.5 or later") + '</a></li>';
        tippy_text += '<li><a target="_blank" href="https://apps.apple.com/us/app/inoreader/id892355414" class="lightbluelink ">' + _js("Inoreader for iOS version 3.3 or later") + '</a></li>';
        tippy_text += '</ul>';
            tippy_text += _js("You can also enter an optional prefix, which will always be prepended to the notification text.");

        target.html('<input type="text" name="action_params[]" style="width:158px;" value="'+value+'"/ placeholder="' + _js("Prefix") + ' (' + _js("optional") + ')"><input name="new_tag[]" type="hidden" value="" /> <span class="icon16 icon_gray icon-question-mark" style="margin-' + float_left + ':18px;" data-tippy-interactive="true" id="rule_action_tippy_' + guid + '"></span>');
        tippy('#rule_action_tippy_' + guid, { content: tippy_text});
    }else if(status == '16'){
        target.html('<input type="text" name="action_params[]" style="width:158px;" value="'+value+'"/ placeholder="' + _js("Webhook URL...") + '"><input name="new_tag[]" type="hidden" value="" /> <a style="margin-' + float_left + ':18px;" class="graylink" href="javascript:void(0);" onclick="show_webhooks_info(true);"><span class="icon16 icon_gray icon-question-mark" data-tippy-interactive="true" id="rule_action_tippy_' + guid + '"></span></a>');

        var text = _js("Webhooks allow you to receive real-time notifications on a custom URL defined by you.");
        text += '<p><a class="whitelink underlink" href="javascript:void(0)" onclick="show_webhooks_info(true)">' + _js('Read more') + '</a><p>';

        tippy('#rule_action_tippy_' + guid, { content: text});
    }else if(status == '14'){
        target.html('<span class="icon16 icon_gray icon-question-mark" data-tippy-content="' + _js("Useful if you want other rules to be triggered by this rule.") + '" id="rule_action_tippy_' + guid + '"></span>');
        tippy('#rule_action_tippy_' + guid);
    }
}

function switch_emailrule_type(){
    var el = $("#emailrule_type_checks input[type='radio']:checked");
    var el_val = el.val();

    var target_div_bodytype = $("#body_html_checks");
    if(el_val == 1){
        if(target_div_bodytype.length){
            target_div_bodytype.show();
        }else{
            var d = '<div id="body_html_checks" style="height:30px;">'+
                '<input type="radio" id="body_html_1" name="body_html" value="1" onchange="switch_emailrule_bodydetails();"> <label for="body_html_1">'+_js("Rows in HTML table")+'</label>'+
                '<input type="radio" id="body_html_2" name="body_html" value="2" checked onchange="switch_emailrule_bodydetails();"> <label for="body_html_2">'+_js("Custom HTML")+'</label>'+
            '</div>';
            $(".input_block.emailrule_body").append(d);
        }
    }else{
        target_div_bodytype.hide();
    }

    var target_div_bodydetails = $(".body_details.customplain");
    if(el_val == 1){
        $('#body_html_1').prop('checked', true);
        switch_emailrule_bodydetails();
        $(".body_details.customplain").hide();
    }else {
        if (target_div_bodydetails.length) {
            target_div_bodydetails.show();
        }else{
            var d = '<div class="body_details customplain">' +
                '<div style="width:100%;padding-bottom:10px;" class="body_row">' +
                '<textarea style="width:95%;" name="emailbody_row_00"  id="emailbody_row_00" value="" rows="10" oninput="calculate_input(\'00\', 10000);" onclick="set_caret_area(this);return false;">[CONTENT]</textarea>' +
                '<br><span><a href="javascript:void(0)" class="bluelink underlink" onclick="dialog(\'emailrule_constants\');">' + _js('Predefined values') + '</a></span>'+
                '<br /><span id="input_count_00" style="padding-top:5px;position:absolute;" class="graylink"></span>'+
                '</div></div>';
            var existing = ($(".body_details.rows").length) ? $(".body_details.rows") : $(".body_details.customhtml");
            existing.after(d);
            calculate_input('00', 10000);
        }
        $(".body_details.rows").hide();
        $(".body_details.customhtml").hide();
    }
}

function switch_emailrule_bodydetails(){
    var el = $("#body_html_checks input[type='radio']:checked");
    var el_val = el.val();
    if(el_val == 1){
        var target_class = "rows";
    }else if(el_val == 2){
        var target_class = "customhtml";
    }
    if(typeof target_class === "undefined"){
        return false;
    }
    var target_div = $("." + target_class);
    $(".body_details").not(target_class).hide();
    if(target_div.length){
        target_div.show();
    }else{
        if(el_val == 2){
            var d = '<div class="body_details customhtml">' +
                '<div style="width:100%;padding-bottom:10px;" class="body_row">'+
                '<textarea style="width:95%;" name="emailbody_row_0"  id="emailbody_row_0" value="" rows="10" oninput="calculate_input(\'0\', 10000);" onclick="set_caret_area(this);return false;">[CONTENT]</textarea>'+
                '<br><span><a href="javascript:void(0)" class="bluelink underlink" onclick="dialog(\'emailrule_constants\');">' + _js('Predefined values') + '</a></span>'+
                '<br /><span id="input_count_0" style="padding-top:5px;position:absolute;" class="graylink"></span>'+
                '</div></div>';
            var existing = ($(".body_details.rows").length) ? $(".body_details.rows") : $(".body_details.customplain");
            existing.after(d);
            calculate_input('0', 10000);
        }else{
            var t = ['[HEADER]', '[SUBHEADER]', '[CONTENT]', '[FOOTER]'], i, d = '<div class="body_details rows">';
            var t_capt = [_js('Email header'), _js('Article title and feed name'), _js('Main article content'), _js('Email footer')];
            d += '<ul id="emailrule_body_sorter" class="inno_sortable" style="padding-bottom:10px;">';
            for (i = 0; i < t.length; ++i) {
                d += '<li id="li_emailbody_row_'+(i+1)+'" class="ui-state-default graylink body_row" style="position:relative;">'+
                '<span class="sbro_icon_right icon16 icon-arrow-resize icon_gray"></span> <input type="checkbox" id="emailbody_row_'+(i+1)+'" checked value="'+t[i]+'"> &nbsp;&nbsp;'+t_capt[i]+
                '</li>';
            }
            d += '</ul> <a href="javascript:void(0)" onclick="add_sortable_li_emailbody();" style="text-decoration:underline;" class="bluelink">'+_js('Add row')+'</a></div>';
            var existing = ($(".body_details.customhtml").length) ? $(".body_details.customhtml") : $(".body_details.customplain");
            existing.after(d);
            $('#emailrule_body_sorter').sortable({axis: 'y', tolerance: 'pointer'}).disableSelection();
        }
    }
}

function add_sortable_li_emailbody(){
    var id_max = 0;
    var $parent = $('#emailrule_body_sorter');
    $parent.find('textarea,input:checkbox').each(function() {
        var id = this.id || "";
        var match = id.match(/^(.+?)(\d+)$/i) || [];
        if(match.length == 3) {
            id_max = Math.max(match[2], id_max);
        }
    });
    var new_index = $parent.length;
    var newId = (Math.max(new_index, id_max) + 1);

    var d = '<li class="ui-state-default graylink body_row" style="position:relative;" id="li_emailbody_row_'+newId+'">'+
        '<span class="sbro_icon_right icon16 icon-arrow-resize icon_gray"></span> ' +
        '<a href="javascript:void(0)" onclick="rem_row(\'.body_row\', this);return false;"><span style="' + float_left + ':9px;top:6px;" class="icon16 icon-minus_circle" title="'+_js('Remove row')+'"></span></a>'+
        '<textarea id="emailbody_row_'+newId+'" rows="2" style="margin-' + float_left + ':23px;width:90%;" oninput="calculate_input(\''+newId+'\');" onclick="set_caret_area(this);return false;"></textarea>'+
        '<br><span style="padding-' + float_left + ':23px;"><a href="javascript:void(0)" class="bluelink underlink" onclick="dialog(\'emailrule_constants\');">' + _js('Predefined values') + '</a></span>'+
        '<br /><span id="input_count_'+newId+'" style="padding-' + float_left + ':23px;" class="graylink"></span>'
    '</li>';
    $("#emailrule_body_sorter").append(d);
    calculate_input(newId);
}

function save_emailrule_settings(close_opened_dialogs){
    var container = $('.emailrule_settings_container').attr('data-guid');
    if(!container){
        return false;
    }
    var email_type = $("#emailrule_type_checks input[type='radio']:checked").val();
    var email_subj = $("#emailrule_subject").val();

    var email_bodyhtml_type = $("#body_html_checks input[type='radio']:checked").val();
    if(typeof email_bodyhtml_type === "undefined" && email_type == 1){
        return false;
    }
    if(email_type == 2){
        var email_body_class = ".body_details.customplain";
    }else if(email_type == 1){
        if(email_bodyhtml_type == 1){
            var email_body_class = ".body_details.rows";
        }else if(email_bodyhtml_type == 2){
            var email_body_class = ".body_details.customhtml";
        }
    }
    var email_body = $(email_body_class);
    if(typeof email_body === "undefined" || !email_body || email_body.is(":hidden")){
        return false;
    }

    if($('.body_details [id^=input_count_]').not(":hidden").hasClass('input_count_err')){
        xalert(_js('Email content exceeds allowed characters count'));
        return false;
    };

    var post = {};
    post.et = email_type;
    post.es = email_subj;
    post.ebt = email_bodyhtml_type;
    post.eb = [];
    $(email_body_class+' [id^=emailbody_row_]').each(function() {
        if(this.type == 'checkbox' && this.checked){
            post.eb.push(this.value);
        }else if(this.type == 'textarea'){
            post.eb.push(this.value);
        }
    });
    var obj = $('#rule_spliced_email_'+container);
    var cur_val = $('#rule_sent_mail_'+container).val();
    if(cur_val){
        cur_val = cur_val + "|" + JSON.stringify(post);
    }else{
        cur_val = JSON.stringify(post);
    }

    obj.val(cur_val);
    emailrule_templ[container] = JSON.stringify(post);
    //obj.data('templ',JSON.stringify(post));

    if(typeof close_opened_dialogs === "undefined"){
        close_opened_dialogs = true;
    }

    if(close_opened_dialogs){
        disable_dialog_button('edit_emailrule_settings',0);
        inno_dialog_close('edit_emailrule_settings');
    }
    return true;
}

function calculate_input(id, sum){
    if(!sum){
        var cs = 200;
    }else{
        var cs = sum;
    }
    var el = $('#emailbody_row_'+id).not(":hidden").val();
    cs -= el.length;
    if(cs < 0){
        $('#input_count_'+id).css('color','#cc3f3f').text(cs);
        $('#input_count_'+id).addClass('input_count_err');
    }else{
        $('#input_count_'+id).css('color','').text(cs);
        $('#input_count_'+id).removeClass('input_count_err');
    }
}

function show_push_notifications_info(prefix_text){
    var text = _js("Push notifications are only supported by our official mobile apps:");
    text += '<ul>';
    text += '<li><a target="_blank" href="https://play.google.com/store/apps/details?id=com.innologica.inoreader" class="bluelink ">' + _js("Inoreader for Android version 3.5 or later") + '</a></li>';
    text += '<li><a target="_blank" href="https://apps.apple.com/us/app/inoreader/id892355414" class="bluelink ">' + _js("Inoreader for iOS version 3.3 or later") + '</a></li>';
    text += '</ul>';
    if(prefix_text){
        text += _js("You can also enter an optional prefix, which will always be prepended to the notification text.");

    }
    xalert(text);
    $('#xalert_wrapper').css('width',500);
    inno_dialog_resize();
}

function show_webhooks_info(){
    var text = _js("Webhooks allow you to receive real-time notifications on a custom URL defined by you.");
    text += '<p>' + sprintf(_js('%s will make a POST request to the specified URL every time your rule matches an article.'),application_name);
    text += ' ' + _js('The POST body will contain a JSON object with the following properties:') + '</p>';
    text += '<ul>';
    text += '<li><code>rule</code> - ' + _js('Information about the matched rule') + '</li>';
    text += '<li><code>items</code> - ' + _js('List containing all matched articles') + '</li>';
    text += '</ul>';
    text += '<p>' + sprintf(_js('Each object in %s list contains the following:'),'<code>items</code>') + '</p>';
    text += '<ul>';
    text += '<li><code>crawlTimeMsec</code> - ' + _js('Fetched date in miliseconds') + '</li>';
    text += '<li><code>timestampUsec</code> - ' + _js('Fetched date in microseconds') + '</li>';
    text += '<li><code>id</code> - ' + _js('Article id') + '</li>';
    text += '<li><code>categories</code> - ' + _js('List of tags') + ' (<a class="bluelink underlink_hover" target="_blank" href="https://www.inoreader.com/developers/stream-ids">' + _js('Documentation') + '</a>)</li>';
    text += '<li><code>title</code> - ' + _js('Article title') + '</li>';
    text += '<li><code>published</code> - ' + _js('The published date of the article in unix time') + '</li>';
    text += '<li><code>updated</code> - ' + _js('The date of last update of the article in unix time') + '</li>';
    text += '<li><code>canonical[0].href</code> - ' + _js('The link of the article') + '</li>';
    text += '<li><code>summary.direction</code> - ' + _js('Detected direction of the text') + ' (<code>ltr</code>/<code>rtl</code>)</li>';
    text += '<li><code>summary.content</code> - ' + _js('HTML content of the article') + '</li>';
    text += '<li><code>author</code> - ' + _js('Article author') + '</li>';
    text += '<li><code>origin.streamId</code> - ' + _js('ID of the feed (contains the RSS url)') + '</li>';
    text += '<li><code>origin.title</code> - ' + _js('Title of the feed') + '</li>';
    text += '<li><code>origin.htmlUrl</code> - ' + _js('The original web URL of the feed') + '</li>';
    text += '</ul>';
    text += '<p><a class="bluelink underlink_hover" href="javascript:void(0);" onclick="$(\'#webhook_article_example\').toggle();">' + _js('See full example.') + '</a></p>';

    var example = '{\n\
  "rule": {\n\
    "name": "Gaming News",\n\
    "matchesToday": "112",\n\
    "matchesTotal": "11852"\n\
  },\n\
  "items": [\n\
    {\n\
      "crawlTimeMsec": "1553225690484",\n\
      "timestampUsec": "1553225690484482",\n\
      "id": "tag:google.com,2005:reader/item/000000048c7e8793",\n\
      "categories": [\n\
        "user/1001926517/state/com.google/reading-list",\n\
        "user/1001926517/state/com.google/read",\n\
        "user/1001926517/label/Gaming"\n\
      ],\n\
      "title": "Vampire: the Masquerade - Bloodlines Is Getting A Sequel, And It Looks Pretty Good",\n\
      "published": 1553225400,\n\
      "updated": 0,\n\
      "canonical": [\n\
        {\n\
          "href": "https://kotaku.com/vampire-the-masquerade-bloodlines-is-getting-a-sequel-1833479366"\n\
        }\n\
      ],\n\
      "alternate": [\n\
        {\n\
          "href": "https://kotaku.com/vampire-the-masquerade-bloodlines-is-getting-a-sequel-1833479366",\n\
          "type": "text/html"\n\
        }\n\
      ],\n\
      "summary": {\n\
        "direction": "ltr",\n\
        "content": "The 2004 roleplaying game left a lasting impression on roleplaying fans despite some clumsy gameplay...."\n\
      },\n\
      "author": "Heather Alexandra",\n\
      "likingUsers": [],\n\
      "comments": [],\n\
      "commentsNum": -1,\n\
      "annotations": [],\n\
      "origin": {\n\
        "streamId": "feed/http://kotaku.com/rss",\n\
        "title": "Kotaku",\n\
        "htmlUrl": "http://kotaku.com/"\n\
      }\n\
    }\n\
  ]\n\
}';

    text += '<pre id="webhook_article_example" style="display:none;">' + example + '</pre>';
    xalert(text);
    $('#xalert_wrapper').css('width',640);
    inno_dialog_resize();
}

function splice_email_params(guid){
    var email = $('#rule_sent_mail_' + guid).val();
    email = email.replace('|', ',');

    //var prefix = $('#rule_spliced_email_'+ guid).data('templ');
    var prefix = emailrule_templ[guid];
    if(prefix){
        email += '|' + prefix;
    }

    $('#rule_spliced_email_' + guid).val(email);
}

function splice_broadcast_params(guid){
    var privacy = $('#privacy_' + guid).val();
    var note = $('#note_' + guid).val();

    $('#rule_spliced_broadcast_' + guid).val(privacy + '|' + note);
}

function imoprt_gmail_contacts(pr,oa,replace){
    if(oa){
        url = "/api/oauth2callback/gmail_contacts.php";
        window.open(url,url,'status=0, toolbar=0, resizeable=0, menubar=0, location=0, height=600px, width=600px');
        window.focus();
    }else{
        if(replace){
            xconfirm(_js("Are you sure") + '? ' + _js("This will replace your current contacts with those from Gmail."),'do_loading();xajax_imoprt_gmail_contacts(' + replace + ');');
        }else{
            do_loading();
            xajax_imoprt_gmail_contacts(replace);
        }
    }
}

function activate_book_groups_input(id,books,all_books,context){
    $('#book_groups_input_' + id).textext({
            plugins : 'tags prompt autocomplete suggestions arrow',
            tagsItems : books,
            suggestions : all_books,
            prompt : _js("Assign groups.") + ' ' + _js("Press enter after each group.")
        })
        .focus()
        .select()
        .bind('isTagAllowed', function(e, data){
            if(data.tag == '' && forced_blur == false){
                save_current_group(id);
                save_book(id);
            }
        });
}


function user_email_to(tags,all_tags){
    var $input = $('#user_email_to')
        .tagify({
                whitelist : all_tags,
                dropdown : {
                    classname : "article_tags_input_dropdown",
                    enabled   : 0,
                    closeOnSelect: true,
                    highlightFirst: true,
                    maxItems: 1000
                }
            });

    var tagify = $input.data('tagify');
    if(tags){
        var current_tags = [];
        for(var i in tags){
            current_tags.push({id: i, value: tags[i] });
        }

        tagify.addTags(current_tags);
    }
}


function save_current_group(id){
    var result = {};
    $('.text-tag').each(function(){
        var name = $(this).children().eq(0).children().eq(0).html();
        result[name] = name;
    });
    xajax_save_current_group(id,result);
}


function save_book(book_id){
    // timeout to allow tag saving
    contact = {};
    contact['book_id'] = book_id;
    contact['book_email'] = $('#book_email_'+book_id).val();
    contact['book_name'] = $('#book_name_'+book_id).val();
    contact['groups'] = JSON.parse($('#_book_groups_input_' + book_id).children().eq(0).children().eq(0).children().eq(3).val());
    xajax_save_book(contact);
    return true;
}

function save_book_group(id){
    group = {}
    group['group_id'] = id;
    group['group_name'] = $('#group_name_'+id).val();
    xajax_save_book_group(group);
    return true;
}


function deactivate_rule(cell,id){
    do_loading();
    xajax_deactivate_rule(id);
}

function activate_rule(cell,id){
    xajax_activate_rule(id);
    do_loading();
}


function toggle_rule(id,check,context){
    do_loading();
    if(check){
        xajax_activate_rule(id,context);
    }else{
        xajax_deactivate_rule(id,context);
    }
}

function resize_upgrade(){
    return false;
    var hg = $('#reader_pane').height();
    var wg = $('#reader_pane').width();

    hg = hg - 200;

    if(hg > $('#upgrade').height()){
        var t = Math.ceil((hg - $('#upgrade').height())/2);
    }else{
        var t = 0;
    }
    wg = wg - 200;
    if(wg > 950){
        var w = Math.ceil((wg - $('#upgrade').width())/2);
    }else{
        var w = 0;
    }

    if(w < 0){
        w = 0;
    }
}


function rule_init_email_autocomplete(target){

    var settings = {
        source: function(request, response) {
            request.origin = 'book_emails';
            $.ajax({
                url: "/autocomplete.php",
                dataType: "json",
                data: request,
                success: function(data) {
                    response(data);
                }
            });
        },
        select: function(event, ui){
            $('#' + target).val(ui.item.value);
            if(target == 'digest_recipients'){
                digest_add_recipient_row(ui.item.value,0,0,1);
                $('#' + target).val('');
            }
        },
        delay: 100
    };

    inno_autocomplete_init("#" + target,settings);


    return;
}

function save_gadget_params(){
    var form = xajax.getFormValues('gadget_params');
    xajax_user_dashboard('run_gadget',form['das_id'],form['column'],'save_params',form);
    return false;
}

function mark_contacts(type){
    $('.contact_checks').each(function(){
        $(this).prop('checked',false);
        if(type == 1){
            $(this).prop('checked',true);
        }else if(type == 2 && $(this).data('active') == 0){
            $(this).prop('checked',true);
        }else if(type == 3 && $(this).data('issues') == 1){
            $(this).prop('checked',true);
        }
    });
}

function do_bulk_contact_operation(confirmed){
    var type = document.getElementById('bulk_operation_type').value;
    var cmd_descr = $('#bulk_operation_type :selected').text();

    var checked_contacts = [];
    $('.contact_checks').each(function(){
        if($(this).is(':checked')){
            checked_contacts.push($(this).val());
        }
    });

    if(checked_contacts.length == 0){
        xalert(_js("Please select at least one contact"));
        return;
    }

    if(type == 'delete_subscriptions' && confirmed != true){
        xconfirm(_js("Are you sure") + '?','do_bulk_contact_operation(true)');
        return;
    }

    do_loading();
    xajax_do_bulk_contacts_operation(checked_contacts,type);
}

function preferences_dialog_loaded(){
    $('#preferences_footer_bullets').remove();
    var html = '<div id="preferences_footer_bullets" class="graylink preferences_version">';
    html += application_name + ' v' + application_version;
    if(is_beta == 1){
        html += '<a href="javacript:void(0);" onclick="beta_alert();"><span class="something_new something_beta">beta</span></a>';
    }
    if(device_type != 'phone'){
        html += ' &nbsp;&bull;&nbsp; <a class="graylink underlink_hover" href="javascript:void(0);" onclick="dialog(\'changelog_dialog\')">' + _js("Changelog") + '</a>'
        html += ' &nbsp;&bull;&nbsp; <a class="graylink underlink_hover" href="javascript:void(0);" onclick="dialog(\'about_dialog\')">' + _js("About") + '</a>'
        html += ' &nbsp;&bull;&nbsp; <a class="graylink underlink_hover" href="https://www.inoreader.com/blog?utm_source=inoreader&utm_medium=inoreader&utm_campaign=open_blog_from_preferences" target=\"_blank\">' + _js("Blog") + '</a>'
        html += ' &nbsp;&bull;&nbsp; <a class="graylink underlink_hover" href="/developers/" target=\"_blank\">' + _js("API") + '</a>'
        html += ' &nbsp;&bull;&nbsp; <a class="graylink underlink_hover" href="https://status.inoreader.com/" target=\"_blank\">' + _js("Service status") + '</a>'
        if(is_beta == 0){
            html += ' &nbsp;&bull;&nbsp; <a class="graylink underlink_hover" href="javascript:void(0);" onclick=\"go_to_beta_confirm();\">Beta</a>'
        }
        html += ' &nbsp;&bull;&nbsp; <a class="graylink underlink_hover" href="https://ino.to/discord" target=\"_blank\">Discord</a>'
        html += ' &nbsp;&bull;&nbsp; <a class="redlink underlink_hover" href="/logout">' + _js('Sign out') + '</a>'

    }

    html += '</div>';
    $('#preferences_dialog_buttonbar').prepend(html);

}

function filter_stats_subscriptions(sort,asc,limit){
    do_loading();
    xajax_print_stats_subscriptions(sort,asc,limit);
}

function feedly_import_error(){
    stop_loading();
    xalert(_js('Please enter a Feedly developer token!') + ' ' + sprintf(_js('You can get one from %s'),'<a class="bluelink underlink" target="_blank" href="https://developer.feedly.com/v3/developer/#how-do-i-generate-a-developer-access-token">' + _js('here') + '</a>.'));
}

// Catalogs
function catalogs_reorder(){
    var sorted_3d = [];
    var sorted = $('#catalog_sorter').sortable('toArray');
    for(var i in sorted){
        var id = sorted[i].replace(/catalog\_/,'');
        sorted_3d.push({id: id});
    }
    var post = {};
    post.cat_order = true;
    post.sorted = sorted_3d;
    xajax_save_catalog_fields(post);
}

function save_catalog_name(id){
    var post = {};
    post.id = id;
    post.title = $('#catalog_title').val();
    do_loading("Save catalog name ...");
    xajax_save_catalog_fields(post);
}

function save_catalog_sh_feeds(id){
    var post = {};
    post.id = id;
    if($('#sh_feeds').is(':checked')){
        post.sh_feeds = 1;
    }else{
        post.sh_feeds = 0;
    }
    do_loading("Save catalog show-hidden-feeds ...");
    xajax_save_catalog_fields(post);
}

function save_new_catalog(){
    var post = {};
    post.title = $('#catalog_title').val();
    post.allow_to_country = $('#allow_to_country').val();
    do_loading("Save catalog for first time ...");
    xajax_save_catalog_fields(post);
}

function delete_catalog(id){
    if(typeof id == 'undefined' || !id){
        return;
    }
    do_loading("Delete whole catalog ...");
    xajax_delete_catalog(id);
}

function selected_country(sel, id){
    var post = {};
    post.id = id;
    var n = $(sel).attr('name');
    post[n]= $(sel).val();
    do_loading("Save catalog "+n+" ...");
    xajax_save_catalog_fields(post);
}

function selected_country2(sel, id){
    var post = {};
    post.id = id;
    var n = $(sel).attr('name');
    post[n]= $(sel).val();
    do_loading("Save catalog "+n+" ...");
    xajax_save_subcatalog_fields(post);
}

function edit_catalog(id){
    if(typeof id == 'undefined'){
        return;
    }
    do_loading("Loading catalog ...");
    xajax_edit_catalog(id);
}

function import_catalog_opml(cat_id, opml_id){
    if(typeof cat_id == 'undefined'){
        return;
    }
    var post = {};
    post.catalog_id = cat_id;
    post.opml_id = opml_id;
    post.url = $('#catalog_import_opml_url').val();

    $('.button_catalog_opml_import').attr('disabled',true);
    do_loading(_js("Fetching OPML.")+' '+_js("This might take a while..."));
    xajax_catalog_opml_actions(post, 'import');
}

function reload_catalog_opml(id){
    if(typeof id == 'undefined'){
        return;
    }
    do_loading(_js("Fetching OPML.")+' '+_js("This might take a while..."));
    var post = {};
    post.catalog_id = parseInt($('#catalog_content').attr('data-catalogid'));
    post.opml_id = id;
    xajax_catalog_opml_actions(post, 'reload');
}

function delete_catalog_opml(id){
    if(typeof id == 'undefined'){
        return;
    }
    do_loading("Deleting OPML. This might take a while...");
    var post = {};
    post.catalog_id = parseInt($('#catalog_content').attr('data-catalogid'));
    post.opml_id = id;
    xajax_catalog_opml_actions(post, 'delete');
}

function save_catalog_feed(){
    var post = {};
    post.catalog_id = parseInt($('#catalog_content').attr('data-catalogid'));
    post.feed_url = $('#catalog_feeds_search').val();

    if(post.feed_url == '' || post.feed_url.length == 0){
        xalert("Please enter feed url",0,'$(\'#catalog_feeds_search\').focus().select();');
        return false;
    }
    do_loading(_js('Loading') + '...');
    xajax_save_catalog_feed(post);
}

function toggle_and_change(manager, el){
    var span_exist = false;
    if($(manager).find('span')){
        var span_exist = true;
    }
    if($(el).css('display') == 'none') {
        if(span_exist){
            $('span.icon-arrow_right_small').removeClass('icon-arrow_right_small').addClass('icon-arrow_down_small')
        }
    }else{
        if(span_exist){
            $('span.icon-arrow_down_small').removeClass('icon-arrow_down_small').addClass('icon-arrow_right_small')
        }
    }
    $(el).toggle();
}

function update_catalog_feed_details(feed_id, opml_id, what) {
    var catalog_id = parseInt($('#catalog_content').attr('data-catalogid'));
    var par = {};
    if(what == 'rank'){
        var el = $('#rank_cat_feed_'+opml_id+'_'+feed_id);
        var val = el.val();
        if(!val){
            val = 0;
        }
        par.oldval = el.data('old');
        if(par.oldval == val){
            el.val(val);
            el.blur();
            return;
        }
    }else if(what == 'hide'){
        if($('#hide_cat_feed_'+opml_id+'_'+feed_id).is(':checked')){
            var val = 1;
            $('#hide_cat_feed_'+opml_id+'_'+feed_id).prop("checked",true);
            $('#cat_feed_'+opml_id+'_'+feed_id).css("opacity", ".5");
        }else{
            var val = 0;
            $('#hide_cat_feed_'+opml_id+'_'+feed_id).prop('checked',false);
            $('#cat_feed_'+opml_id+'_'+feed_id).css('opacity',"");
        }
        if($('#sh_feeds').is(':checked')){
            par.sh_feeds = 1;
        }else{
            par.sh_feeds = 0;
        }
    }else if(what == 'onboarding'){
        if($('#onboard_cat_feed_'+opml_id+'_'+feed_id).is(':checked')){
            var val = 1;
        }else{
            var val = 0;
        }
    }else{
        return;
    }

    do_loading(_js('Loading') + '...');
    xajax_update_catalog_feed_details(catalog_id, opml_id, feed_id, val, what, par);
}

function color_feeds_opml(opml_id){
    $('#catalog_feeds_sorter_div').find(".catalog_feed_div").removeAttr('style');
    $('.catalog_opml_tbl').find(".catalog_opml_list").css("background", "");

    $('#catalog_feeds_sorter_div').find("[data-opmlid='" + opml_id + "']").attr("style", "background:#FBF8F1;");
    $('.catalog_opml_tbl').find("[data-opmlid='" + opml_id + "']").css("background", "#FBF8F1;");
    setTimeout(function(){
        $('#catalog_feeds_sorter_div').find("[data-opmlid='" + opml_id + "']").removeAttr('style');
        $('.catalog_opml_tbl').find("[data-opmlid='" + opml_id + "']").css("background", "");
    }, 10000);
}

function answer_nps(){
    var answer = $('input[name="nps_answers"]:checked').val();
    if(!answer){
        return;
    }
    xajax_answer_nps(answer);

    $('#feedback_dialog_nps_div').html('<div class="survey_thankyou"><center>Thank you!</center></div>');
    setTimeout(function(){
        $('#feedback_dialog_nps_div').fadeOut('fast');
    },2000);
}

function feed_43_init(url){
    var feed43_consent = readCookie('feed43_consent');
    if(!feed43_consent){
        xconfirm(_js("Attention, this action will open an external service.")+' '+_js("Do you want to continue?"),'feed_43_execute("' + url + '")');
        $('#xconfirm').next().prepend('<div id="feed_43_dont_ask_div"><input type="checkbox" id="feed_43_dont_ask" value="1"> <label for="feed_43_dont_ask">'+_js("Don't ask again")+'</label></div>');
        return;
    }
    feed_43_execute(url);
}

function feed_43_execute(url){
    do_loading();
    if($('#feed_43_dont_ask').is(':checked')){
        createCookie('feed43_consent',1,5000);
    }
    document.location.href = 'https://feed43.com/new-feed.html?from=inoreader&url=' + encodeURIComponent(url);
}

function redirect_to_https(){
    if(location.protocol != 'https:' && !is_dev){
        window.location = 'https://' + window.location.hostname + window.location.pathname + window.location.hash;
    }
}


function recaptcha_callback_dummy(){
    // grecaptcha.render('register_captcha', {sitekey: grecaptcha_site_key});
}

function onboarding_mini_switch_face(){
    if($('#onboard_mini_body_1').is(':visible')){
        $('#onboard_mini_body_1').hide();
        $('#onboard_mini_title1').hide();
        $('#onboard_mini_subtitle1').hide();
        $('#onboard_mini_body_2').show();
        $('#onboard_mini_title2').show();
        $('#onboard_mini_subtitle2').show();
    }else{
        $('#onboard_mini_body_2').hide();
        $('#onboard_mini_subtitle2').hide();
        $('#onboard_mini_title2').hide();
        $('#onboard_mini_body_1').show();
        $('#onboard_mini_subtitle1').show();
        $('#onboard_mini_title1').show();
    }
}

function mail2tag_alert(){
    var text = '<div class="mail2tag_alert_header">' + _js("Did you know?") + '</div>';
    text += '<p>' + _js("Each tag has a unique email address.") + ' ' + sprintf(_js("You can use it to subscribe for newsletters or forward part of your email communication to %s."),application_name) + '</p>';

    if(!user_access[access_premium]){
        text += '<p>' + _js("This feature is only available to Pro users.") + ' <a class="bluelink ajaxed" href="/upgrade/feature/mail2tag" onclick="$(\"#xalert\").dialog(\"close\");">' + _js("Upgrade now") + '.</a></p>';
    }
    xalert(text);
    $('#xalert_wrapper').css('width',300);

    return false;
}

function toggle_business_registration_form(){
    $('#business_registration_form').toggle();
}

function close_business_registration_form(){
    $('#business_registration_form').hide();
    return false;
}

function save_business_registration_form(context){
    var post = {};
    post['context'] = context;
    post['vat'] = $('#brf_vat').val();
    post['company_name'] = $('#brf_company_name').val();
    post['company_address'] = $('#brf_company_address').val();
    post['country'] = $('#brf_country').val();
    post['phone_number'] = $('#brf_phone_number').val();
    post['contact_person'] = $('#brf_contact_person').val();
    post['upgrade_access'] = $('#upgrade_access').val();

    if(!post['company_name']){
        xalert(_js('Please enter company name!'),1,$('#brf_company_name').focus().click());
        return false;
    }

    // if(!post['vat']){
    //     xalert(_js('Please enter tax registration number!'),1,$('#brf_vat').focus().click());
    //     return false;
    // }

    if(!post['company_address']){
        xalert(_js('Please enter company address!'),1,$('#brf_company_address').focus().click());
        return false;
    }

    if(context == 'business_info_dialog'){
        do_loading(_js('Validating your business information.') + ' ' + _js('Please wait...'));
        $('#business_registration_form').find('input').each(function(){
            $(this).prop('disabled',true);
        });
        disable_dialog_button('business_info_dialog');
    }else{
        $('#upgrade_dialog').html('<div class="payment_processing">' + _js('Validating your business information.') + ' ' + _js('Please wait...') + '</div><div class="loader loader_high"></div>');
    }

    xajax_save_business_registration(post);
    return false;
}

function remove_business_registration(context){
    xconfirm(_js('Are you sure?'),'remove_business_registration_confirm(\'' + context + '\');')
}

function remove_business_registration_confirm(context){
    var post = {};
    post['upgrade_access'] = $('#upgrade_access').val();
    post['context'] = context;
    do_loading();
    xajax_remove_business_registration(post);
}


function overusage_alert(){
    var text = '<p>Dear ' + user_realname + ',</p>';
    text += 'In February 2019 we have <a href="https://www.inoreader.com/blog/2019/02/official-announcement-inoreader-new-plans-and-pricing-updates-in-february-2019.html" target="_blank" class="bluelink underlink"> announced</a> some changes to our plans.<br/>';
    text += 'There was a protection period for everyone who had a pre-paid period at that time and we kept our old terms until this period expired.<br/>';
    text += 'Since this period has passed for your account, your features above the new limits have been disabled.<br/>';
    text += 'You can see which features are affected from <a class="bluelink underlink" href="javascript:void(0);" onclick="dialog(\'preferences_dialog\',{set_category:\'preferences_billing\',ajax:true});">Billing and usage</a>.<br/>';
    text += 'If you need more than our current Pro plan limits, you can always <a class="bluelink underlink" href="javascript:void(0);" onclick="dialog(\'feedback_dialog\',{from_team_request:1})">request a quote for a custom plan</a>.<br/>';

    xalert(text);
    $('#xalert_wrapper').css('width',450);
    inno_dialog_resize();
}

function special_offer(filler,end_date,viewed_on){
    var html = '';
    html += '<a class="ajaxed" href="/upgrade/feature/from_special_offer" onclick="xajax_special_offer_update(\'offer_clicked_on\');"><img src="' + filler + '" style="width:445px;height:330px;"></a>';
    html += '<div id="special_offer_end_date">Offer is available until ' + end_date + '.</div>';
    html += '<div id="special_offer_not_interested"><a class="whitelink underlink_hover" href="javascript:void(0);" onclick="inno_dialog_close(\'special_offer_dialog\');xajax_special_offer_update(\'offer_popup_not_interested\');">Maybe later.</a></div>';

    dialog('special_offer_dialog', {content: html});

    if(!viewed_on){
        xajax_special_offer_update('offer_viewed_on');
    }
}

function special_offer_singles_day_2021(){
    var html = '';
    html += '<a href=\"javascript:void(0);\" onclick="dialog(\'upgrade_dialog\', {access: 8, promo_code: \'SDY25OFF\', forced_entry: \'singles_day_2021_popup\'})"><img src="/images/promo-singles-' + get_theme_name() + '.png" style="width:445px;height:330px;"></a>';
    html += '<div id="special_offer_not_interested"><a class="whitelink underlink_hover" href="javascript:void(0);" onclick="inno_dialog_close(\'special_offer_dialog\');createCookie(\'consents_singles_day_2021\',1,1)">迟点决定</a></div>';
    dialog('special_offer_dialog', {content: html});
}

function special_offer_black_friday_2021(){
  var html = '';
      html += '<div id="bf_offer_modal">' +
                '<a href="javascript:void(0);" onclick="dialog(\'upgrade_dialog\', {access: 8, forced_entry: \'black_friday_2021_free_popup\'});log_ga_event(\'Promo popup\', \'Black Friday Free Users Clicked\');">' +
                  '<div class="flex">' +
                    '<div class="bf_offer_text_wrapper">' +
                      '<p class="bf_offer_subheading graylink">It\'s Black Friday! Time to go PRO!</p>' +
                      '<h2>Buy Inoreader PRO for 12 months and take another 6 for free!</h2>' +
                      '<div class="bf_offer_slogan graylink">Hurry up! Offer ends in: <p id="countdown_dialog"></p></div>'+
                      '<button class="bluebutton greenbutton">Grab the offer</button>' +
                      '<div class="bf_offer_disclaimer graylink">See what is included in the PRO plan <a onclick="log_ga_event(\'Promo popup\', \'Black Friday Free Users Opened Pricing\');" href="/upgrade/feature/black_friday_2021_free_popup_plans" class="underlink ajaxed">here</a></div>' +
                    '</div>' +
                    '<img src="../../images/black-friday-assets/bf_offer_img_21.png"/>' +
                  '</div>' +
                  '<span class="bf_offer_close_btn_bgr"></span>' +
                '</a>' +
              '</div>';
      html += '<div id="special_offer_not_interested">' +
                '<a class="whitelink underlink_hover" href="javascript:void(0);" onclick="inno_dialog_close(\'promo_dialog\');log_ga_event(\'Promo popup\', \'Black Friday Free Users Skipped\');">Skip offer</a>' +
              '</div>';
  dialog('promo_dialog', {content: html});
  activate_promo_countdown();
}

function verify_account_popup(){
    var html = '';
    html += '<div id="verify_account" style="text-align: center; padding: 24px;">' +
                '<i class="icon-service_email_article bluebutton" style="font-size: 44px;border-radius: 50%;padding: 10px;display: flex;align-items: center;justify-content: center;height: 48px;width: 48px;margin: 0 auto;pointer-events:none;"></i>' +
                '<h1 style="margin-top: 44px;">Verify your account</h1>'+
                '<p>Confirm your email address to get full access to Inoreader’s features.</p>'+
                '<button href="javascript:(0);" class="bluebutton mt-4" onclick="dialog(\'preferences_dialog\', {set_category: \'preferences_profile\', extra_action: \'from_verify_dialog\'})">Confirm email</button>'+
            '</div>';
    dialog('verify_email', {content: html});
}

function activate_promo_sidebar_banner(data){
    var dismissed = readCookie('promo_sidebar_dismissed');
    // dismissed = true; //TODO: remove / Nikola BF2023
    if(!dismissed){
        var html = '<a href="javascript:void(0);" onclick=\"dialog(\'upgrade_dialog\', {access: 8, promo_code: \'' + data.code + '\'});\">' +
            '<div class="tree_announce_inner '+ data.extra_class +'" style="background-color:' + data.background_color + '; background-image: url(' + data.background_image + ');">' +
            '<div>' + data.value_proposition + '</div>' +
            '</div>'+
            '</a>' +
            '<span onclick="dismiss_announce(\'promo_sidebar\')" class="icon16 icon_close_announce icon-cross '+ data.extra_class +'" title="'+_js("Dismiss")+'"></span>';
        $('#splitter').append('<div id="tree_announce" class="tree_announce tree_announce_covid tree_announce_bf">' + html + '</div>');
        log_ga_event('Promo popup', 'Promo sidebar banner initialized');
    }
}

function init_zapier_widget(){
    var url = 'https://zapier.com/apps/embed/widget.js?services=inoreader';
    if(theme == 4){
        url += '&theme=dark';
    }

    var script = '<script src="' + url + '"></scr' + 'ipt>';

    postscribe('#zapier_widget',script);
}

function show_redesign_elements(){
    var html_menu = '<div class="redesign_menu_wrapper">';
    html_menu += '<div class="redesign_menu_title">Get a sneak peek at Inoreader’s new design 👀</div>';
    html_menu += '<div class="redesign_menu_body">We’ve rolled out a fresh look and invite you to be among the first to try it!</div>';
    html_menu += '<div class="redesign_menu_link"><a href="javascript:void(0);" onclick="redesign_dialog()" class="boldlink underlink">Try it out now</a></div>';
    html_menu += '</div>';
    $('#sb_rp_settings_menu').find('.inno_toolbar_button_menu_line').eq(0).after(html_menu);


    var optin_dismissed_dialog = readCookie('optin_dismissed_dialog');
    if(!optin_dismissed_dialog){
        redesign_dialog();
    }else{
        beta_optin_sidebar_banner();
    }
}

function redesign_dialog(){
    img_suffix = 'aqua';
    greenbutton_class = '';
    if(theme == 1){
        theme_name = 'aqua';
    }else if(theme == 2){
        theme_name = 'light';
    }else if(theme == 3){
        theme_name = 'sepia';
        greenbutton_class = 'greenbutton';
    }else if(theme == 4){
        theme_name = 'dark';
        img_suffix = 'dark';
    }
    // var html = '<a style="display:block;" href="javascript:void(0);" onclick="redesign_open()"><img src="/images/new_beta/new-beta-' + theme_name + '.png" style="display:block;width:800px;height:422px;"></div>';
    var html = '<div class="optin_dialog_wrapper" style="background-image:url(/images/optin-modal-bg-' + img_suffix + '-x-2@2x.png)">';
    html += '<div class="optin_dialog_title">Get a sneak peek at Inoreader’s new design! 👀</div>';
    html += '<div class="optin_dialog_body"><p>Hey ' + user_realname + ', еxciting news!</p><p>We’ve rolled out a fresh new look for Inoreader and invite you to be among the first to try it out.</p><p>Don’t worry—you can opt out anytime before July 1st, 2024. Afterward, the new design will apply globally.</p><p>Ready to dive in?</p></div>';
    html += '<div class="optin_dialog_button"><button class="redesign_button bluebutton ' + greenbutton_class + ' tallbutton" onclick="redesign_open();">Try it out now</button></div>';
    html += '</div>';

    dialog('redesign_dialog', {content: html});
}

function redesign_not_interested(){
    inno_dialog_close('redesign_dialog');
}

function redesign_open(){
    inno_dialog_close('redesign_dialog');
    do_loading();
    xajax_update_beta_invite('clicked');
}

function add_score_queue(article_id,action){
    var md5 = $.md5(article_id + '_' + action);
    if(score_queue.length > 0){
        for(var i in score_queue){
            if(score_queue[i].article_id == article_id && score_queue[i].action == action){
                return;
            }
        }
    }

    var feed_id = $('#article_' + article_id).data('fid');
    score_queue.push({article_id: article_id, feed_id: feed_id, action: action});
}

function flush_score_queue(){
    if(score_queue.length > 0){
        xajax_flush_score_queue_async(score_queue);
        score_queue = [];
    }
}

function suggest_youtube_subscriptions_sync(from_integration){
    var content = '';
    content += '<div class="yt_invite_left">';
    content += '<div class="yt_invite_left_top">';
    if(from_integration){
        content += sprintf(_js('Keep your YouTube in sync with %s'),application_name);
    }else{
        content += _js('Hey, we noticed you just followed a YouTube feed.');
    }
    content += '</div>';
    content += '<div class="yt_invite_left_bottom">';
    content += sprintf(_js('%s can automatically synchronize your YouTube subscriptions into a chosen folder.'),application_name);
    content += '</div>';
    content += '</div>';
    content += '<img class="yt_invite_pic" src="/images/youtube_sync_invite.png">';
    dialog('youtube_invite_dialog',{content: content, show_upgrade: from_integration});

    if(from_integration){
        $('#youtube_invite_dialog_buttonbar').find('.inno_dialog_buttonbar_button').eq(0).addClass('greenbutton');
        $('#youtube_invite_dialog_buttonbar').prepend('<div class="youtube_invite_dialog_pro_hint">' + _js('This feature is only available to Pro users.') + '</div>');
    }
}

function resizeColumn (e) {
  var startX = e.clientX - ltr_koef * 17;

  var el = document.getElementById('reader_pane');
  var startWidth = $('#reader_pane').width();
  // var startWidth = parseInt(document.defaultView.getComputedStyle(el).width, 10);
  document.documentElement.addEventListener('mousemove', doDrag, false);
  document.documentElement.addEventListener('mouseup', stopDrag, false);


  function doDrag (e) {
    if (e.buttons == 0)
      stopDrag(e);

    var delta = (e.clientX - startX);
    columnview_width = Math.max((startWidth + ltr_koef * delta), 400);
    if (columnview_width > window.innerWidth / 2)
      columnview_width = window.innerWidth / 2;
    createCookie('column_size', columnview_width, 999);
    resize();
    e.preventDefault();
  }

  function stopDrag (e) {
    e.preventDefault();
    resize();
    document.documentElement.removeEventListener('mousemove', doDrag, false);
    document.documentElement.removeEventListener('mouseup', stopDrag, false);
  }
}

function edit_digest(id,context,create_object){
    show_dialog('digest_dialog',{id: id, context: context, create_object: create_object});
}

function digest_preview_email(){
    var post = {};
    post.name = $('#digest_name').val();
    post.description = $('#digest_description').val();

    post.sections = [];
    $('.digest_section').each(function(){
        var section = {};
        var rnd = $(this).data('rnd');
        section.id = $(this).data('id');
        section.name = $('#digest_section_name_' + rnd).val();
        section.filter_type = $('#digest_filter_type_' + rnd).val();
        section.filter_id = $('#digest_filter_id_' + rnd).val();
        post.sections.push(section);
    });

    dialog('digest_preview_dialog', post);
}

function digest_check_schedule(){
    var schedule_type = $('input[name="digest_schedule_type"]:checked').val();
    if(schedule_type == 4){
        $('#digest_schedule_custom_row').css('display','flex');
    }else{
        $('#digest_schedule_custom_row').hide();
    }
}

function check_digest_day_checkboxes(checkbox){
    if(!$('.digest_day_checkbox').filter(':checked')[0] && !checkbox.checked){
        checkbox.checked = true;
    }
}

function digest_add_recipient(){
    var field = $('#digest_recipients').val();
    if(!field){
        return false;
    }

    var recipients = [];
    field = field.replace(/;/,',');
    if(field.indexOf(',') != -1){
        recipients = field.split(/,/);
    }else{
        recipients.push(field);
    }

    for(var i in recipients){
        var recipient = $.trim(recipients[i]);
        if(!recipient){
            continue;
        }
        // if(!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(recipient)){
        //     xalert(_js('Please provide valid email') + '.',1,'$("#digest_recipients").focus().click()');
        //     return false;
        // }
        var status = 0;
        if(recipient == user_email && user_confirmed == 1){
            status = 1;
        }

        digest_add_recipient_row(recipient,status,0,1);
    }

    $('#digest_recipients').val('');
}

function digest_check_dialog_footer(){
    var show_invite_footer = false;
    $('.digest_recipient').each(function(){
        if($(this).data('new') == "1" && $(this).data('status') == "0"){
            show_invite_footer = true;
            return false;
        }
    });

    if(show_invite_footer){
        $('#digest_email_invitations_footer').show();
    }else{
        $('#digest_email_invitations_footer').hide();
    }
}

function digest_add_recipient_row(recipient,status,digest_id,is_new){
    var found_current = false;
    $('.digest_recipient').each(function(){
        if($(this).data('recipient') == recipient){
            found_current = true;
            return false;
        }
    });

    if(found_current){
        return false;
    }

    var status_text = _js('Pending') + '...';
    var recipient_class = 'digest_recipient_pending';
    if(status == 1){
        status_text = _js('Subscribed');
        recipient_class = 'digest_recipient_subscribed';
    }else if(status == 2){
        status_text = _js('Unsubscribed');
        recipient_class = 'digest_recipient_unsubscribed';
    }

    var html = '<div class="digest_recipient ' + recipient_class + '" data-recipient="' + recipient + '" data-new="' + parseInt(is_new) + '" data-status="' + parseInt(status) + '">';
    html += '<div class="flex">';
    html += '<div class="digest_recipient_img"><img src="/cdn/avatar/?n=' + recipient + '"></div>';
    html += '<div class="digest_recipient_content flex_grow">';
    html += '<div class="digest_recipient_email">' + recipient + '</div>';
    html += '<div class="digest_recipient_status" id="digest_recipient_status_' + $.md5(recipient) + '">' + status_text + '</div>';
    html += '</div>';
    html += '<div class="digest_recipient_remove_button"><a title="' + _js('Remove subscriber') + '" href="javascript:void(0);"><span class="icon16 icon_gray icon-delete-subscription" onclick="digest_remove_recipient_row(\'' + recipient + '\')"></span></a></div>';
    html += '</div>';
    $('#digest_recipients_list').prepend(html);

    if(digest_id && status != 1){
        $('#digest_recipient_status_' + $.md5(recipient)).on('mouseenter',function(){
            $(this).html('<a class="boldlink bluelink underlink" href="javascript:void(0)" onclick="digest_resend_invitation(' + digest_id + ',\'' + recipient + '\')">' + _js('Resend invitation') + '</a>');
        }).on('mouseleave',function(){
            $(this).html(status_text);
        });
    }

    digest_check_dialog_footer();
}

function digest_resend_invitation(digest_id, recipient){
    digest_remove_recipient_row(recipient);
    digest_add_recipient_row(recipient,0);
    do_loading();
    xajax_digest_resend_invitation(digest_id, recipient);
}

function digest_remove_recipient_row(recipient){
    $('.digest_recipient').each(function(){
        if($(this).data('recipient') == recipient){
            $(this).remove();
        }
    });

    digest_check_dialog_footer();
}

function digest_next_handler(id, context){
    var current_step = $('#digest_current_step').val();
    $('.input_error').removeClass('input_error');

    if(current_step == 0){
        if($.trim($('#digest_name').val()) == ''){
            $('#digest_name').addClass('input_error');
            return;
        }
    }

    if(current_step == 1){
        var has_errors = 0;
        $('.digest_filter_type').each(function(){
            if(!$(this).val()){
                $(this).addClass('input_error');
                has_errors++;
            }
        });

        if(has_errors){
            return;
        }
    }else if(current_step == 2){
        digest_add_recipient();
        if(!$('.digest_recipient')[0]){
            $('#digest_recipients').addClass('input_error');
            return;
        }
    }

    if(current_step == 3){
        save_digest(id, context);
    }else{
        digest_next_step();
    }
}

function digest_next_step(){
    var current_step = $('#digest_current_step').val();
    var next_step = parseInt(current_step) + 1;
    if(next_step > 3){
        next_step = 3;
    }
    $('#digest_current_step').val(next_step);
    digest_display_current_step();

}

function digest_prev_step(){
    var current_step = $('#digest_current_step').val();
    var next_step = parseInt(current_step) - 1;
    if(next_step < 0){
        next_step = 0;
    }
    $('#digest_current_step').val(next_step);
    digest_display_current_step();
}

function digest_display_current_step(){
    var current_step = $('#digest_current_step').val();
    $('.digest_step').hide();
    $('#digest_step_' + current_step).show();

    $('.digest_breadcrumb').removeClass('digest_breadcrumb_current');
    $('.digest_breadcrumb').removeClass('digest_breadcrumb_passed');
    var passed_current_step = false;
    for(step=0;step<=3;step++){
        if(step == current_step){
            passed_current_step = true;
            $('#digest_breadcrumbs_step_' + step).addClass('digest_breadcrumb_current');
        }else{
            if(!passed_current_step){
                $('#digest_breadcrumbs_step_' + step).addClass('digest_breadcrumb_passed');
            }
        }
    }

    if(current_step > 0){
        $('#digest_prev_button').show();
    }else{
        $('#digest_prev_button').hide();
    }

    if(current_step == 3){
        $('#digest_dialog_buttonbar_container').find('.inno_dialog_buttonbar_button').html(_js('Save'));

        $('#digest_preview_description').html('').hide();
        $('#digest_preview_invites').html('').hide();
        $('#digest_preview_avatars').html('').hide();

        $('#digest_preview_name').html($('#digest_name').val());

        if($('#digest_description').val()){
            $('#digest_preview_description').html($('#digest_description').val()).show();
        }

        var num_invites = 0;
        $('.digest_recipient_pending').each(function(){
            if($(this).data('new') == '1'){
                num_invites++;
                var recipient = $(this).data('recipient');
                $('#digest_preview_avatars').append('<div class="team_dashboard_team_member" title="' + recipient + '"><img src="/cdn/avatar/?n=' + recipient + '"></div>');
            }
        });

        if(num_invites > 0){
            $('#digest_preview_invites').show().html(__js("%s invite will be send", "%s invites will be sent", num_invites));
            $('#digest_preview_avatars').show();
        }

        $('#digest_preview_schedule').html(_js('Loading...'));

        var post = {};
        post.schedule_type = $('input[name="digest_schedule_type"]:checked').val();
        post.hour = $('#digest_hour').val();
        post.start_date = $('#digest_start_date').val();
        post.last_run_date = $('#last_run_date').val();
        post.days = [];
        $('.digest_day_checkbox:checked').each(function(){
            post.days.push($(this).val());
        });

        xajax_load_digest_preview_schedule(post);
    }else{
        $('#digest_dialog_buttonbar_container').find('.inno_dialog_buttonbar_button').html(_js('Next'));
    }
}

function digest_remove_section(rnd){
    $('#digest_section_' + rnd).remove();
    var section_num = 1;
    $('.digest_section').each(function(){
        $(this).data('num', section_num);
        $(this).find('.digest_section_number').eq(0).html(sprintf(_js("Section %s"),section_num));
        section_num++;
    });
}

function digest_add_empty_section(){
    var section = {id: 0, title: '', filter_type: 0, filter_id: 0, num: $('.digest_section').length + 1, rnd: uniqid()};
    digest_add_section(section);
}

function digest_add_section(section){
    if(!section.rnd){
        return;
    }

    if(!section.name){
        section.name = '';
    }

    var type_sel = [];
    type_sel[section.filter_type] = 'selected';
    var html = '<div class="digest_section" id="digest_section_' + section.rnd + '" data-id="' + section.id + '" data-rnd="' + section.rnd + '" data-num="' + section.num + '"> \
        <div class="dialog_input_bigcaption_v2 graylink digest_section_number"> \
            ' + sprintf(_js("Section %s"),section.num) + ' \
        </div> \
        <div class="dialog_input_caption_v2"> \
            <label for="digest_section_name_' + section.rnd + '">' + _js("Section name:") + '</label> <span class="graylink" style="font-weight: normal;">' + _js("Optional") + '</span> \
        </div> \
        <div class="dialog_input_v2" style="margin-bottom:12px;"> \
            <input type="text" id="digest_section_name_' + section.rnd + '" value="' + section.name + '"> \
        </div> \
        <div class=\"flex digest_flex\"> \
            <div class="digest_flex_50"> \
                <div class="dialog_input_v2"> \
                     <select id="digest_filter_type_' + section.rnd + '" class="digest_filter_type digest_select" onchange="xajax_fill_digest_filter_ids(this.value,' + section.filter_id + ', \'' + section.rnd + '\')"> \
                         <option ' + type_sel[0] + ' value="0" disabled>' + _js("Select source...") + '</option> \
                         <option ' + type_sel[1] + ' value="1">' + _js("Tag") + '</option> \
                         <option ' + type_sel[2] + ' value="2">' + _js("Team channel") + '</option> \
                         <option ' + type_sel[3] + ' value="3">' + _js("Folder") + '</option> \
                         <option ' + type_sel[9] + ' value="9">' + _js("Monitoring feed") + '</option> \
                         <option ' + type_sel[5] + ' value="5">' + _js("Read later") + '</option> \
                         <option ' + type_sel[6] + ' value="6">' + _js("Liked articles") + '</option> \
                         <option ' + type_sel[7] + ' value="7">' + _js("My channel") + '</option> \
                         <option ' + type_sel[8] + ' value="8">' + _js("Saved web pages") + '</option> \
                     </select> \
                </div> \
            </div> \
            <div class="digest_flex_50"> \
                <div class="dialog_input_v2" id="digest_filter_id_div_' + section.rnd + '"> \
                </div> \
            </div> \
        </div>';

    if(section.num > 1){
        html += '<div class="digest_delete_section_button"> \
            <a href="javascript:void(0);" onclick="digest_remove_section(\'' + section.rnd + '\')" title="' + _js('Remove section') + '"><span class="icon16 icon_gray icon-delete-subscription"></a> \
        </div>';
    }

    html += '</div>';

    $('#digest_sections').append(html);
    xajax_fill_digest_filter_ids(section.filter_type, section.filter_id, section.rnd);
}

function save_digest(id,context){

    var post = {};
    post.id = id;
    post.active = 1;
    post.name = $('#digest_name').val();
    post.description = $('#digest_description').val();
    post.organization_id = $('#digest_organization_id').val();
    post.start_date = $('#digest_start_date').val();
    post.schedule_type = $('input[name="digest_schedule_type"]:checked').val();
    post.hour = $('#digest_hour').val();
    post.days = [];
    $('.digest_day_checkbox').each(function(){
        if($(this).is(':checked')){
            post.days.push($(this).val());
        }
    });

    post.sections = [];
    $('.digest_section').each(function(){
        var section = {};
        var rnd = $(this).data('rnd');
        section.id = $(this).data('id');
        section.name = $('#digest_section_name_' + rnd).val();
        section.filter_type = $('#digest_filter_type_' + rnd).val();
        section.filter_id = $('#digest_filter_id_' + rnd).val();
        post.sections.push(section);
    });

    post.recipients = [];
    $('.digest_recipient').each(function(){
        post.recipients.push($(this).data('recipient'));
    });

    if(!post.name){
        xalert(_js("Please enter a name for your digest."),1,'$("#digest_name").focus().click()');
        return;
    }

    if(post.recipients.length == 0){
        xalert(_js("Please add at least one recipient."),1,'$("#digest_recipients").focus().click()');
        return;
    }

    if(post.sections.length == 0){
        xalert("Please add at least one source.");
        return;
    }

    do_loading(_js("Saving")+'...');
    disable_dialog_button('digest_dialog',0);
    xajax_save_digest(post,context);
}

function delete_digest(id,context){
    xconfirm(_js("Are you sure?"),';delete_digest_execute(' + id + ',"' + context + '");');
}

function delete_digest_execute(id,context){
    do_loading();
    xajax_delete_digest(id,context);
}

function expand_preferences_hidden_sections(){
    $('#preferences_hidden_sections_more').hide();
    $('#preferences_hidden_sections').show();
}

var feeds_searcher_timer = null;
var feeds_searcher_previous_value = '';
var feeds_searcher_previous_tab = null;
function searcher_term_handler(el,params,event){
    var value = $.trim(el.value);
    if(params.tab == 'feeds' && value == '#'){
        return;
    }

    if(params.tab == 'feeds' && event && event.key == 'Enter'){
        $('#search_content_results_wrapper').find('.search_content_topic_soap').each(function(){
            if($(this).text() == '#' + value.toLowerCase()){
                setTimeout(function(){
                    set_searcher_topic(value.toLowerCase());
                },1);
                return;
            }
        });
    }

    discovery_params.term = value;

    if(params.tab != 'feeds' && event && event.key != 'Enter'){
        return;
    }

    if(feeds_searcher_previous_tab == params.tab && value == feeds_searcher_previous_value){
        if(!value){
            build_searcher_empty_state(params.tab);
        }
        return;
    }

    feeds_searcher_previous_value = value;
    feeds_searcher_previous_tab = params.tab;

    if(feeds_searcher_timer){
        clear_racing_xajax_requests();
        clearTimeout(feeds_searcher_timer);
    }

    set_loc(value ? true : false);

    var timer_value = (event && event.key) ? 100 : 0;
    feeds_searcher_timer = setTimeout(function(value){
        if(!value){
            build_searcher_empty_state(params.tab);
        }else{
            if(!document.getElementById('searcher_input')){
                return;
            }
            params.term = value;
            params.offset = 0;
            params.search_language = feed_params.search_language;

            data = document.getElementById('searcher_input').dataset;
            if(data.search_lang){
                params.search_lang = data.search_lang;
            }

            if(data.search_url){
                params.search_url = data.search_url;
            }

            build_searcher_content(params);
        }
    },timer_value,value);
}

function fill_search_suggestion(el,type){
    var suggestion = $(el).text();
    $('#searcher_input').val(suggestion).focus().click();
    discovery_params.term = suggestion;
    build_searcher_content({tab: type, term: suggestion});
}

function set_search_no_results(tab,title,sub_title,icon,bullets){
    var html = get_search_empty_html(tab,title,sub_title,icon,bullets);
    $('#search_content').html(html);
}

function is_service_connected(network_id){
    for(var i in connected_social_services){
        if(network_id == connected_social_services[i]){
            return true;
        }
    }
    return false;
}

function get_search_empty_html(tab,title,sub_title,icon,button,bullets){
    var theme_name = '-' + get_theme_name();
    var access_shield = '';
    var html = '';

    if(tab == 'twitter' || tab == 'facebook_pages' || tab == 'vk_feeds' || tab == 'global'){
        if(!user_access[access_pro]){
            access_shield = '<span class="empty_state_shield icon-shield icon-yellow" title="' + _js("This feature is only available to Pro users") + '"></span>';
        }
    }

    if(tab == 'twitter' && icon != 'icon-search-no-results'){
        html += '<div class="search_empty_state">';
        html += '<div class="search_empty_state_h1">' + title + '</div>';
        html += '<div class="search_empty_state_h2 graylink">' + sub_title + '</div>';
        html += '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg">'+ access_shield +'</div>';

        if(!user_access[access_pro]){
            html += '<div class="search_empty_state_service_button"><button class="bluebutton greenbutton" onclick="view_upgrade({feature: \'social_feeds\'})">' + _js('Upgrade now') + '</button></div>';
        }else if(!is_service_connected(twitter_network_id)){
            html += '<div class="search_empty_state_service_button"><button class="bluebutton" onclick="connect_service(' + twitter_network_id + ')">' + sprintf(_js('Connect your %s account'),'Twitter') + '</button></div>';
        }else{
            html = '<div class="search_empty_state_twitter search_width_constraint flex" style="align-items: start; justify-content: space-between;">';
            html += '<div><div class="search_empty_state_twitter_h1">' + _js('Follow your favourite Twitter accounts or hashtags') + '</div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Follow a specific keyword across Twitter') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>https://twitter.com/search?q=inoreader</code></a> ' + _js('Or just type anything and press enter') + '</div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Follow an account') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>@Inoreader</code></a></div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Follow a hashtag') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>#inoreader</code></a></div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js("Follow someone's list") + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>https://x.com/Inoreader/lists/rss</code></a></div>';

            // html += '<div class="search_empty_state_twitter_h2 graylink">' + _js("Follow someone's likes") + '</div>';
            // html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>https://x.com/Inoreader/likes</code></a></div>';

            // html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Follow your own timeline') + '</div>';
            // html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>https://twitter.com/home</code></a></div></div>';
            html+= '</div>';

            html+= '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg">'+ access_shield +'</div>';
            html+= '</div>';
        }

        if(button){
            html += '<div class="search_empty_state_button">' + button + '</div>';
        }
        html += '</div>';
    }else if((tab == 'subscriptions' || tab == 'global') && icon != 'empty-articles-no-feeds'){
        html = '<div class="search_empty_state_twitter search_width_constraint flex" style="align-items: start; justify-content: space-between;">';
        html += '<div><div class="search_empty_state_twitter_h1">' + _js('Search smarter') + '</div>';

        html += '<div class="search_empty_state_twitter_preh2">' + _js('Create more powerful queries with our query builder.') + ' <a class="bluelink underlink boldlink" href="javascript:void(0);" onclick="show_query_builder();">' + _js('Open advanced search') + '</a></div>';
        html += '<div class="search_empty_state_twitter_preh2">' + _js('Or directly use these search operators:') + '</div>';

        html += '<div class="search_empty_state_twitter_preh3 graylink">' + _js('Must include keywords') + ' (AND)</div>';
        html += '<div class="search_empty_state_twitter_h3"><code>hello AND world</code></div>';

        html += '<div class="search_empty_state_twitter_preh3 graylink">' + _js('May include keywords') + ' (OR)</div>';
        html += '<div class="search_empty_state_twitter_h3"><code>hello OR world</code></div>';

        html += '<div class="search_empty_state_twitter_preh3 graylink">' + _js('Exclude keywords') + ' (NOT)</div>';
        html += '<div class="search_empty_state_twitter_h3"><code>hello NOT world</code></div>';

        html += '<div class="search_empty_state_twitter_preh3 graylink">' + _js('Exact phrase') + '</div>';
        html += '<div class="search_empty_state_twitter_h3"><code>"hello world"</code></div>';

        html += '<div class="search_empty_state_twitter_preh3 graylink">' + _js('Grouping') + '</div>';
        html += '<div class="search_empty_state_twitter_h3"><code>(hello OR world) AND (green OR blue)</code></div>';

        html += '</div>';
        html += '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/empty-search-articles-' + get_theme_name() + '.svg">'+ access_shield +'</div>';
        html += '</div>';

    }else if(tab == 'facebook_pages' && icon != 'icon-search-no-results'){
        html += '<div class="search_empty_state">';
        html += '<div class="search_empty_state_h1">' + title + '</div>';
        html += '<div class="search_empty_state_h2 graylink">' + sub_title + '</div>';
        html += '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg">'+ access_shield +'</div>';

        if(!user_access[access_pro]){
            html += '<div class="search_empty_state_service_button"><button class="bluebutton greenbutton" onclick="view_upgrade({feature: \'social_feeds\'})">' + _js('Upgrade now') + '</button></div>';
        }else if(!is_service_connected(facebook_network_id)){
            html += '<div class="search_empty_state_service_button"><button class="bluebutton" onclick="connect_service(' + facebook_network_id + ')">' + sprintf(_js('Connect your %s account'),'Facebook') + '</button></div>';
        }else{
            html = '<div class="search_empty_state_twitter search_width_constraint flex" style="align-items: start; justify-content: space-between;">';
            html += '<div><div class="search_empty_state_twitter_h1">' + _js('Use Facebook search smarter') + '</div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Find public Facebook pages by keyword') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>tesla</code></a></div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Follow a public page by pasting its Facebook URL') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>https://www.facebook.com/Inoreader</code></a></div></div>';

            html+= '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg">'+ access_shield +'</div>';
            html+= '</div>';

        }

        if(button){
            html += '<div class="search_empty_state_button">' + button + '</div>';
        }
        html += '</div>';
    }else if(tab == 'vk_feeds' && icon != 'icon-search-no-results'){
        html += '<div class="search_empty_state">';
        html += '<div class="search_empty_state_h1">' + title + '</div>';
        html += '<div class="search_empty_state_h2 graylink">' + sub_title + '</div>';
        html += '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg">'+ access_shield +'</div>';

        if(!user_access[access_pro]){
            html += '<div class="search_empty_state_service_button"><button class="bluebutton greenbutton" onclick="view_upgrade({feature: \'social_feeds\'})">' + _js('Upgrade now') + '</button></div>';
        }else if(!is_service_connected(vk_network_id)){
            html += '<div class="search_empty_state_service_button"><button class="bluebutton" onclick="connect_service(' + vk_network_id + ')">' + sprintf(_js('Connect your %s account'),'VK') + '</button></div>';
        }else{
            html = '<div class="search_empty_state">';
            html += '<div class="search_empty_state_h1">';
            html += _js('No results');
            html += '</div>';
            html += '<div class="search_empty_state_icon">';
            html += '<span class="search_empty_icon icon-search-no-results"></span>';
            html += '</div>';
            html += '</div>';
        }

        if(button){
            html += '<div class="search_empty_state_button">' + button + '</div>';
        }
        html += '</div>';
    }else if(tab == 'google_news' && icon != 'icon-search-no-results'){
            var html = '<div class="search_empty_state_twitter search_width_constraint flex" style="align-items: start; justify-content: space-between;">';
            html += '<div><div class="search_empty_state_twitter_h1">' + _js('Use Google News search smarter') + '</div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Use quotes for exact match of names') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>"Nikola Tesla"</code></a></div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Use "intitle:" to search for keywords in titles') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>intitle:"electric vehicles"</code></a></div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Use "-" to exclude specific keywords') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>"Nikola Tesla" -experiment</code></a></div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Use "AND" to search for multiple keywords') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>"Nikola Tesla" AND experiment</code></a></div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Use "OR" to combine multiple keywords') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>"Nikola Tesla" OR "Thomas Edison"</code></a></div></div>';

            html+= '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg">'+ access_shield +'</div>';
            html+= '</div>';

    }else if(tab == 'reddit'  && icon != 'icon-search-no-results'){
            var html = '<div class="search_empty_state_twitter search_width_constraint flex" style="align-items: start; justify-content: space-between;">';
            html += '<div><div class="search_empty_state_twitter_h1">' + _js('Use Reddit search smarter') + '</div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Browse subreddits by typing a keyword') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>tesla</code></a></div>';

            html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Find a subreddit by its name') + '</div>';
            html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>r/electricvehicles</code></a></div></div>';

            html+= '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg">'+ access_shield +'</div>';
            html+= '</div>';
    }else if(tab == 'telegram'  && icon != 'icon-search-no-results'){
      //if(!user_access[access_pro]) {
      //  html += '<div class="search_empty_state_service_button"><button class="bluebutton greenbutton" onclick="view_upgrade({feature: \'social_feeds\'})">' + _js('Upgrade now') + '</button></div>';
      //} else {
        var html = '<div class="search_empty_state_twitter search_width_constraint flex" style="align-items: start; justify-content: space-between;">';
        html += '<div><div class="search_empty_state_twitter_h1">' + _js('Use Telegram search smarter') + '</div>';

        html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Browse Telegram channels by typing a keyword') + '</div>';
        html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>coins</code></a></div>';

        html += '<div class="search_empty_state_twitter_h2 graylink">' + _js('Find a channel by its name') + '</div>';
        html += '<div class="search_empty_state_twitter_h3"><a href="javascript:void(0);" onclick="fill_search_suggestion(this,\'' + tab + '\')"><code>Cointelegraph</code></a></div></div>';

        html += '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg"></div>';
        html += '</div>';
      //}
    }else if( icon == 'icon-search-no-results') {
        if (tab == 'feeds') {
            var language = _js('All languages')
            var $labels = $('.search_dropdown').find('.search_context_current');
            if($labels){
                language = $labels.last().find('.articles-search-input-filter').eq(0).html()
            }
            title = sprintf(_js('Sorry, there are no feeds about %s in %s in the %s database'), '<strong>' + $('#searcher_input').val() + '</strong>', '<strong>' + language + '</strong>', application_name);
            bullets = [
                sprintf(_js('Check that you have %s'), '<strong>spelled all the words correctly</strong>'),
                sprintf(_js('You can try searching in %s'), '<strong>another language</strong>'),
                sprintf(_js('If you want to search for articles instead of feeds, try the %s tab'), '<a class="underlink boldlink" href="javascript:void(0);" onclick="switch_searcher_tab(\'subscriptions\');l(\'Search controls\',\'Articles suggestion from no results\');">' + _js('Articles') + '</a>')
            ];
        } else if (tab == 'google_news') {
            bullets = [
                sprintf(_js('Check that you have %s'),'<strong>' + _js('spelled all the words correctly') + '</strong>'),
                sprintf(_js('You can try searching in %s'), '<strong>' + _js('another language') + '</strong>'),
                sprintf(_js('If you want to search for regular feeds, try the %s tab'), '<a class="underlink boldlink" href="javascript:void(0);" onclick="switch_searcher_tab(\'feeds\');l(\'Search controls\',\'Feeds suggestion from no results\');">' + _js('Feeds') + '</a>')
            ];
        } else if (tab == 'facebook_pages') {
            bullets = [
                sprintf(_js('Check that you have %s'),'<strong>' + _js('spelled all the words correctly') + '</strong>'),
                sprintf(_js('You can also paste a direct URL, like %s'), '<code>https://www.facebook.com/Inoreader</code>'),
                sprintf(_js('Facebook group and personal profiles cannot be followed, only Public Pages'))
            ];
        } else if (tab == 'twitter') {
            bullets = [
                sprintf(_js('Check that you have %s'), '<b>' + _js('spelled all the words correctly') + '</b>'),
                sprintf(_js('If you want to follow an account, try %s'),'<code>@account</code>'),
                sprintf(_js('If you want to follow a hashtag, try %s'),'<code>#hashtag</code>'),
                sprintf(_js('If you want to follow your own timeline, try %s'),'<code>https://twitter.com/home</code>'),
                sprintf(_js('You can also paste a direct URL, like %s'), '<code>https://twitter.com/search?q=keyword</code>')
            ];
        } else if (tab == 'reddit') {
            bullets = [
                sprintf(_js('Check that you have %s'),'<strong>' + _js('spelled all the words correctly') + '</strong>'),
                sprintf(_js('You can also paste a direct URL, like %s'), '<code>https://www.reddit.com/search?q=keyword&sort=new&type=link</code>')
            ];
        } else if (tab == 'users') {
            bullets = [
                sprintf(_js('Check that you have %s'),'<strong>' + _js('spelled all the words correctly') + '</strong>')
            ];
        }

        html = '<div class="search_empty_state flex justify-content-between search_width_constraint">';
        html += '<div class="search_empty_state_text">';
        html += '<div class="search_empty_state_h1_new">';
        html += title;
        html += '</div>';
        html += '<div class="search_empty_state_suggestions">';
        if (bullets) {
            html += '<p><strong>' + _js('Our suggestions:') + '</strong></p>';
            html += '<ul>';
            bullets.forEach(function (bullet) {
                html += '<li>' + bullet + '</li>';
            })
            html += '</ul>';
        }
        html += '</div>';
        html += '</div>';
        html += '<div class="search_empty_state_icon">';
        html += '</div>';
        html += '</div>';
        if (button) {
            html += '<div class="search_empty_state_button">' + button + '</div>';
        }
        html += '</div>';
        getSVG('/images/svg/search-no-results.svg', function (svg) {
            $('.search_empty_state_icon').eq(0).html(svg);
        })
    }

    if(!html){
        html += '<div class="search_empty_state">';
        html += '<div class="search_empty_state_h1">' + title + '</div>';
        html += '<div class="search_empty_state_h2 graylink">' + sub_title + '</div>';
        html += '<div class="search_empty_state_icon"><img class="search_empty_icon" src="/images/empty-states/' + icon + theme_name + '.svg">'+ access_shield +'</div>';
        if(button){
            html += '<div class="search_empty_state_button">' + button + '</div>';
        }
        html += '</div>';
    }

    return html;
}

function build_searcher_welcome_state(){
    // TODO Wrap in gettext when strings are final
    var title = 'Add some feeds first';
    var sub_title = _js('To search through articles in your account you need to follow some feeds.');
    sub_title += sprintf(_js('You can try searching through %s.'),'<a href="javascript:void(0)" class="underlink" onclick="switch_searcher_tab(\'global\');">' + _js('all public articles') + '</a>');
    var icon = 'empty-articles-no-feeds';
    var button = '<button class="bluebutton" onclick="open_searcher({tab: \'feeds\', term: \'\'});">' + _js('Discover feeds') + '</button>';
    var html = get_search_empty_html('subscriptions',title,sub_title,icon,button);
    html += '<div id="subscriptions_search_welcome_state_shown" style="display:none;"></div>';
    $('#search_content').html(html);
}

function build_searcher_empty_state(tab){
    if(tab == 'feeds'){
        $('#search_content').data('feeds_loading',0);
        $('#searcher_div').removeClass('searching');
        build_searcher_feeds();
        rebuild_search_context(tab);
    }else{
        if(tab == 'subscriptions'){
            if(!user_has_subscriptions()){
                build_searcher_welcome_state();
                feeds_searcher_previous_tab = tab;
                return;
            }
            var title = _js('Welcome to Search');
            var sub_title = _js('Search for articles within your account.');
            var icon = 'empty-search-articles';

            rebuild_search_context(tab);
        }else if(tab == 'global'){
            var title = _js('Welcome to Global Search');
            var sub_title = (user_access[access_pro]) ? _js('Search for articles in all public RSS channels.') : sprintf(_js('Searching outside of your account is available only to %s subscribers.'), application_name + ' Pro');
            var icon = 'empty-search-articles-public';
            rebuild_search_context(tab);
        }else if(tab == 'twitter'){
            var title = _js('Welcome to Twitter Search');
            var icon = 'empty-search-twitter';
            var sub_title = _js('Search and follow Twitter Profiles, Searches and more.');

            if(!user_access[access_pro]){
                sub_title = '<p>' + _js('This feature is only available to Pro users.') + '</p>';
            }
        }else if(tab == 'facebook_pages'){
            var title = _js('Search for Facebook Pages');
            var icon = 'empty-search-facebook';
            var sub_title = _js('Start typing to find public Facebook pages to follow.');
            if(!user_access[access_pro]){
                sub_title = '<p>' + _js('This feature is only available to Pro users.') + '</p>';
            }
        }else if(tab == 'vk_feeds'){
            var title = 'Follow VK profiles';
            var icon = 'empty-search-vk';
            var sub_title = 'Search and follow VK profiles, searches and more.';
            if(!user_access[access_pro]){
                sub_title = '<p>' + _js('This feature is only available to Pro users.') + '</p>';
            }
        }else if(tab == 'google_news'){
            var title = _js('Get updates from Google News');
            var sub_title = sprintf(_js('Follow keyword searches on Google News directly inside %s.'),application_name);
            var icon = 'empty-search-google-news';
        }else if(tab == 'reddit'){
            var title = _js('Welcome to Reddit Search');
            var sub_title = _js('Follow Reddit searches and subreddits');
            var icon = 'empty-search-reddit';
        }else if(tab == 'telegram'){
          var title = _js('Welcome to Telegram Search');
          var sub_title = _js('Search for Telegram channels by typing a name or a keyword');
          var icon = 'empty-search-telegram';
          if(!user_access[access_pro]){
            sub_title = '<p>' + _js('This feature is only available to Pro users.') + '</p>';
          }
        }else if(tab == 'users'){
            var title = sprintf(_js('Search for %s Users'),application_name);
            var sub_title = _js('Search and follow Inoreader users.');
            var icon = 'empty-search-users';
        }

        var html = get_search_empty_html(tab,title,sub_title,icon);
        $('#search_content').html(html);
    }

    feeds_searcher_previous_tab = tab;
}

function build_searcher_content(params){
    if(params.section_id){
        $('#catalog_content').html('<div class="inno_loader inno_loader_high"></div>');
    }else if($('#search_content')[0]){
        if($('#search_content').data('feeds_loading') != '1'){
            $('#search_content').data('feeds_loading','1').html('<div class="inno_loader inno_loader_high">Searching</div>');
        }
    }

    if(!params.tab && feeds_searcher_previous_tab){
        params.tab = feeds_searcher_previous_tab
    }

    clear_racing_xajax_requests();
    if(params.term){
        $('#searcher_div').addClass('searching');
    }
    if(params.tab == 'global'){
        $('#search_content').html('<div id="reader_pane_articles_search_result" class="search_width_constraint"><div class="inno_loader inno_loader_high"></div></div>');
        init_articles_search(params.term,true);
    }else{
        xajax_build_searcher_content(params);
    }
}

function check_search_articles_tab(){
    if(user_has_subscriptions()){
        if($('#subscriptions_search_welcome_state_shown')[0]){
            build_searcher_empty_state('subscriptions');
        }
    }
}

function check_article_tags_menu(){
    var id = get_aid();
    if(!id){
        return;
    }
    if($('#article_tags_menu_' + id)[0]){
        build_article_tags_menu_content(id);
    }
}

function user_has_subscriptions(){
    return $('#tree').find('.parent_div')[0] ? true : false;
}

function build_searcher(params){
    if(!params){
        params = {tab : 'feeds'}
    }

    feeds_searcher_previous_value = '';
    discovery_params = params;

    $('#sb_tp_search_overlay').hide();
    var el;
    var reader_pane = document.getElementById('reader_pane');

    var tabs = {
        subscriptions : '<span class="icon16 icon-search-tab-my-articles"></span>' + '<span class="tab-text">' + _js('Articles') + '</span>',
        feeds : '<span class="icon16 icon-search-tab-rss"></span>' + '<span class="tab-text">' + _js('Feeds') + '</span>',
        google_news : '<span class="icon16 icon-search-tab-google-news"></span>' + '<span class="tab-text">' + 'Google News' + '</span>',
        facebook_pages : '<span class="icon16 icon-search-tab-facebook"></span>' + '<span class="tab-text">' + _js('Facebook Pages') + '</span>',
        // twitter : '<span class="icon16 icon-search-tab-twitter"></span>' + '<span class="tab-text">' + 'Twitter' + '</span>',
        reddit : '<span class="icon16 icon-search-tab-reddit"></span>' + '<span class="tab-text">' + 'Reddit' + '</span>'
    }

    var extra_tabs = {
        telegram : '<span class="icon16 icon-search-tab-telegram"></span>' + '<span class="tab-text">' + _js('Telegram channel'),
        users : '<span class="icon16 icon-search-tab-inoreader-users"></span>' + '<span class="tab-text">' + _js('Inoreader users'),
    }

    if(params.tab && !tabs[params.tab] && !extra_tabs[params.tab] && params.tab != 'global'){
        params.term = params.tab;
        params.tab = 'subscriptions';
        setTimeout(function(){
            set_loc();
        },10);
    }

    if(params.tab == 'subscriptions' || params.tab == 'global' || params.tab == 'feeds'){
        tabs.reddit = '<span class="icon16 icon-search-tab-reddit"></span>' + '<span class="tab-text">' + 'Reddit';
        delete extra_tabs.reddit;
    }

    var search_heading = create_dom_element('div',{
        className : 'searcher_top_heading search_width_constraint',
        innerHTML : _js('Find the best information sources')
    });

    var search_subheading = create_dom_element('div',{
        className : 'searcher_top_subheading search_width_constraint graylink',
        innerHTML : _js('You can search for articles, website feeds, Facebook pages, Google News and more.')
    });

    var top_bar_wrapper = create_dom_element('div', {
        id : 'searcher_top_bar_wrapper',
        className : 'searcher_top_bar_wrapper'
    });
    var top_bar = create_dom_element('div',{
        className : 'searcher_top_bar search_width_constraint'
    });

    var top_bar_wrapper_buttons = create_dom_element('div', {
        className : 'searcher_top_bar_buttons flex'
    });

    var top_bar_left = create_dom_element('div', {
        className : 'searcher_top_bar_left flex flex_grow'
    });

    var top_bar_right = create_dom_element('div', {
        className : 'searcher_top_bar_right flex flex_shrink'
    });

    top_bar_wrapper_buttons.appendChild(top_bar_left);
    top_bar_wrapper_buttons.appendChild(top_bar_right);

    var top_bar_bottom = create_dom_element('div', {
        id : 'searcher_div',
        className : 'searcher_top_bar_left flex_grow welcome_search_input flex'
    });

    top_bar.appendChild(top_bar_wrapper_buttons);
    top_bar.appendChild(top_bar_bottom);

    var search_placeholder = '';
    if(params.tab == 'feeds') {
        search_placeholder = _js('Follow your favorite sources and never miss a story');
    }
    else if (params.tab == 'subscriptions') {
        search_placeholder = _js('Search for any article in your feeds or across the web');
    }
    else if (params.tab == 'global') {
        search_placeholder = _js('Search for any article across the web');
    }
    else if (params.tab == 'google_news') {
        search_placeholder = _js('Follow keywords, brands, names and more with the powerful Google News feeds');
    }
    else if (params.tab == 'facebook_pages') {
        search_placeholder = _js('Follow your favorite Facebook pages');
    }
    else if (params.tab == 'twitter') {
        search_placeholder = _js('Follow your favorite @accounts, #hashtags or lists');
    }
    else if (params.tab == 'reddit') {
      search_placeholder = _js('Follow the most valuable topics from the worlds biggest forum');
    }
    else if (params.tab == 'telegram') {
      search_placeholder = _js('Follow the most popular public channels');
    }

    top_bar_bottom.appendChild(create_dom_element('input', {
        id : 'searcher_input',
        type: 'text',
        value: (params.term ? params.term : ''),
        placeholder: search_placeholder,
        onkeyup: function(event){ searcher_term_handler(this, params, event); }
    }));

    top_bar_bottom.appendChild(create_dom_element('input', {
        id: 'search_content_filters_filter_type',
        type: 'hidden',
        value: switch_search_filter_filter !== null ? switch_search_filter_filter : '',
        onchange: function(event){ set_search_filters(1,false,this) }
    }));

    top_bar_bottom.appendChild(create_dom_element('input', {
        id: 'search_content_filters_search_feed_popularity',
        type: 'hidden',
        value: switch_search_filter_feed_popularity !== null ? switch_search_filter_feed_popularity : 0,
        onchange: function(event){ set_search_filters(4,false,this) }
    }));

    top_bar_bottom.appendChild(create_dom_element('div', {
        className: 'loader_icon_container',
        innerHTML: '<i class="loader_spinner"></i>'
    }));

    var found_main_tab = null;
    for(var i in tabs){
        if(params.tab == i || (params.tab === 'global' && i === 'subscriptions')){
            found_main_tab = i;
        }

    }
    if(!found_main_tab){
        var tab_num = 0;
        var tabs_length = Object.keys(tabs).length;
        for(var i in tabs){
            tab_num++;
            if(tab_num == tabs_length){
                extra_tabs[i] = tabs[i];
                delete tabs[i];
                break;
            }
        }
    }
    for(var i in tabs){
        var extra_class = (params.tab == i || (params.tab === 'global' && i === 'subscriptions')) ? ' top_bar_tab_current' : '';
        var tab_div = create_dom_element('div', {
            id: 'top_bar_tab_' + i,
            className: 'top_bar_tab' + extra_class,
            innerHTML: tabs[i],
            dataset: {id: i},
            onclick: function(){
                switch_searcher_tab(this.dataset.id);
            }
        });
        if(!user_access[access_pro] && (i == 'global' || i == 'twitter' || i == 'facebook_pages' || i == 'telegram')){
            tab_div.appendChild(create_dom_element('span',{
                className: 'icon14 icon-shield icon-yellow top_bar_shield_icon',
                title: _js('This feature is only available to Pro users')
            }));
            tab_div.className += ' top_bar_tab_with_shield';
        }
        top_bar_left.appendChild(tab_div);
    }

    var extra_tabs_filtered = {};
    var has_extra_menu_items = false;
    if(!found_main_tab){
        for(var i in extra_tabs){
            if(params.tab == i){
                var tab_div = create_dom_element('div', {
                    id: 'top_bar_tab_' + i,
                    className: 'top_bar_tab top_bar_tab_current',
                    innerHTML: extra_tabs[i],
                    dataset: {id: i},
                    onclick: function(){
                        switch_searcher_tab(this.dataset.id);
                    }
                });
                if(!user_access[access_pro] && (i == 'global' || i == 'twitter' || i == 'facebook_pages' || i == 'telegram')){
                    tab_div.appendChild(create_dom_element('span',{
                        className: 'icon14 icon-shield icon-yellow top_bar_shield_icon',
                        title: _js('This feature is only available to Pro users')
                    }));
                    tab_div.className += ' top_bar_tab_with_shield';

                }
                top_bar_left.appendChild(tab_div);
            }else{
                has_extra_menu_items = true;
                extra_tabs_filtered[i] = extra_tabs[i];
            }
        }
    }else{
        has_extra_menu_items = true;
        extra_tabs_filtered = extra_tabs;
    }

    if(has_extra_menu_items){
        top_bar_right.appendChild(create_dom_element('div', {
            id: 'top_bar_tab_more',
            className: 'top_bar_tab',
            innerHTML: '<span class="icon16 icon-search-tab-more"></span>' + '<span class="tab-text">' + _js('More') + '</span>',
            onclick: function(){
                build_searcher_more_menu(extra_tabs_filtered,this);
            }
        }));
    }

    top_bar.appendChild(create_dom_element('div', {
        className : 'clearfix'
    }));

    top_bar_wrapper.appendChild(top_bar);

    reader_pane.innerHTML = '';
    reader_pane.appendChild(search_heading);
    reader_pane.appendChild(search_subheading);
    reader_pane.appendChild(top_bar_wrapper);

    reader_pane.appendChild(create_dom_element('div', {
        id : 'search_content'
    }));

    discovery_params.tab = params.tab;

    // build_search_context(params);
    rebuild_search_context(params.tab);

    set_loc();

    if((params.tab == 'feeds' && params.term) || params.tab != 'feeds'){
        searcher_term_handler(document.getElementById('searcher_input'), params, null);
    }else{
        if(params.tab == 'feeds'){
            if(params && params.section_id){
                // Only when coming from the welcome screen
                build_searcher_feeds(params);
            }else{
                build_searcher_feeds();
            }
        }
    }

    clear_toolbar();
    build_toolbar({filter_type: 'search', filter_id: 0, heading: ''});
    $('#sb_rp_ribbon').html('');
    // if(!$('#tree').find('.parent_div')[0]){
    //     $('#top_bar_tab_subscriptions').hide();
    // }
}

function clear_search_context (top_bar_bottom) {
    $(top_bar_bottom).removeClass('has_context').find('.search_dropdown').remove();
    $(top_bar_bottom).removeClass('has_context_subscriptions').find('.search_dropdown').remove();
    $(top_bar_bottom).find('.search_language_dropdown').remove();
    top_bar_bottom.classList.remove('has_context');
    top_bar_bottom.classList.remove('has_context_subscriptions');
    top_bar_bottom.classList.remove('has_context_feeds');
    top_bar_bottom.classList.remove('has_context_subreddit');
}

function rebuild_search_context(tab){
    if(tree_version == 0 || tree_version != search_context_last_tree_version){
        xajax_rebuild_search_context(tab);
    }else{
        if(last_search_context && last_search_context.params){
            last_search_context.params.tab = tab;
            last_search_context.params.search_options = (tab == 'global') ? 4 : 1;
        }
        build_search_context(null, last_search_context );
    }
}

function switch_search_context_tab(tab){
    if(!user_access[access_pro] && tab == 'global'){
        switch_searcher_tab('global');
    }
    if(!document.getElementById('search_context_dropdown_wrapper_subscriptions')){
        return;
    }
    document.getElementById('search_context_dropdown_wrapper_subscriptions').style.display = 'none';
    document.getElementById('search_context_dropdown_wrapper_global').style.display = 'none';
    document.getElementById('search_dropdown_filter').style.display = 'none';
    $('.search_context_dropdown').removeClass('search_subscriptions search_global');
    if(tab === 'subscriptions'){
        $('.search_context_dropdown').addClass('search_subscriptions');
        document.getElementById('search_context_dropdown_wrapper_subscriptions').style.display = 'block';
        document.getElementById('search_dropdown_filter').style.display = 'block';
        $('#my_feeds+label').addClass('inno_toolbar_switcher_button_active');
        $('#all_feeds+label').removeClass('inno_toolbar_switcher_button_active');
    }else{
        $('.search_context_dropdown').addClass('search_global');
        document.getElementById('search_context_dropdown_wrapper_global').style.display = 'block';
        $('#all_feeds+label').addClass('inno_toolbar_switcher_button_active');
        $('#my_feeds+label').removeClass('inno_toolbar_switcher_button_active');
    }
}

function build_search_context (params, context) {
    if(!params) {
        params = discovery_params;
    }

    if(context && context.params && context.params.nag_counter){
        last_nag_counter = context.params.nag_counter;
    }

    var top_bar_bottom = document.getElementById("searcher_div");
    if(!top_bar_bottom)
        return false;

    clear_search_context(top_bar_bottom);
    if(context) {
        var is_pro = user_access[access_pro];
        if (params.tab === 'subscriptions' || params.tab === 'global') {
            top_bar_bottom.classList.add('has_context_subscriptions');

            var search_context = create_dom_element('div', {
                className: 'search_dropdown flex',
                innerHTML: ''
            });

            var search_dropdown = create_dom_element('div', {
                className: 'search_context_dropdown bg-color',
            });
            if(!is_pro) {
              search_dropdown.classList.add('requires_pro');
            }

            var search_dropdown_header = create_dom_element('div', {
              className: 'flex-shrink flex search_filter_switch',
              innerHTML:
                '<input name="search_context_scope" id="my_feeds" type="radio" class="filter_radio filter_radio_tall" value="subscriptions" onchange="switch_search_context_tab(\'subscriptions\')">' +
                '<label for="my_feeds" style="flex-grow: 1;" class="' + (params.tab === 'subscriptions' ? 'inno_toolbar_switcher_button_active':'')+'">' + _js('Articles in my feeds') + '</label>' +
                '<input name="search_context_scope" id="all_feeds" type="radio" class="filter_radio filter_radio_tall" value="global" onchange="switch_search_context_tab(\'global\')">' +
                '<label for="all_feeds" style="flex-grow: 1;" class="' + (params.tab === 'global' ? 'inno_toolbar_switcher_button_active':'')+'">' + _js('All public articles') +
                '<span class="icon14 icon-shield icon-yellow" title="'+_js('This feature is only available to Pro users')+'"></span>' +
                '</label>'
            });
            search_dropdown.appendChild(search_dropdown_header);

            var search_dropdown_wrapper = create_dom_element('div', {
                id: 'search_context_dropdown_wrapper_subscriptions',
                className: 'search_context_dropdown_wrapper'
            });

              var system_folders = [
                { title: _js('All articles'), id: '', icon: 'feed_favicon icon16 icon-search-tab-my-articles'},
                { title: _js('Read later'), id: 'starred', icon: 'feed_favicon icon16 icon-stars'},
                { title: _js('Annotated'), id: 'annotated', icon: 'feed_favicon icon16 icon-tree-annotation'},
                { title: _js('Saved web pages'), id: 'web_pages', icon: 'feed_favicon icon16 icon-saved-web-pages'},
              ];

              var current_item_subscriptions = formatContextItem(system_folders[0]);

              var search_dropdown_input = create_dom_element('input', {
                id: 'search_dropdown_filter',
                type: 'text',
                placeholder: _js('Filter items'),
                onkeyup: function(event ) {
                  //search_context_dropdown
                  var items = document.getElementsByClassName('search_context_filter');
                  var text = event.target.value;
                  var pat = new RegExp(text, 'i');
                  for (var i=0; i < items.length; i++) {
                    var item = items[i];
                    if (pat.test(item.innerText)) {
                      item.classList.remove("hidden");
                    } else {
                      item.classList.add("hidden");
                    }
                  }
                  checkEmptyContexts(search_dropdown);
                }
              })
              search_dropdown.appendChild(search_dropdown_input);

              //Add pills
              var pills = [
                { label: _js('Feeds'), css_class: 'only_subscription', count: context.subscriptions.length },
                { label: _js('Folders'), css_class: 'only_folder', count: context.folders.length  },
                { label: _js('Tags'), css_class: 'only_tag', count: context.tags.length },
                { label: _js('Monitored keywords'), css_class: 'only_active_search', count: context.active_searches.length },
                { label: _js('Team channels'), css_class: 'only_team_channel', count: context.team_channels.length }
              ];

              var pill_wrapper = create_dom_element('div', {
                className: 'nav-pills'
              });
              pills.forEach(function(pill) {
                var pill_btn = create_dom_element('button', {
                  className: 'btn btn-pill ' + pill.css_class + '-btn',
                  innerHTML: pill.label
                });
                pill_btn.onclick = function(event) {
                  var has_class = $(search_context).hasClass(pill.css_class)
                  $(search_context)
                    .removeClass()
                    .addClass('search_dropdown flex');
                  if(!has_class)
                    $(search_context).addClass(pill.css_class)
                }
                if(pill.count)
                  pill_wrapper.appendChild(pill_btn);
              });
              search_dropdown.appendChild(pill_wrapper);

              current_item_subscriptions = addContextSection(search_dropdown_wrapper, false, system_folders, '', context, {item_class: 'search_context_filter_system_folder'}) || current_item_subscriptions;
              current_item_subscriptions = addContextSection(search_dropdown_wrapper, _js('Feeds'), context.subscriptions, 'subscription', context) || current_item_subscriptions;
              current_item_subscriptions = addContextSection(search_dropdown_wrapper, _js('Folders'), context.folders, 'folder', context) || current_item_subscriptions;
              current_item_subscriptions = addContextSection(search_dropdown_wrapper, _js('Tags'), context.tags, 'folder', context, {item_class: 'search_context_filter_tag'}) || current_item_subscriptions;
              current_item_subscriptions = addContextSection(search_dropdown_wrapper, _js('Monitored keywords'), context.active_searches, 'folder', context, {item_class: 'search_context_filter_active_search'}) || current_item_subscriptions;
              current_item_subscriptions = addContextSection(search_dropdown_wrapper, _js('Team channels'), context.team_channels, 'subscription', context, {item_class: 'search_context_filter_team_channel'}) || current_item_subscriptions;
              search_dropdown.appendChild(create_dom_element('div', {
                className: 'context_empty_state_message',
                innerHTML: 'No results found'
              }))
              search_dropdown.appendChild(search_dropdown_wrapper);

              // GLOBAL

              var search_dropdown_wrapper = create_dom_element('div', {
                  id: 'search_context_dropdown_wrapper_global',
                  className: 'search_context_dropdown_wrapper'
              });

              if(!is_pro) {
                search_dropdown_wrapper.appendChild(create_dom_element('div', {
                  className: 'articles-search-public-free-user',
                  innerHTML:
                    '<h3>Available in our Pro plan</h3>' +
                    '<p>Search in more than</p>' +
                    '<p class="nag_counter" id="search_context_nag_counter" data-count="'+context.params.nag_counter+'" data-aps="123">' + context.params.nag_counter + '</p>' +
                    '<p>articles</p>' +
                    '<div class="bluebutton greenbutton"><a class="ajaxed" href="/upgrade/feature/global_search">'+_js("Upgrade now")+'</a></div>'
                }));

                var current_item_global = '<div class="flex search_context_current text-truncate"><div class="flex"><span class="feed_favicon icon16 icon-search-tab-public-articles"></span> <span class="text-truncate articles-search-input-filter" title="' + _js('All public articles') + '">' + _js('All public articles') + '</span></div></div>';
              }else{
                var global_scopes = [
                  { title: _js('All sites'), id: '0'},
                  { title: _js('Popular sites'), id: '1'},
                  { title: _js('Most popular sites'), id: '2'},
                ];

                var current_item_global = formatContextItem(global_scopes[0], context.params.search_options === 4);

                current_item_global = addContextSection(search_dropdown_wrapper, false, global_scopes, '', context, {item_class: 'global_scopes'}) || current_item_global;
              }

            search_dropdown.appendChild(search_dropdown_wrapper);

            var current_item = (params.tab == 'subscriptions') ? current_item_subscriptions : current_item_global;
            var current_context = create_dom_element('a', {
                className: 'flex search_context_section justify-between',
                href: 'javascript:void(0)',
                innerHTML:
                  '<div class="flex search_context_current text-truncate">' +
                  current_item +
                  '</div> <i class="icon16 pointer_icon icon-arrow_down_small mr-2"></i>',
                onclick: dropdownClickHandler(search_context)
            });


            // LANG

            var langs = [];
            langs.push({title: _js('All languages'), id: ''});
            for(var i in languages){
                langs.push({title: languages[i].name, id: languages[i].language_code})
            }

            var current_lang = formatContextItem(langs[0],false,true);
            var lang_dropdown = create_dom_element('div', {
              className: 'search_context_dropdown bg-color',
            });

            current_lang = addContextSection(lang_dropdown, false, langs, 'search_language', context, {
              item_callback: function (e, item) {
                context.params.search_language = item.id;
                $('#search_content_filters_language').val(item.id);
                $('.search_context_current').eq(1).html(formatContextItem(item, false, true));
                set_search_filters(feed_params.search_options,false,document.getElementById('search_content_filters_language'));
                if($('#search_languages_tippy')[0]){
                    close_search_language_tippy(true);
                }
              }
            }) || current_lang;

            var current_lang_context = create_dom_element('a', {
              className: 'flex search_context_section justify-between',
              href: 'javascript:void(0)',
              innerHTML:
                '<div class="flex search_context_current text-truncate">' +
                current_lang +
                '</div>   <i class="icon16 pointer_icon icon-arrow_down_small mr-2"></i>',
              onclick: dropdownClickHandler(search_context, 1)
            });

            var wrapperLang = create_dom_element('div', {
              className: 'relative flex',
              id: 'search_language_flex_wrapper'
            });

            var wrapperMenu = create_dom_element('div', {
              className: 'relative flex'
            });

            var separator = create_dom_element('div', {
              className: 'article-search-input-separator',
              innerHTML: '|'
            });

            wrapperMenu.appendChild(current_context);
            wrapperMenu.appendChild(search_dropdown);
            // wrapperMenu.appendChild(separator.cloneNode(true));

            wrapperLang.appendChild(separator.cloneNode(true));
            wrapperLang.appendChild(current_lang_context);
            wrapperLang.appendChild(lang_dropdown);
            // LANGEND

            search_context.appendChild(wrapperMenu);
            search_context.appendChild(wrapperLang);
            wrapperLang.style.display = "none";

            top_bar_bottom.appendChild(search_context);


            //check empty
            checkEmptyContexts(search_dropdown);
            //nag counter
            global_search_nag_counter('#search_context_nag_counter');

            if(params.tab === 'subscriptions'){
                document.getElementById('search_dropdown_filter').style.display = 'block';
                document.getElementById('search_context_dropdown_wrapper_subscriptions').style.display = 'block';
            }else{
                document.getElementById('search_context_dropdown_wrapper_global').style.display = 'block';
            }
            $('.search_context_dropdown').addClass('search_' + params.tab);


            if(!check_user_visit(32)){
                add_search_language_tippy();
            }
        }
        //reddit
        if(params.tab === 'reddit') {
          top_bar_bottom.classList.add('has_context_subreddit');

          var search_context = create_dom_element('div', {
            className: 'search_dropdown flex',
          });

          var search_dropdown = create_dom_element('div', {
            className: 'search_context_dropdown search_context_subreddit bg-color',
            innerHTML:
              '<label for="input-subreddit" class="form-label text-color">' + _js('Search in specific subreddit') +':</label>'
          });

          var search_dropdown_input_wrap = create_dom_element('div', {
              className: 'gn_dropdown_input flex relative',
              innerHTML: '<div class="newsletter_email_first_part graylink" style="top: auto; font-size: 14px;line-height: 40px;">r/</div>'
          });

          var search_dropdown_input = create_dom_element('input', {
              type: 'text',
              name: 'input-subreddit',
              id: 'input-subreddit',
              style: 'padding-left: 24px;',
              value: context.params.search_subreddit || '',
              placeholder: 'e.g. Apple',
              onkeyup: function (e) {
                if(e.keyCode == 13) {
                  closeSearchContextDropdown();
                  search_dropdown_button.click();
                }
              }
          });

          var search_dropdown_button = create_dom_element('button', {
            type: 'submit',
            className: 'bluebutton',
            onclick: function(event) {
              event.preventDefault();
              context.params.search_subreddit = document.getElementById('input-subreddit').value;
              build_searcher_content(context.params);
              closeSearchContextDropdown();
            },
            innerHTML: _js('Show results')
          });

          search_dropdown_input_wrap.appendChild(search_dropdown_input);
          search_dropdown_input_wrap.appendChild(search_dropdown_button);
          search_dropdown.appendChild(search_dropdown_input_wrap);

          var sort_dropdown = create_dom_element('div', {
            className: 'search_context_dropdown bg-color',
          });
          var current_item = _js('All subreddits');
          if(context.params.search_subreddit) {
            current_item = 'r/' + context.params.search_subreddit
          };

          var current_context = create_dom_element('a', {
            className: 'flex search_context_section justify-between',
            href: 'javascript:void(0)',
            innerHTML:
              '<div class="flex search_context_current text-truncate">' +
              current_item +
              '</div>',
            onclick: dropdownClickHandler(search_context)
          });

          var context_end = create_dom_element('i', {
            className: 'icon16 pointer_icon icon-arrow_down_small mr-2'
          })
          if(context.params.search_subreddit) {
            context_end.className = 'icon16 pointer_icon icon-cross';
            context_end.onclick = function(event) {
              event.stopPropagation();
              context.params.search_subreddit = '';
              build_searcher_content(context.params);
            }
          }

          current_context.appendChild(context_end);

          //reddit sort dropdown
          var sort_items = [
            { title: _js('New'), id: 'new'},
            { title: _js('Relevance'), id: 'relevance'},
            { title: _js('Hot'), id: 'hot'},
            { title: _js('Top'), id: 'top'},
            { title: _js('Comments'), id: 'comments'},
          ];

          var current_sort = formatContextItem(sort_items[0]);
          var reddit_sort_dropdown = create_dom_element('div', {
            className: 'search_context_dropdown bg-color',
          });

          current_sort = addContextSection(reddit_sort_dropdown, false, sort_items, 'reddit_sort', context, {
            item_callback: function (e, item) {
              context.params.sort_reddit = item.id;
              build_searcher_content(context.params);
            }
          }) || current_sort;

          var current_sort_context = create_dom_element('a', {
            className: 'flex search_context_section justify-between',
            href: 'javascript:void(0)',
            innerHTML:
              '<div class="flex search_context_current text-truncate">' +
              current_sort +
              '</div> <i class="icon16 pointer_icon icon-arrow_down_small mr-2"></i>',
            onclick: dropdownClickHandler(search_context, 1)
          });

          var separator = create_dom_element('div', {
            className: 'article-search-input-separator',
            innerHTML: '|'
          });

          var wrapperSubreddit = create_dom_element('div', {
            className: 'relative flex'
          });
          var wrapperSort = create_dom_element('div', {
            className: 'relative flex'
          });

          wrapperSubreddit.appendChild(separator.cloneNode(true));
          wrapperSubreddit.appendChild(current_context);
          wrapperSubreddit.appendChild(search_dropdown);
          wrapperSort.appendChild(separator.cloneNode(true));
          wrapperSort.appendChild(current_sort_context);
          wrapperSort.appendChild(reddit_sort_dropdown);
          search_context.appendChild(wrapperSubreddit);
          search_context.appendChild(wrapperSort);
          top_bar_bottom.appendChild(search_context);
        }
        if(params.tab == 'google_news') {
          top_bar_bottom.classList.add('has_context_subreddit');

          var search_context = create_dom_element('div', {
            className: 'search_dropdown flex',
          });

          var search_dropdown = create_dom_element('div', {
            className: 'search_context_dropdown search_context_subreddit bg-color',
            innerHTML:
              '<label for="input-gnews-url" class="form-label text-color">' + _js('Search in specific website') +':</label>'
          });
          var search_dropdown_input_wrapper = search_dropdown.appendChild(create_dom_element('div', {
              className: 'gn_dropdown_input flex',
          }));

          var search_dropdown_input = create_dom_element('input', {
            type:"text",
            name:"input-gnews-url",
            id:"input-gnews-url",
            placeholder: 'e.g. nytimes.com',
            value: context.params.search_url || '',
            onkeyup: function (e) {
              if(e.keyCode == 13) {
                closeSearchContextDropdown();
                search_dropdown_input_button.click();
              }
            }
          });

          var search_dropdown_input_button = create_dom_element('button', {
            type: 'submit',
            className: 'bluebutton',
            onclick: function(event) {
              event.preventDefault();
              context.params.search_url = document.getElementById('input-gnews-url').value;
              document.getElementById('searcher_input').dataset.search_url = context.params.search_url;

              build_searcher_content(context.params);
              closeSearchContextDropdown();
            },
            innerHTML: _js('Show results')
          });

          search_dropdown_input_wrapper.appendChild(search_dropdown_input);
          search_dropdown_input_wrapper.appendChild(search_dropdown_input_button);

          var current_item = _js('All news sites');
          if(context.params.search_url) {
            current_item = context.params.search_url
          };

          var current_context = create_dom_element('a', {
            className: 'flex search_context_section justify-between',
            href: 'javascript:void(0)',
            innerHTML:
              '<div class="flex search_context_current text-truncate">' +
              current_item +
              '</div>',
            onclick: dropdownClickHandler(search_context)
          });

          var context_end = create_dom_element('i', {
            className: 'icon16 pointer_icon icon-arrow_down_small mr-2'
          })
          if(context.params.search_url) {
            context_end.className = 'icon16 pointer_icon icon-cross';
            context_end.onclick = function(event) {
              event.stopPropagation();
              context.params.search_url = '';
              build_searcher_content(context.params);
            }
          }

          current_context.appendChild(context_end);

          //lang context
          var langs = [
              { title: 'English (United States)', id: 'US:en' },
              { title: 'English (Australia)', id: 'AU:en' },
              { title: 'English (Botswana)', id: 'BW:en' },
              { title: 'English (Canada)', id: 'CA:en' },
              { title: 'English (Ethiopia)', id: 'ET:en' },
              { title: 'English (Ghana)', id: 'GH:en' },
              { title: 'English (India)', id: 'IN:en' },
              { title: 'English (Indonesia)', id: 'ID:en' },
              { title: 'English (Ireland)', id: 'IE:en' },
              { title: 'English (Israel)', id: 'IL:en' },
              { title: 'English (Kenya)', id: 'KE:en' },
              { title: 'English (Latvia)', id: 'LV:en' },
              { title: 'English (Malaysia)', id: 'MY:en' },
              { title: 'English (Namibia)', id: 'NA:en' },
              { title: 'English (Nigeria)', id: 'NG:en' },
              { title: 'English (New Zealand)', id: 'NZ:en' },
              { title: 'English (Pakistan)', id: 'PK:en' },
              { title: 'English (Philippines)', id: 'PH:en' },
              { title: 'English (Singapore)', id: 'SG:en' },
              { title: 'English (South Africa)', id: 'ZA:en' },
              { title: 'English (Tanzania)', id: 'TZ:en' },
              { title: 'English (Uganda)', id: 'UG:en' },
              { title: 'English (United Kingdom)', id: 'GB:en' },
              { title: 'English (Zimbabwe)', id: 'ZW:en' },
              { title: 'Bahasa Indonesia (Indonesia)', id: 'ID:id' },
              { title: 'Bahasa Melayu (Malaysia)', id: 'MY:ms' },
              { title: 'Čeština (Česko)', id: 'CZ:cs' },
              { title: 'Deutsch (Deutschland)', id: 'DE:de' },
              { title: 'Deutsch (Österreich)', id: 'AT:de' },
              { title: 'Deutsch (Schweiz)', id: 'CH:de' },
              { title: 'Español (Argentina)', id: 'AR:es-419' },
              { title: 'Español (Chile)', id: 'CL:es-419' },
              { title: 'Español (Colombia)', id: 'CO:es-419' },
              { title: 'Español (Cuba)', id: 'CU:es-419' },
              { title: 'Español (España)', id: 'ES:es-419' },
              { title: 'Español (Estados Unidos)', id: 'US:es-419' },
              { title: 'Español (México)', id: 'MX:es-419' },
              { title: 'Español (Perú)', id: 'PE:es-419' },
              { title: 'Español (Venezuela)', id: 'VE:es-419' },
              { title: 'Català (Espanya)', id: 'ES:ca' },
              { title: 'Français (Belgique)', id: 'BE:fr' },
              { title: 'Français (Canada)', id: 'CA:fr' },
              { title: 'Français (France)', id: 'FR:fr' },
              { title: 'Français (Maroc)', id: 'MA:fr' },
              { title: 'Français (Sénégal)', id: 'SN:fr' },
              { title: 'Français (Suisse)', id: 'CH:fr' },
              { title: 'Italiano (Italia)', id: 'IT:it' },
              { title: 'Latviešu (Latvija)', id: 'LV:lv' },
              { title: 'Lietuvių (Lietuva)', id: 'LT:lt' },
              { title: 'Magyar (Magyarország)', id: 'HU:hu' },
              { title: 'Nederlands (België)', id: 'BE:nl' },
              { title: 'Nederlands (Nederland)', id: 'NL:nl' },
              { title: 'Norsk (Norge)', id: 'NO:no' },
              { title: 'Polski (Polska)', id: 'PL:pl' },
              { title: 'Português (Brasil)', id: 'BR:pt-419' },
              { title: 'Português (Portugal)', id: 'PT:pt-150' },
              { title: 'Română (România)', id: 'RO:ro' },
              { title: 'Slovenčina (Slovensko)', id: 'SK:sk' },
              { title: 'Slovenščina (Slovenija)', id: 'SI:sl' },
              { title: 'Svenska (Sverige)', id: 'SE:sv' },
              { title: 'Tiếng Việt (Việt Nam)', id: 'VN:vi' },
              { title: 'Türkçe (Türkiye)', id: 'TR:tr' },
              { title: 'Ελληνικά (Ελλάδα)', id: 'GR:el' },
              { title: 'Български (България)', id: 'BG:bg' },
              { title: 'Русский (Россия)', id: 'RU:ru' },
              { title: 'Русский (Украина)', id: 'UA:ru' },
              { title: 'Српски (Србија)', id: 'RS:sr' },
              { title: 'Українська (Україна)', id: 'UA:uk' },
              { title: 'עברית (ישראל)', id: 'IL:he' },
              { title: 'العربية (الإمارات العربية المتحدة)', id: 'AE:ar' },
              { title: 'العربية (المملكة العربية السعودية)', id: 'SA:ar' },
              { title: 'العربية (لبنان)', id: 'LB:ar' },
              { title: 'العربية (مصر)', id: 'EG:ar' },
              { title: 'मराठी (भारत)', id: 'IN:mr' },
              { title: 'हिन्दी (भारत)', id: 'IN:hi' },
              { title: 'বাংলা (বাংলাদেশ)', id: 'BD:bn' },
              { title: 'বাংলা (ভারত)', id: 'IN:bn' },
              { title: 'தமிழ் (இந்தியா)', id: 'IN:ta' },
              { title: 'తెలుగు (భారతదేశం)', id: 'IN:te' },
              { title: 'മലയാളം (ഇന്ത്യ)', id: 'IN:ml' },
              { title: 'ไทย (ไทย)', id: 'TH:th' },
              { title: '中文 (中国)', id: 'CN:zh-Hans' },
              { title: '中文 (台灣)', id: 'TW:zh-Hant' },
              { title: '中文 (香港)', id: 'HK:zh-Hant' },
              { title: '日本語 (日本)', id: 'JP:ja' },
              { title: '한국어 (대한민국)', id: 'KR:ko' }
          ];
          var current_lang = formatContextItem(langs[0]);
          var lang_dropdown = create_dom_element('div', {
            className: 'search_context_dropdown bg-color',
          });

          current_lang = addContextSection(lang_dropdown, false, langs, 'language', context, {
            item_callback: function (e, item) {
              context.params.search_lang = item.id;
              context.params.tab = 'google_news';
              context.params.term = $('#searcher_input').val();
              document.getElementById('searcher_input').dataset.search_lang = context.params.search_lang;
              build_searcher_content(context.params);
            }
          }) || current_lang;

          var current_lang_context = create_dom_element('a', {
            className: 'flex search_context_section justify-between',
            href: 'javascript:void(0)',
            innerHTML:
              '<div class="flex search_context_current text-truncate">' +
              current_lang +
              '</div>   <i class="icon16 pointer_icon icon-arrow_down_small mr-2"></i>',
            onclick: dropdownClickHandler(search_context, 1)
          });

          var wrapperUrl = create_dom_element('div', {
            className: 'relative flex'
          });
          var wrapperLang = create_dom_element('div', {
            className: 'relative flex'
          });

          var separator = create_dom_element('div', {
            className: 'article-search-input-separator',
            innerHTML: '|'
          });

          wrapperUrl.appendChild(separator.cloneNode(true));
          wrapperUrl.appendChild(current_context);
          wrapperUrl.appendChild(search_dropdown);
          wrapperLang.appendChild(separator.cloneNode(true));
          wrapperLang.appendChild(current_lang_context);
          wrapperLang.appendChild(lang_dropdown);

          search_context.appendChild(wrapperUrl);
          search_context.appendChild(wrapperLang);

          top_bar_bottom.appendChild(search_context);
        }

        if(params.tab == 'feeds'){
            top_bar_bottom.classList.add('has_context');
            top_bar_bottom.classList.add('has_context_feeds');
            var search_context = create_dom_element('div', {
                className: 'search_dropdown flex',
                innerHTML: ''
            });

            var search_dropdown = create_dom_element('div', {
                className: 'search_context_dropdown bg-color',
            });

            var langs = [];
            langs.push({title: _js('All languages'), id: ''});
            for(var i in languages){
                langs.push({title: languages[i].name, id: languages[i].language_code})
            }

            var current_lang = formatContextItem(langs[0],false,false);

            var lang_dropdown = create_dom_element('div', {
              className: 'search_context_dropdown bg-color',
            });
            current_lang = addContextSection(lang_dropdown, false, langs, 'search_language', context, {
              item_callback: function (e, item) {
                context.params.search_language = item.id;
                set_searcher_language(item.id);
                $('.search_context_current').eq(0).html(formatContextItem(item, false, false));
                if($('#search_languages_tippy')[0]){
                    close_search_language_tippy(true);
                }
              }
            }) || current_lang;

            var current_lang_context = create_dom_element('a', {
              className: 'flex search_context_section justify-between',
              href: 'javascript:void(0)',
              innerHTML:
                '<div class="flex search_context_current text-truncate">' +
                current_lang +
                '</div>   <i class="icon16 pointer_icon icon-arrow_down_small mr-2"></i>',
              onclick: dropdownClickHandler(search_context, 0)
            });

            var wrapperLang = create_dom_element('div', {
              className: 'relative flex',
              id: 'search_language_flex_wrapper'
            });

            var separator = create_dom_element('div', {
              className: 'article-search-input-separator',
              innerHTML: '|'
            });

            wrapperLang.appendChild(separator.cloneNode(true));
            wrapperLang.appendChild(current_lang_context);
            wrapperLang.appendChild(lang_dropdown);
            search_context.appendChild(wrapperLang);
            top_bar_bottom.appendChild(search_context);

            if(!check_user_visit(32)){
                add_search_language_tippy();
            }
        }
    }

    fix_search_badges();
};

function add_mobilize_tippy(id){
    // TODO!!!
    if(is_beta !== 1){
        return;
    }
    var button_position = $('#mobilize_button_' + id).position().left;

    $('#translate_tippy').remove();
    $('#mobilize_tippy').remove();
    var tippy_content = '<div id="mobilize_tippy" class="search_languages_tippy mobilize_tippy flex">';
    tippy_content += '<div class="search_languages_tippy_left">';
    tippy_content += '<div class="search_languages_tippy_heading">' + _js('Good news!') + '</div>';
    tippy_content += '<div class="search_languages_tippy_text">' + _js('From now on, when you load full articles, they will be saved forever to your Pro account.') + '</div>';
    tippy_content += '<div class="search_languages_tippy_button"><a href="javascript:void(0);" onclick="close_mobilize_tippy(true);">' + _js('Got it') + '</a></div>';
    tippy_content += '</div>';
    tippy_content += '<div class="search_languages_tippy_image">';
    tippy_content += '<img src="/images/full_content_hint_' + get_theme_name() + '.svg">';
    tippy_content += '</div>';
    tippy_content += '</div>';
    $('#article_footer_' + id).find('.article_footer_main_buttons').append(tippy_content);
    $('#mobilize_tippy').css('top', $('#article_footer_' + id).outerHeight() + 8).css('left', button_position - 70);
}

function close_mobilize_tippy(set_user_visit){
    if(set_user_visit){
        set_user_visits(256);
    }
    $('#mobilize_tippy').remove();
}

function add_translate_tippy(id){
    // TODO!!!
    if(is_beta !== 1){
        return;
    }
    var button_position = $('#translate_button_' + id).position().left;

    $('#translate_tippy').remove();
    $('#mobilize_tippy').remove();
    var tippy_content = '<div id="translate_tippy" class="search_languages_tippy mobilize_tippy flex">';
    tippy_content += '<div class="search_languages_tippy_left">';
    tippy_content += '<div class="search_languages_tippy_heading">' + _js('Good news!') + '</div>';
    tippy_content += '<div class="search_languages_tippy_text">' + _js('From now on, when you translate articles, they will be saved forever to your Pro account.') + '</div>';
    tippy_content += '<div class="search_languages_tippy_button"><a href="javascript:void(0);" onclick="close_translate_tippy(true);">' + _js('Got it') + '</a></div>';
    tippy_content += '</div>';
    tippy_content += '<div class="search_languages_tippy_image">';
    tippy_content += '<img src="/images/translate_hint_' + get_theme_name() + '.svg">';
    tippy_content += '</div>';
    tippy_content += '</div>';
    $('#article_footer_' + id).find('.article_footer_main_buttons').append(tippy_content);
    $('#translate_tippy').css('top', $('#article_footer_' + id).outerHeight() + 8).css('left', button_position - 70);
}

function close_translate_tippy(set_user_visit){
    if(set_user_visit){
        set_user_visits(256);
    }
    $('#translate_tippy').remove();
}

function add_search_language_tippy(){
    // Don't show this tippy anymore
    return;
    $('#search_languages_tippy').remove();
    var tippy_content = '<div id="search_languages_tippy" class="search_languages_tippy flex">';
    tippy_content += '<div class="search_languages_tippy_left">';
    tippy_content += '<div class="search_languages_tippy_heading">' + _js('Good news!') + '</div>';
    tippy_content += '<div class="search_languages_tippy_text">' + _js('You can now limit search results to a specific language!') + '</div>';
    tippy_content += '<div class="search_languages_tippy_button"><a href="javascript:void(0);" onclick="close_search_language_tippy(true);">' + _js('OK, Got it') + '</a></div>';
    tippy_content += '</div>';
    tippy_content += '<div class="search_languages_tippy_image">';
    tippy_content += '<img src="/images/search_language_hint_' + get_theme_name() + '.svg">';
    tippy_content += '</div>';
    tippy_content += '</div>';
    $('#searcher_div').append(tippy_content);
    $('#search_languages_tippy').css('top', $('#searcher_div').outerHeight() + 8);
}

function close_search_language_tippy(set_user_visit){
    if(set_user_visit){
        set_user_visits(32);
    }
    $('#search_languages_tippy').remove();
}

function dropdownClickHandler(parent_el, idx) {
  if(!idx)
    idx = 0
  return function (event) {
    $('#search_languages_tippy').remove(false);

    var el = parent_el.getElementsByClassName('search_context_dropdown').item(idx);
    document.body.removeEventListener('click', closeSearchContextDropdown);

    if(!el)
      return false;

    if(el.classList.contains('open')) {
      el.classList.remove('open')
    } else {
      closeSearchContextDropdown();
      document.body.addEventListener('click', closeSearchContextDropdown)
      el.classList.add('open')
      event.stopPropagation();

      var el_height = el.offsetHeight;
      var pos_top = el.getBoundingClientRect().top;
      var window_height = window.innerHeight - document.getElementById('subscriptions_buttons').offsetHeight;
      if(document.getElementById('footer')){
        window_height -= document.getElementById('footer').offsetHeight;
      }

      if(el_height + pos_top > window_height){
        el.style.maxHeight = (window_height - pos_top + 8) + 'px';
        // el.style.minHeight = (window_height - pos_top + 8) + 'px';
      }
    }
  }
}

function checkEmptyContexts (search_dropdown) {
  var sections = ['subscription', 'folder', 'tag', 'active_search', 'system_folder']
  //check for empty sections
  for (var i=0; i < sections.length; i++) {
    var section = sections[i];
    var count = $('.search_context_filter_'+section+':not(.hidden)').length
    if ( count === 0) {
      search_dropdown.classList.add('empty-' + section)
    } else {
      search_dropdown.classList.remove('empty-' + section)
    }
  }
}

function closeSearchContextDropdown (e) {
    // console.log(e);
    var el = document.getElementsByClassName('search_context_dropdown').item(0);
    if(!el)
      return false;
    if(!e || !el.contains(e.target)) {
        $('.search_context_dropdown').removeClass('open');
    }
};

function formatContextItem(item, global, from_language_search) {
    var pro_shield = '';
    var img = item.img ? '<img class="feed_favicon" src="' + item.img + '" />' :
      '<span class="' + item.icon + '" /></span>';

    if(global === true) {
      img = '<span class="feed_favicon icon16 icon-search-tab-public-articles"></span>';
      if (!user_access[access_pro]) {
         pro_shield = '<span class="icon14 icon-shield icon-yellow"' +
          ' title="' + _js('This feature is only available to Pro users') + '"></span>';
      }
    }

    if (from_language_search && !user_access[access_pro]) {
       pro_shield = '<span class="icon14 icon-shield icon-yellow"' +
        ' title="' + _js('This feature is only available to Pro users') + '"></span>';
    }

  return '<div class="flex">' + img + ' <span class="text-truncate articles-search-input-filter" title="' + fix_tag_name(item.title) + '">' + fix_tag_name(item.title) + pro_shield +'</span></div>';
}

function addContextSection(el, title, items, filter_type, context, params) {
    var current_item;
    if(!params) {
      params = {
        item_class: 'search_context_filter_' + filter_type
      }
    }

    if(!params.item_class) {
      params.item_class = 'search_context_filter_' + filter_type
    }

    if(items) {
        el.appendChild(create_dom_element('div', {
            className: "inno_toolbar_button_menu_line " + params.item_class + '_footer'
        }));
        title && el.appendChild(create_dom_element('div', {
            innerHTML: title,
            className: 'inno_toolbar_button_menu_heading ' + params.item_class + '_header'
        }));
        for (var i=0;i<items.length;i++) {
            var sub = items[i];
            var is_current = false

            if(context.params.search_options == 4) {
                var current_filter = document.getElementById('search_content_filters_search_feed_popularity').value;
                is_current = current_filter.toString() === sub.id.toString();
            }else{
                is_current = false;
                var current_filter = document.getElementById('search_content_filters_filter_type').value;
                if(current_filter == sub.id || current_filter == filter_type + '_' + sub.id){
                    is_current = true;
                }
            }

            if(context.params.tab === 'reddit') {
              is_current = context.params.sort_reddit === sub.id;
            }

            if(context.params.tab === 'google_news') {
              is_current = context.params.search_lang === sub.id;
            }

            if(filter_type === 'search_language') {
              is_current = feed_params.search_language === sub.id;
            }
            if(context.params.tab === 'feeds') {
              is_current = feed_params.search_language === sub.id;
            }

            var class_name = 'flex text-truncate parent_div search_context_filter flex justify-content-between' + (is_current ? ' active':'');
            class_name += ' ' + params.item_class;
            el.appendChild(create_dom_element('div', {
                innerHTML: formatContextItem(sub) + (is_current ? '<span class="icon16 icon-checkmark"></span>':''),
                className: class_name,
                title: fix_tag_name(sub.title),
                onclick: (function() {
                  var sub = items[i];
                  return function (event) {
                    closeSearchContextDropdown();

                    if(params.item_callback) {
                      return params.item_callback(event, sub);
                    }

                    var switch_tab = false;
                    if(sub.id === '0' || sub.id === '1' || sub.id === '2'){
                      if(context.params.search_options != 4){
                        switch_tab = 'global';
                        context.params.search_options = 4;
                      }
                    }else{
                      if(context.params.search_options == 4){
                        switch_tab = 'subscriptions';
                        context.params.search_options = 1;
                      }
                    }

                    $('.search_context_current').eq(0).html(formatContextItem(sub, context.params.search_options === 4 && filter_type != 'search_language', filter_type == 'search_language'));

                    if(context.params.search_options === 4) {
                      $('#search_content_filters_search_feed_popularity').val(sub.id);
                      if(switch_tab){
                        switch_search_filter_feed_popularity = sub.id;
                        switch_searcher_tab(switch_tab);
                      }else{
                        $('#search_content_filters_search_feed_popularity').trigger('change');
                      }
                    } else {
                      $('#search_content_filters_filter_type').val(filter_type ? filter_type + '_' + sub.id : sub.id);
                      if(switch_tab){
                        switch_search_filter_filter = filter_type ? filter_type + '_' + sub.id : sub.id;
                        switch_searcher_tab(switch_tab);
                      }else{
                        $('#search_content_filters_filter_type').trigger('change');
                      }
                    }
                  }
                })()
            }));

            if(is_current) {
                current_item = formatContextItem(sub, context.params.search_options === 4 && filter_type != 'search_language', filter_type == 'search_language' && (context.params.tab == 'subscriptions' || context.params.tab == 'global'));
            };
        }
    }
    return current_item;
}

function build_welcome_categories(){

    var featured_content = document.getElementById('welcome_featured');
    featured_content.innerHTML = ''

    for(var i in catalogs){
        featured_content.appendChild(create_dom_element('div', {
            className: 'featured_category',
            innerHTML: catalogs[i].title,
            dataset: {id: catalogs[i].id},
            style: {backgroundImage: 'url("' + catalogs[i].mobile_image_2x + '")'},
            onclick: function(){ open_searcher({tab: 'feeds', section_id: this.dataset.id}); }
        }));
    }
}

function build_searcher_feeds(params){
    var search_content = document.getElementById('search_content');
    search_content.innerHTML = '';

    if(!params){
        var catalog_init_heading = create_dom_element('div', {
            className : 'catalog_init_heading search_width_constraint',
            innerHTML : _js('Or try our featured collections')
        });
        search_content.appendChild(catalog_init_heading);

        var catalog_init_sections = create_dom_element('div', {
            className : 'catalog_init_sections search_width_constraint'
        });

        for(var i in catalogs){
            catalog_init_sections.appendChild(create_dom_element('div', {
                className: 'featured_category',
                innerHTML: catalogs[i].title,
                dataset: {id: catalogs[i].id},
                style: {backgroundImage: 'url("' + catalogs[i].mobile_image_2x + '")'},
                onclick: function(){ open_searcher({tab: 'feeds', section_id: this.dataset.id}); }
            }));
        }

        search_content.appendChild(catalog_init_sections);

    }else{
        for(var i in catalogs){
            if(params.section_id == catalogs[i].id){
                section_title = catalogs[i].title;
                sub_sections = catalogs[i].sub_catalogs;
            }
        }

        var catalog_new_top = create_dom_element('div', {
            className : 'catalog_new_top'
        });

        var catalog_new_top_heading = create_dom_element('div', {
            className : 'catalog_new_top_heading search_width_constraint flex',
            innerHTML : '<a href="javascript:void(0);" onclick="open_searcher();" class="catalog_new_top_back_icon"><span class="icon16 icon-preferences-back-arrow"></span></a> <div><a href="javascript:void(0);" onclick="open_searcher();">' + section_title + '</a></div>'
        });

        catalog_new_top.appendChild(catalog_new_top_heading);
        search_content.appendChild(catalog_new_top);

        var catalog_hero_sub_sections = create_dom_element('div', {
            className : 'catalog_sub_sections search_width_constraint'
        });
        search_content.appendChild(catalog_hero_sub_sections);

        var sub_section_id = 0;
        var sub_section_title = '';
        if(sub_sections != null){
            for(var i in sub_sections){
                if(!params.sub_section_id){
                    params.sub_section_id = sub_sections[i].id; // focus first
                }
                var extra_class = (params.sub_section_id == sub_sections[i].id) ? ' catalog_sub_section_tab_current' : '';
                catalog_hero_sub_sections.appendChild(create_dom_element('div', {
                    className: 'catalog_sub_section_tab' + extra_class,
                    innerHTML: sub_sections[i].title,
                    dataset: {id: sub_sections[i].id, section: params.section_id },
                    onclick: function(){ build_searcher_feeds({tab: 'feeds', section_id: this.dataset.section, sub_section_id: this.dataset.id}) }
                }));

                if(params.sub_section_id == sub_sections[i].id){
                    sub_section_id = sub_sections[i].id;
                    sub_section_title = sub_sections[i].title;
                }
            }
        }

        var sub_section_title_wrapper = create_dom_element('div', {
            className : 'search_width_constraint'
        });

        sub_section_title_wrapper.appendChild(create_dom_element('div', {
            className : 'catalog_sub_section_title',
            innerHTML : sub_section_title
        }));

        search_content.appendChild(sub_section_title_wrapper);

        search_content.appendChild(create_dom_element('div', {
            className : 'search_width_constraint',
            id : 'catalog_content'
        }));

        params.tab = 'feeds';
        params.offset = 0;
        params.sub_section_id = sub_section_id;
        params.search_language = feed_params.search_language;
        build_searcher_content(params);

        feeds_searcher_previous_tab = 'feeds';
    }

}

function build_searcher_more_menu(items,el){
    setTimeout(function(){
        if($('#list_menu')[0]){
            $('#list_menu').remove();
        }

        var menu = [];
        n = 0;

        for(var i in items){
            var shield_icon = '';
            if(!user_access[access_pro] && (i == 'global' || i == 'twitter' || i == 'facebook_pages')){
                shield_icon = ' <span class="icon14 icon-shield icon-yellow" title="' + _js('This feature is only available to Pro users') + '"></span>';
            }

            menu[n++] = {type: 'link', text: items[i] + shield_icon, click: "switch_searcher_tab('" + i + "');"};
        }

        document.body.appendChild(inno_toolbar_button(false,false,'',menu));
        if(direction == 'ltr'){
            $('#list_menu').css('top',($(el).offset().top+$(el).outerHeight()) + 'px').css(float_right,($(document).width() - $(el).offset().left - $(el).width()) + 'px').css(float_left,'auto').show();
        }else{
            $('#list_menu').css('top',($(el).offset().top+$(el).height()) + 'px').css('left',($(el).offset().left) + 'px').css('right','auto').show();
        }

        opened_menu = 'list';
        fix_menu_position('#list_menu');
        $('#list_menu').addClass('searcher_tabs_menu');
    },1);
}

function init_articles_search(term,is_global_search){
    seen_ids_hash = '';

    if(is_global_search){
        search_options = 4;
    }else{
        search_options = 1;
    }

    if(switch_search_filter_feed_popularity !== null){
        search_feed_popularity = switch_search_filter_feed_popularity;
        switch_search_filter_feed_popularity = null;
    }

    set_feed_param('filter_type','search');
    set_feed_param('filter_id','0');
    set_feed_param('search_term',term);
    set_feed_param('search_options',search_options);
    set_feed_param('search_filters',search_filters);
    set_feed_param('search_match',search_match);
    set_feed_param('search_feed_popularity',search_feed_popularity);
    set_feed_param('search_order',search_order);
    set_feed_param('search_range',search_range);
    set_feed_param('search_language',search_language);
    set_feed_param('seen_ids',false);
    set_feed_param('view_style',view_style_search);
    view_style = view_style_search;


    if(switch_search_filter_filter !== null){
        if(switch_search_filter_filter != ''){
            var switch_search_filter_filter_expl = switch_search_filter_filter.split(/_/);
            set_feed_param('search_filter_type',switch_search_filter_filter_expl[0]);
            set_feed_param('search_filter_id',switch_search_filter_filter_expl[1]);
        }
        switch_search_filter_filter = null;
    }

    if(search_range_from > 0){
        set_feed_param('search_range_from',search_range_from);
    }
    if(search_range_to > 0){
        set_feed_param('search_range_to',search_range_to);
    }

    clear_racing_xajax_requests();
    // feed_params.filter_open = !$('.search_content_filters_wrapper').hasClass('hidden');
    xajax_print_articles(false,0,feed_params);
}

function switch_searcher_tab(tab){
    discovery_params.offset = 0;
    discovery_params.tab = tab;
    discovery_params.section_id = 0;
    build_searcher(discovery_params);
    if(tab == 'global'){
        search_options = 4;
    }else{
        search_options = 1;
    }
}

function set_search_filters(local_search_options,force_range,el){
    search_options = local_search_options;
    var search_filter_type_full = $('#search_content_filters_filter_type').val();
    var filters = {};

    filters.search_options = local_search_options;
    filters.search_filters = ($('#search_content_filters_search_filters')[0]) ? $('#search_content_filters_search_filters').val() : search_filters;
    filters.search_match = ($('#search_content_filters_search_match')[0]) ? $('#search_content_filters_search_match').val() : search_match;
    filters.search_order = ($('#search_content_filters_search_order')[0]) ? $('#search_content_filters_search_order').val() : search_order;
    filters.search_range = ($('#search_content_filters_search_range')[0]) ? $('#search_content_filters_search_range').val() : search_range;
    filters.search_language = ($('#search_content_filters_language')[0]) ? $('#search_content_filters_language').val() : search_language;

    filters.view_style = $('[name=searchViewStyle]:checked').val() || view_style_search;
    if(filters.view_style != view_style_search){
        filters.view_style_change = 1;
        view_style_search = filters.view_style;
    }

    if(filters.search_range == '6' && !force_range && el && el.id == 'search_content_filters_search_range'){
        set_search_range();
        return;
    }

    if(local_search_options == 4){
        var current_tab = 'global';
        filters.search_feed_popularity = $('#search_content_filters_search_feed_popularity').val();
    }else{
        var current_tab = 'subscriptions';
        if(search_filter_type_full.indexOf('folder_') === 0 || search_filter_type_full.indexOf('subscription_') === 0 || search_filter_type_full.indexOf('team_') === 0){
            search_filter_exploded = search_filter_type_full.split(/\_/);
            filters.search_filter_type = search_filter_exploded[0];
            filters.search_filter_id = search_filter_exploded[1];
        }else{
            filters.search_filter_type = search_filter_type_full;
            filters.search_filter_id = '';
        }
    }

    if(search_range_from > 0){
        set_feed_param('search_range_from',search_range_from);
    }
    if(search_range_to > 0){
        set_feed_param('search_range_to',search_range_to);
    }

    prev_search_range = search_range;

    set_feed_param('filter_type','search');
    set_feed_param('filter_id','0');
    set_feed_param('seen_ids',[]);

    for(var i in filters){
        set_feed_param(i,filters[i]);
        if(i != 'search_filter_type' && i != 'search_filter_id'){
            createCookie(i, filters[i], 365);
            window[i] = filters[i];
        }
    }

    // Because it retains the old view styles
    for(var i=0; i<=4; i++){
        $('body').removeClass('view_style_' + i);
    }

    clear_racing_xajax_requests();
    $('#searcher_div').addClass('searching');
    feed_params.filter_open = !$('.search_content_filters_wrapper').hasClass('hidden');

    if(el == document.getElementById('search_content_filters_language')){
        feeds_searcher_previous_value = null;
        searcher_term_handler(document.getElementById('searcher_input'), {section_id: 0, sub_section_id: 0, tab: current_tab, term: document.getElementById('searcher_input').value}, null);
        rebuild_search_context(current_tab);
    }else{
        xajax_print_articles(false,0,feed_params);
    }

    delete_feed_param("view_style_change");
}

function fix_search_selects(params){
    if(params.search_options == 4){
        if(params.search_feed_popularity){
            $('#search_content_filters_search_feed_popularity').val('' + params.search_feed_popularity);
        }
    }else{
        if(params.search_filter_type){
            if(params.search_filter_type == 'starred' ||
               params.search_filter_type == 'annotated' ||
               params.search_filter_type == 'web_pages' ||
               params.search_filter_type == 'tags' ||
               params.search_filter_type == 'channel' ||
               params.search_filter_type == 'teams'){
                $('#search_content_filters_filter_type').val(params.search_filter_type);
            }else{
                $('#search_content_filters_filter_type').val(params.search_filter_type + '_' + params.search_filter_id);
            }
        }
    }

    $('#search_content_filters_search_filters').val('' + params.search_filters);
    $('#search_content_filters_search_match').val('' + params.search_match);
    $('#search_content_filters_search_order').val('' + params.search_order);
    $('#search_content_filters_search_range').val('' + params.search_range);
    $('#search_content_filters_language').val('' + params.search_language);

    var section_str = $('#search_content_filters_filter_type option:selected').text();
    if(section_str){
        var found_num = $('#search_content_found').data('found');
        var found_exact = $('#search_content_found').data('found-exact');

        if(parseInt(found_num) == 0){
            var found_str = sprintf(_js('No results in %s'),'<b>' + section_str + '</b>');
        }else{
            var found_num_txt = found_num;
            if(parseInt(found_num) > 0 && parseInt(found_exact) == 0){
                found_num_txt += '+';
            }
            var found_str_fragment = __js("Found %s article", "Found %s articles", found_num_txt);
            var found_str = sprintf(_js("%s in %s"), found_str_fragment, '<b>' + section_str + '</b>');
        }
        $('#search_content_found').html(found_str);
    }
}

function fix_search_view_style(style){
    $('#reader_pane_articles_search_result').removeClass('reader_pane_view_style_0');
    $('#reader_pane_articles_search_result').removeClass('reader_pane_view_style_1');
    $('#reader_pane_articles_search_result').removeClass('reader_pane_view_style_2');
    $('#reader_pane_articles_search_result').removeClass('reader_pane_view_style_3');
    $('#reader_pane_articles_search_result').removeClass('reader_pane_view_style_4');
    $('#reader_pane_articles_search_result').addClass('reader_pane_view_style_' + style);
}

function fix_search_badges(){
    var $labels = $('.search_dropdown').find('.search_context_current');
    $('#search_content_heading_badge_filter_type').html($labels.first().html());
    $('#search_content_heading_badge_language').html($labels.last().html());
    $('#no_results_section_name').html($labels.first().find('.articles-search-input-filter').eq(0).html());
    $('#no_results_language').html($('#search_content_filters_language option:selected').text());
}

function reset_search_fitlers(local_search_options){
    $('#search_content_filters_filter_type').val('');
    $('#search_content_filters_search_filters').val('0');
    $('#search_content_filters_search_match').val('0');
    $('#search_content_filters_search_order').val('0');
    if(local_search_options == 4){
        $('#search_content_filters_search_feed_popularity').val('0');
        $('#search_content_filters_filter_type').val('0');
    }else{
        $('#search_content_filters_filter_type').val('');
    }
    $('#search_content_filters_search_range').val('4');
    $('#search_content_filters_language').val('');
    set_search_filters(local_search_options);
}

function global_search_nag_counter(el_id){
    if(!el_id)
      el_id = '#global_search_nag_articles_grand_total';
    var $span = $(el_id);
    if($span[0]){
        setTimeout(function(){
            var count = $span.data('count');
            var articles_per_second = $span.data('aps');
            var new_count = parseFloat(count + articles_per_second);
          // console_log(count, articles_per_second);

          $span.data('count',new_count);
            new_count = number_format(new_count);
            $span.html(new_count);
            global_search_nag_counter(el_id);
        },1000);
    }
}

function pricing_init_payment(access_id,forced_period){
    var params = {access: access_id};
    if(forced_period){
        params.period = forced_period;
    }else{
        params.period = ($('#pricing_table_main').hasClass('pricing_table_main_yearly')) ? 'annual' : 'monthly';
    }
    params.promo_code = $('#pricing_table_main').data('code');
    window.lastPaymentDialogParams = params;
    dialog('upgrade_dialog', params);
}

function pricing_cancel_promo_code(){
    $('#pricing_discount_input').val('');
    xajax_applyDiscount(null,0,'pricing_page');
    delete upgrade_params.promo_code;
    // view_upgrade();
}

function pricing_apply_promo_code(code){
    var code = $('#pricing_discount_input').val();
    if(!code){
        return;
    } else {
      xajax_applyDiscount(code,access_pro,'pricing_page');
    }

}

function pricing_apply_promo_code_callback(code){
    if(!upgrade_params){
        upgrade_params = {};
    }
    upgrade_params.promo_code = code;
    view_upgrade(upgrade_params);
}

function set_user_visits(bit){
    if(check_user_visit(bit)){
        return;
    }
    user_visits += bit;

    xajax_save_user_pref('user_visits',user_visits);
}

function check_user_visit(bit){
    return (user_visits & bit) ? true : false;
}

function cleanup_newsletter_slug(slug){
    slug = slug.replace(/\s+/gi, '');
    slug = slug.toLowerCase();
    slug = transliterate_cyr(slug);
    slug = slug.replace(/[^0-9a-z]/gi, '');
    if(slug.length > 20){
        slug = slug.substr(0, 20);
    }
    return slug;
}

function suggest_newsletter_slug(value){
    var slug = cleanup_newsletter_slug(value);

    if(slug.length < 5){
        $('#newsletter_email').val('');
        check_newsletter_full_email();
        return;
    }

    $('#newsletter_email').val(slug);
    check_newsletter_full_email();
    check_newsletter_slug(slug);
}

function check_newsletter_slug(slug){
    if(current_xajax_requests.check_newsletter_slug){
        xajax.abortRequest(current_xajax_requests.check_newsletter_slug);
        current_xajax_requests.print_articles = null;
    }

    xajax_check_newsletter_slug(slug);
}

function check_newsletter_full_email(){
    var val = $('#newsletter_email').val();
    if(val && val.length >= 5){
        $('#newsletter_email_full').val(val + '@ino.to');
    }else{
        $('#newsletter_email_full').val('');
    }
}

function save_newsletter(form){
  var post = xajax.getFormValues(form);
  if(post.newsletter_name == ''){
        xalert(_js('Please enter newsletter name.'));
        return false;
    }

    if(post.newsletter_email_full == ''){
        xalert(_js('Please use at least 5 characters for the custom email address.'));
        return false;
    }

    do_loading();
    disable_dialog_button('newsletter_dialog');
    xajax_save_newsletter(post);
}

function check_newsletter_slug_input(e){
    var c = String.fromCharCode(e.which)
    if(/[^0-9a-z]/.test(c)){
        return false;
    }

    check_newsletter_full_email();
    return true;
}

function newsletter_copy_email(){
    var text = $('#newsletter_email_full').val();
    if(!text){
        xalert(_js('Email is not complete and cannot be copied.'));
        return false;
    }

    var input = create_dom_element('input', { value: text });
    document.body.appendChild(input);
    input.select();
    var result = document.execCommand('copy');
    document.body.removeChild(input);
    return result;
}

function convert_mail2tag(tag_id, step){
    dialog('convert_mail2tag_dialog', {tag_id: tag_id, step: parseInt(step)});
}

function set_locale(locale){
    do_loading();
    xajax_save_user_pref('locale',locale,'set_locale_callback();');
}

function set_locale_callback(){
    dialog('preferences_dialog',{show_refresh_warning: true, set_category:'preferences_interface',ajax:false});
}

function switch_preferences_subscriptions_tab(tab_id){
    if(tab_id == 'preferences_subscriptions_subscriptions'){
        // console.trace();
        // var params = {};
        // params.subscriptions_list_filter = feed_params.subscriptions_list_filter;
        // params.subscriptions_list_folder_id = feed_params.subscriptions_list_folder_id;
        // params.subscriptions_list_feed_type = feed_params.subscriptions_list_feed_type;
        // params.subscriptions_list_limit = feed_params.subscriptions_list_limit;
        // params.subscriptions_list_view_urls = feed_params.subscriptions_list_view_urls;
        // params.subscriptions_list_order = feed_params.subscriptions_list_order;
        // params.subscriptions_list_asc = feed_params.subscriptions_list_asc;
        // // xajax_fill_dialog_async('preferences_subscriptions', params);
    }else if(tab_id == 'preferences_subscriptions_folders'){
        xajax_fill_dialog_async('preferences_folders');
    }else if(tab_id == 'preferences_subscriptions_tags'){
        xajax_fill_dialog_async('preferences_tags');
    }else if(tab_id == 'preferences_subscriptions_system_folders'){
        xajax_fill_dialog_async('preferences_system_folders');
    }
}

function switch_preferences_interface_tab(tab_id){
}

function switch_preferences_behaviour_tab(tab_id){
    if(tab_id == 'preferences_behaviour_article_translations'){
        activate_article_translate_from_input();
    }
}

function check_all_subscriptions(check){
    $('.subscription_checks').prop('checked', check);
    check_marked_subscriptions_count();
}

function check_signout_from_all_visibility(value){
    if(value){
        $('#password_change_check_tokens_wrapper').show();
    }else{
        $('#password_change_check_tokens_wrapper').hide();
    }
}

function toggle_integrations_row(id){
    $('.integration_expanded').not($('#integration_row_' + id)).each(function(){
        $(this).toggleClass('integration_expanded');
        $(this).find('.integrations_expand_arrow').toggleClass('icon-expand-arrow').toggleClass('icon-collapse-arrow');
    });

    $('#integration_row_' + id).toggleClass('integration_expanded');
    $('#integration_row_' + id).find('.integrations_expand_arrow').toggleClass('icon-expand-arrow').toggleClass('icon-collapse-arrow');
}

function save_youtube_subscriptions_sync(){
    var form = {};
    form.youtube_subscriptions_sync = ($('#youtube_subscriptions_sync').is(':checked')) ? 1 : 0;
    form.youtube_subscriptions_sync_folder_id = $('#youtube_subscriptions_sync_folder_id').val();
    form.youtube_subscriptions_sync_new_folder_name = $('#youtube_subscriptions_sync_new_folder_name').val();

    if(form.youtube_subscriptions_sync_folder_id == -1 && !form.youtube_subscriptions_sync_new_folder_name){
        xalert(_js("Please enter folder name"),0,'$(\'#youtube_subscriptions_sync_new_folder_name\').focus().select();');
        return false;
    }

    do_loading();
    xajax_save_youtube_subscriptions_sync(form);
}

function opml_export(type){
    var url = '/reader/subscriptions/export?download=1';
    if(type == 1){
        url += '&file_type=zip';
    }

    document.location.href = url;
}

function toggle_digest(id,check){
    do_loading();
    xajax_toggle_digest(id,check);
}

function cancel_auto_renew(context, resume){
   if(!resume) {
     dialog('cancel_renew_dialog', {context: context, resume: resume});
   } else {
     cancel_auto_renew_execute(context,resume);
     // xconfirm(_js("Are you sure?"),';cancel_auto_renew_execute("' + context + '",'+resume+');');
   }
}

function cancel_auto_renew_execute(context, resume){
    do_loading();
    xajax_canceled_rebilling(context, resume);
}

function start_whats_new(force){
    // Stop what's new
    return;
    if(user_registered_on > 1634802798 && !force){
        return;
    }

    if($('#invite_friend_dialog')[0]){
        return;
    }

    if($('#onboard_dialog')[0]){
        return;
    }

    var consent = readCookie('goodnewseveryone');
    if((consent == 1 || check_user_visit(16)) && !force){
        return;
    }
    var theme_name = 'aqua';
    if(theme == 2){
        theme_name = 'light';
    }else if(theme == 3){
        theme_name = 'sepia';
    }else if(theme == 4){
        theme_name = 'dark';
    }

    var params = {};
    params.content = '<div id="whats_new_wrapper" class="whats_new_card_active_1" data-current="1">';

    params.content += '<div class="whats_new_card" id="whats_new_card1" style="background-image:url(/images/whats-new-cards/sidebar-release/01-welcome-' + theme_name + '.png)">';
    params.content += '<div class="whats_new_card_title">Introducing a few updates</div>';
    params.content += '<div class="whats_new_card_text gray">In the last months, our team has been quite busy working on some significant changes. Here are a few updates that will help you to take back control of your news feed</div>';
    params.content += '<div class="whats_new_card_button"><button style=\"min-width:150px;\" class="bluebutton" onclick="move_whats_new_card(\'next\')">Explore what\'s new</button></div>';
    params.content += '</div>';

    params.content += '<div class="whats_new_card" id="whats_new_card2" style="background-image:url(/images/whats-new-cards/sidebar-release/02-sidebar-' + theme_name + '.png)">';
    params.content += '<div class="whats_new_card_title">Sidebar visual refresh</div>';
    params.content += '<div class="whats_new_card_text gray">Our sidebar got some much-needed refresh and is now easier to navigate and more logically organized. We\'ve also prepared a compact view that you can turn on from Settings.</div>';
    params.content += '<div class="whats_new_card_button"><button style=\"min-width:150px;\" class="bluebutton" onclick="move_whats_new_card(\'next\')">Next</button></div>';
    params.content += '</div>';

  params.content += '<div class="whats_new_card" id="whats_new_card3" style="background-image:url(/images/whats-new-cards/sidebar-release/06-add-new-' + theme_name + '.png)">';
  params.content += '<div class="whats_new_card_title">New content at your fingertips</div>';
  params.content += '<div class="whats_new_card_text gray">It is now easier than ever to add a new feed - be it RSS, Facebook Page, Reddit, Twitter feed or a Newsletter.</div>';
  params.content += '<div class="whats_new_card_button"><button style=\"min-width:150px;\" class="bluebutton" onclick="move_whats_new_card(\'next\')">Next</button></div>';
  params.content += '</div>';


    params.content += '<div class="whats_new_card" id="whats_new_card4" style="background-image:url(/images/whats-new-cards/sidebar-release/03-library-' + theme_name + '.png)">';
    params.content += '<div class="whats_new_card_title">Introducing Library</div>';
    params.content += '<div class="whats_new_card_text gray">The new library section will hold all your most valuable content that you\'ve interacted with in a neat dashboard-like view.</div>';
    params.content += '<div class="whats_new_card_button"><button style=\"min-width:150px;\" class="bluebutton" onclick="move_whats_new_card(\'next\')">Next</button></div>';
    params.content += '</div>';


    params.content += '<div class="whats_new_card" id="whats_new_card5" style="background-image:url(/images/whats-new-cards/sidebar-release/04-automation-' + theme_name + '.png)">';
    params.content += '<div class="whats_new_card_title">Your Automation tools have a new home</div>';
    params.content += '<div class="whats_new_card_text gray">Monitored Keywords, Rules, Filters, Highlighters now live in the sidebar for more convenience and quicker access.</div>';
    params.content += '<div class="whats_new_card_button"><button style=\"min-width:150px;\" class="bluebutton" onclick="move_whats_new_card(\'next\')">Next</button></div>';
    params.content += '</div>';

    params.content += '<div class="whats_new_card" id="whats_new_card6" style="background-image:url(/images/whats-new-cards/sidebar-release/05-feedback-' + theme_name + '.png)">';
    params.content += '<div class="whats_new_card_title" >You are ready to take back control of your news feed!</div>';
    params.content += '<div class="whats_new_card_text gray" >We\'ll be happy to hear back from you - join our Discord server if you have any thoughts or issues with these updates.</div>';
    params.content += '<div class="whats_new_card_button"><button style=\"margin-right: 16px;\" class="bluebutton bluebutton_outline" onclick="window.open(\'https://ino.to/discord\')">Join our Discord chat</button>';
    params.content += '<button class="bluebutton" onclick="close_whats_new();">Thanks, Got it</button></div>';
    params.content += '</div>';


    params.content += '<div class="whats_new_cards_bottom_buttons">';

    for(var i = 1; i <= 6; i++){
        params.content += '<div class="wnc_button" id="wnc_button_' + i + '" onclick="move_whats_new_card(' + i + ')"></div>';
    }
    params.content += '</div>';
    params.content += '</div>';

    dialog('whats_new_dialog', params);

    var dialog_helpers_left_bg = document.createElement('div');
    dialog_helpers_left_bg.className = 'article_helper_left_bg';
    $('#whats_new_dialog_wrapper').append(dialog_helpers_left_bg);

    var dialog_helpers_left = document.createElement('div');
    dialog_helpers_left.className = 'article_helper_left';
    $('#whats_new_dialog_wrapper').append(dialog_helpers_left);

    $(dialog_helpers_left).on('click',function(){
        move_whats_new_card('prev');
    }).disableSelection();
    $(dialog_helpers_left).animate({left: -70}, 500, 'easeOutQuint');

    var dialog_helpers_right = document.createElement('div');
    dialog_helpers_right.className = 'article_helper_right';
    $('#whats_new_dialog_wrapper').append(dialog_helpers_right);

    $(dialog_helpers_right).on('click',function(){
        move_whats_new_card('next');
    }).disableSelection();
    $(dialog_helpers_right).animate({right: -70}, 500, 'easeOutQuint');
}

function move_whats_new_card(op){
    var current = parseInt($('#whats_new_wrapper').data('current'));
    if(op == 'next'){
        if(current == 6){
            return;
        }
        $('#whats_new_wrapper').removeClass().addClass('whats_new_card_active_' + ++current).data('current', current)
    }else if(op == 'prev'){
        if(current == 1){
            return;
        }
        $('#whats_new_wrapper').removeClass().addClass('whats_new_card_active_' + --current).data('current', current);
    }else if(parseInt(op) > 0){
        $('#whats_new_wrapper').removeClass().addClass('whats_new_card_active_' + parseInt(op)).data('current', parseInt(op));
    }
}

function close_whats_new(){
    inno_dialog_close('whats_new_dialog');
}

function set_current_hl(id){
    $('.hl_dialog_color').removeClass('hl_current');
    $('#hl_dialog_color_' + id).addClass('hl_current');
    $('#hl_color_id').val(id);
}

function custom_css_handler(e){
    if(e.keyCode == 9 || e.which == 9){
        var el = document.getElementById('preference_custom_css');
        e.preventDefault();
        var s = el.selectionStart;
        el.value = el.value.substring(0, el.selectionStart) + "\t" + el.value.substring(el.selectionEnd);
        el.selectionEnd = s + 1;
    }
}

function save_custom_css(){
    var css = $('#preference_custom_css').val();
    var enabled = ($('#preference_custom_css_enabled').is(':checked')) ? true : false;
    do_loading();
    xajax_save_custom_css(css,enabled);
}

function check_custom_css_onload(){

}

function toggle_preferences_advanced_power(){
    if($('#preferences_advanced_power').css('visibility') == 'hidden'){
        $('#preferences_advanced_power').css('visibility', 'visible');
        $('#preferences_advanced_switch').find('.icon19').css('display', 'inline-block');
        $('#preferences_advanced_switch').find('.icon19').css('transform', 'rotate(180deg)');
    }else{
        $('#preferences_advanced_power').css('visibility', 'hidden');
        $('#preferences_advanced_switch').find('.icon19').css('transform', '');
    }
}

function check_custom_css_textarea(){
    if($('#preference_custom_css_enabled').is(':checked')){
        $('#preference_custom_css').prop('disabled', false);
    }else{
        $('#preference_custom_css').prop('disabled', true);
    }
}

function show_free_trial_dialog(){
    var html = '<div class="free_trial_hero">';
    html += '<div class="free_trial_hero_h1">' + sprintf(_js("Control your news feed with %s Pro"),application_name) + '</div>';
    html += '</div>';
    html += '<div class="free_trial_bullets">';
    html += '<div class="free_trial_unlock_p">' + _js('Unlock all power features') + ':</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon-upgrade-feature-checkmark icon_green icon_trial_checkmark"></span>' + _js("Unlimited subscriptions") + '</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon-upgrade-feature-checkmark icon_green icon_trial_checkmark"></span>' + _js("Powerful automation with Rules") + '</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon-upgrade-feature-checkmark icon_green icon_trial_checkmark"></span>' + _js("Keyword monitoring") + '</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon-upgrade-feature-checkmark icon_green icon_trial_checkmark"></span>' + _js("Remove or allow content with feed Filters") + '</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon-upgrade-feature-checkmark icon_green icon_trial_checkmark"></span>' + _js("Get emails delivered to Newsletter subscriptions.") + '</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon-upgrade-feature-checkmark icon_green icon_trial_checkmark"></span>' + _js("Daily email digests for you and your co-workers") + '</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon-upgrade-feature-checkmark icon_green icon_trial_checkmark"></span>' + _js("Sort by Magic") + '</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon-upgrade-feature-checkmark icon_green icon_trial_checkmark"></span>' + _js("Social media intelligence") + '</div>';
    html += '<div class="free_trial_bullet"><span class="icon16 icon_upgrade icon_green icon_trial_checkmark"></span>' + _js("...and more") + '</div>';
    html += '<button id="start_trial_button" class="bluebutton greenbutton" onclick="start_trial(1);">' + _js("Start free trial") + '</button>';
    html += '<p class="graylink" style="text-align: center;">* ' + _js("No credit card needed")+ '</p>';
    html += '<a href="javascript:;" class="graylink free_trial_cancel_btn" onclick="inno_dialog_close(\'free_trial_dialog\')">' + _js("Cancel") + '</a>';
    html += '</div>';


    dialog('free_trial_dialog', {content: html});
    resize();
}

function show_subscription_activated(plan, trial, extra_params){
    var plan_class = plan.toLowerCase();
    var trial_str = (trial == 1) ? ' trial' : '';
    var preferences_link = '<a href="#preferences-billing" class="underlink">' + _js("Preferences") + '</a>';
    var button_close = "inno_dialog_close('subscription_activated')";
    var button_text = _js("OK, Let's start");
    if(plan == 'Team'){
        var button_close = "inno_dialog_close('subscription_activated');view_teams();";
        button_text = _js("Create your Team");
        if(extra_params && extra_params.organization_id){
            button_text = _js("Go to Dashboard");
        }
    }
    var html = '<div class="subscription_activated_wrapper">';
        html += '<div class="subscription_activated_image_wrapper">';
        html += '<div class="' + plan_class + '_image subscription_activated_image" style="background-image: url(../../images/svg/'+ plan_class +'-plan-icon.svg)"></div>';
        if( trial == true){
            html += '<div class="subscription_activated_trial">' + _js("trial") + '</div>';
        }
        else{
            html += '<div class="subscription_activated_checkmark flex justify-content-center"><span class="icon-upgrade-feature-checkmark"></span></div>';
        }
        html += '</div>';
        var text = _js('Congratulations!') + ' ' + sprintf(_js("Your %s plan has been activated."),application_name + ' ' + plan + trial_str);
        if(extra_params.text)
          text = extra_params.text
        html += '<div class="subscription_activated_text">' + text +'</div>';
        html += '<button class="bluebutton" onclick="' + button_close + '">' + button_text + '</button>';
        html += '<div class="subscription_activated_footer graylink_darker">' + sprintf(_js("Information about your account, billing and usage can be found in %s"),preferences_link) + '.</div>';
        html += '</div>';
    dialog('subscription_activated', {content: html});
    resize();
    l('Subscription activation dialog', plan + trial_str);

}

function free_trial_activated(){
    var html = '<div class="free_trial_activated_wrapper">';
    html += '<img src="/images/free-trial-' + get_theme_name() + '.svg" class="free_trial_activated_image">';
    html += '<div><span class="preferences_billing_trial_flare">' + _js("Free trial") + '</span></div>';
    html += '<div class="free_trial_activated_h1">' + _js("Your free trial was activated!") + '</div>';
    html += '<div class="free_trial_activated_text">' + sprintf(_js("Enjoy the full %s experience."),application_name) + '</div>';
    html += '</div>';


    xalert(html);
    $('#xalert_wrapper').css('width',320);
    inno_dialog_resize();
}

function show_subscription_ended(plan, trial){
    var plan_class = plan.toLowerCase();
    var trial_str = (trial == 1) ? ' trial' : '';
    var access_id = access_pro;
    if(plan == 'Supporter'){
        access_id = access_starter;
    }else if(plan == 'Custom'){
        access_id = access_custom;
    }else if(plan == 'Student'){
        access_id = access_student;
    }else if(plan == 'Team'){
        // TODO - REAL PLAN!
        access_id = access_team_10;
    }

    var preferences_link = '<a href="#preferences-billing" class="underlink">' + _js("Preferences") + '</a>';
    var button_action = "dialog('upgrade_dialog', {access: " + access_id + ", forced_entry: 'plan_expired_dialog'});";
    var button_action_close = "inno_dialog_close('subscription_ended');l('Plan expired dialog','Maybe later');";
    if(plan == 'Team'){
        button_action = "inno_dialog_close('subscription_ended');view_upgrade_teams();";
    }

    var html = '<div class="subscription_activated_wrapper subscription_ended_wrapper">';
    html += '<div class="subscription_activated_image_wrapper">';
    html += '<div class="' + plan_class + '_image subscription_activated_image" style="background-image: url(../../images/svg/'+ plan_class +'-plan-icon.svg)"></div>';
    if( trial == true){
        html += '<div class="subscription_activated_trial subscription_activated_checkmark">' + _js("trial expired") + '</div>';
        html += '</div>'
        html += '<div class="subscription_activated_text">' + sprintf(_js("Your free %s trial has expired."), plan) + ' ' + sprintf(_js("Subscribe to keep all %s features."), plan) +'</div>';
        html += '<button class="bluebutton greenbutton" onclick="' + button_action + ';l(\'Plan expired dialog\',\'Renew\');">' + sprintf(_js("Buy %s"),application_name + ' Pro') + '</button>';
    }
    else{
        html += '<div class="subscription_activated_checkmark flex justify-content-center"><span class="icon16 icon-cross_big"></span></div>';
        html += '</div>';
        html += '<div class="subscription_activated_text">' + sprintf(_js("Your %s plan has expired."),application_name + ' ' + plan) + ' ' + sprintf(_js("Renew it to keep all %s features."), plan) +'</div>';
        html += '<button class="bluebutton greenbutton" onclick="' + button_action + '";l(\'Plan expired dialog\',\'Renew\');>' + _js("Renew") + '</button>';
    }

    html += '<div class="subscription_ended_not_now graylink" onclick="' + button_action_close + '">' + _js("Maybe later") + '</div>';
    html += '<div class="subscription_activated_footer graylink_darker">' + sprintf(_js("Information about your account, billing and usage can be found in %s"),preferences_link) + '.</div>';
    html += '</div>';
    dialog('subscription_ended', {content: html});
    resize();
    l('Subscription ended dialog', plan + trial_str);

}

function invite_friend_sub_toggle_select_all(){
    var checked = $('#invite_friend_sub_select_all').is(':checked');
    $('#invite_friend_sub_select_all').removeClass('partial');
    if(checked){
        $('#invite_friend_dialog').find('.invite_friend_sub').not('.hidden').each(function(){
            $(this).find('.invite_friend_sub_select').removeClass('partial').prop('checked', checked);
        });
    }else{
        $('.invite_friend_sub_select').removeClass('partial').prop('checked', checked);
    }
    invite_friend_check_all_check();
}

function invite_friend_sub_toggle_select(id){
    var checked = $('#ifs_' + id).is(':checked');
    $('#ifs_' + id).removeClass('partial');
    $('#iff_children_' + id).find('.invite_friend_sub_select').prop('checked', checked);
    invite_friend_check_all_check();
}

function invite_friend_subscriptions_filter_check(){
    var filter = $.trim($('#invite_friend_subscriptions_filter').val());
    if(!filter){
        $('#invite_friend_dialog').find('.ifs.hidden').removeClass('hidden');
        $('#invite_friend_dialog').find('.iff.hidden').removeClass('hidden');
    }else{
        $('#invite_friend_dialog').find('.ifs').each(function(){
            var heading = $(this).find('label').attr('title');
            if(!fuzzy_match(heading.toLowerCase(),filter.toLowerCase())){
                $(this).addClass('hidden');
            }
        });

        $('#invite_friend_dialog').find('.iff').each(function(){
            var showed = $(this).find('.ifs:not(".hidden")');
            if(showed[0]){
                $(this).removeClass('hidden');
            }else{
                $(this).addClass('hidden');
            }
        });
    }
}

function iff_expand(id){
    if($('#iff_children_' + id).hasClass('invite_friend_sub_children_showed')){
        $('#iff_plus_' + id).removeClass('icon-arrow_down_small').addClass('icon-arrow_right_small');
        $('#iff_children_' + id).removeClass('invite_friend_sub_children_showed');
    }else{
        $('#iff_plus_' + id).removeClass('icon-arrow_right_small').addClass('icon-arrow_down_small');
        $('#iff_children_' + id).addClass('invite_friend_sub_children_showed');
    }
}

function invite_friend_check_feeds_visibility(){
    var check = $('#invite_friend_share_feeds_checkbox').is(':checked');
    if(check){
        $('#invite_friend_subscriptions_container').show();
        $('#invite_friend_subscriptions_counter').show();
    }else{
        $('#invite_friend_subscriptions_container').hide();
        $('#invite_friend_subscriptions_counter').hide();
    }
}

function start_invite_friend(){
    if(!user_access[access_starter]){
        grecaptcha.execute();
    }else{
        start_invite_friend_execute();
    }
}

function start_invite_friend_execute(){
    var post = xajax.getFormValues('send_invitation_form');
    post.emails = $.trim($('#invite_friend_recipients').val());
    post.message = $.trim($('#invite_friend_message').val());
    post.subscriptions = [];
    var current_folder_id = '0';
    var subscriptions_cnt = 0;

    if(!post.emails){
        xalert(_js('Please add at least one email.'),1,$('#invite_friend_recipients').focus().click());
        return;
    }

    if($('#invite_friend_share_feeds_checkbox').is(':checked')){
        $('#invite_friend_dialog').find('.invite_friend_sub_select:checked').each(function(){
            var id_expl = $(this).attr('id').replace(/ifs_/,'').split(/_/);
            if(id_expl[0] == '1'){
                post.subscriptions.push({id: id_expl[1], folder_id: current_folder_id});
                subscriptions_cnt++;
            }else{
                current_folder_id = id_expl[1];
            }
        });

        if(post.subscriptions.length == 0){
            xalert(_js('Please select at least one subscription.'));
            return;
        }
    }

    if(subscriptions_cnt > 150){
        xalert(sprintf(_js('Please select no more than %s subscriptions.'),150));
        return;
    }
    disable_dialog_button('invite_friend_dialog');
    do_loading();
    xajax_invite_friend(post);
}

function invite_friend_check_all_check(){
    $('#invite_friend_sub_select_all').removeClass('partial');
    var checked = $('#invite_friend_dialog').find('.invite_friend_sub_select:checked');
    if(checked.length == 0){
        $('#invite_friend_sub_select_all').prop('checked', false);
    }else{
        var all = $('#invite_friend_dialog').find('.invite_friend_sub_select');
        // $('#invite_friend_sub_select_all').prop('checked', true);
        if(checked.length < all.length){
            $('#invite_friend_sub_select_all').addClass('partial');
        }
    }

    var subscriptions_cnt = 0;
    $('#invite_friend_dialog').find('.invite_friend_sub_select:checked').each(function(){
        var id_expl = $(this).attr('id').replace(/ifs_/,'').split(/_/);
        if(id_expl[0] == '1'){
            subscriptions_cnt++;
        }
    });

    if(subscriptions_cnt){
        if(subscriptions_cnt > 150){
            $('#invite_friend_subscriptions_counter').addClass('redlink');
        }else{
            $('#invite_friend_subscriptions_counter').removeClass('redlink');
        }
        $('#invite_friend_subscriptions_counter').html(_js("Selected")+': ' + subscriptions_cnt);
    }else{
        $('#invite_friend_subscriptions_counter').html('');
    }
}

function invite_friend_check_folder_check(id){
    var $parent = $('#ifs_' + id).parents('.iff');
    var $parent_checkbox = $parent.find('.invite_friend_sub_select').eq(0);
    $parent_checkbox.removeClass('partial');

    var checked = $parent.find('.invite_friend_sub_children').find('.invite_friend_sub_select:checked');
    if(checked.length == 0){
        $parent_checkbox.prop('checked', false);
    }else{
        var all = $parent.find('.invite_friend_sub_children').find('.invite_friend_sub_select');
        $parent_checkbox.prop('checked', true);
        if(checked.length < all.length){
            $parent_checkbox.addClass('partial');
        }
    }

    invite_friend_check_all_check();
}

function invited_friend_toggle_feeds_visibility(){
    if($('#invite_friend_subscriptions_container').is(':visible')){
        $('#invite_friend_subscriptions_container').hide();
        $('#ift_arrow').removeClass('icon-arrow_down_small').addClass('icon-arrow_right_small');
    }else{
        $('#invite_friend_subscriptions_container').show();
        $('#ift_arrow').removeClass('icon-arrow_right_small').addClass('icon-arrow_down_small');
    }
}

function finish_invited_friend(token){
    var post = {};
    post.token = token;
    post.subscriptions = [];
    var current_folder_name = '';
    var subscriptions_cnt = 0;

    $('#invite_friend_dialog').find('.invite_friend_sub_select:checked').each(function(){
        var id_expl = $(this).attr('id').replace(/ifs_/,'').split(/_/);
        if(id_expl[0] == '1'){
            post.subscriptions.push({id: id_expl[1], folder_name: current_folder_name});
            subscriptions_cnt++;
        }else{
            current_folder_name = $(this).attr('title');
        }
    });

    if(post.subscriptions.length == 0){
        xalert(_js('Please select at least one subscription.'));
        return;
    }

    disable_dialog_button('invite_friend_dialog',0);
    disable_dialog_button('invite_friend_dialog',1);
    do_loading();
    xajax_finish_invited_friend(post);
}

function skip_invited_friend(token){
    do_loading();
    disable_dialog_button('invite_friend_dialog',0);
    disable_dialog_button('invite_friend_dialog',1);
    xajax_skip_invited_friend(token);
}

function init_welcome(){
    view_welcome();
    return;

    if($('#invite_friend_dialog')[0]){
        return;
    }
    // dialog('onboard_dialog');
}

function covid_subscribe(push){
    var country_id = $('#covid_tracker_country').val();
    do_loading();
    inno_dialog_close('covid_dialog');
    xajax_covid_subscribe(country_id, push);
}

function check_first_subscription_onboarding(){
    return;

    // TODO... decide if we will be having onboarding again
    if(user_registered_since < 60*60*24*7 && initial_onboarding_shown == 0){
        onboard_start_tour_first_subscription();
        createCookie('initial_onboarding_shown',1,30);
        initial_onboarding_shown = 1;
    }
}

function show_covid_apps_dialog(){
    var content = '';
    // content += '<div class="covid_apps_dialog_img"><img src="/images/covid-modal-apps-' + get_theme_name() + '.png"></div>';
    content += '<div class="covid_apps_dialog_title"><span style="font-weight:bold;">One more step.</span> To receive push notifications, download our mobile app now.</div>';
    content += '<div class="covid_apps_dialog_badge"><a target="_blank" rel="noopener" href="https://apps.apple.com/app/apple-store/id892355414?pt=32204000&ct=inoreader_internal&mt=8"><img src="/images/covid-apple-store.png"></a></div>';
    content += '<div class="covid_apps_dialog_badge"><a target="_blank" rel="noopener" href="https://play.google.com/store/apps/details?id=com.innologica.inoreader"><img src="/images/covid-google-play.png"></a></div>';
    dialog('covid_apps_dialog',{content: content});
}

function preferences_expand_bundle(id){
    if($('#preferences_bundles_feeds_' + id).is(':visible')){
        $('#preferences_bundles_arrow_' + id).removeClass('expanded');
        $('#preferences_bundles_feeds_' + id).hide();
        $('#preferences_bundles_' + id).removeClass('bundle_expanded');
    }else{
        $('#preferences_bundles_' + id).addClass('bundle_expanded');
        $('#preferences_bundles_arrow_' + id).addClass('expanded');
        $('#preferences_bundles_feeds_' + id).show();
        $('#preferences_bundles_feeds_' + id).find('.preferences_bundle_feed_favicon').each(function(){
            if(!$(this).attr('src') && $(this).data('src')){
                $(this).attr('src',$(this).data('src'));
            }
        });
    }
}

function send_newsletter_confirm_email(id){
    var dont_ask = $('#confirm_dontask_' + id).is(':checked') ? 1 : 0;
    do_loading();
    xajax_send_newsletter_confirm_email(id,dont_ask);
}

function delete_contact(id, email){
    xconfirm(_js("Are you sure you want to delete this contact") + '?' + '<p><b>' + email + '</b></p>','xajax_delete_book(' + id + ');');
}

function toggle_deduplication_select(filter_type, filter_id, enabled, current_type){
    if(enabled){
        var deduplication_options = [];
        if(current_type == ''){
            deduplication_options.push({id: '', value: _js('Please select an option')});
        }

        deduplication_options.push({id: 'url', value: _js('When they have the same URL')});
        deduplication_options.push({id: 'title_exact', value: _js('When they have the same title')});
        deduplication_options.push({id: 'title_fuzzy', value: _js('When they have nearly identical titles')});

        var deduplication_method_select = create_dom_element('select', {
            id: 'deduplication_method_select_' + filter_type + '_' + filter_id,
            className: 'deduplication_method_select',
            onchange: function(){ if(this.value != '') set_deduplication_method(filter_type, filter_id, this.value) }
        });

        for(var i in deduplication_options){
            deduplication_method_select.appendChild(create_dom_element('option', {
                value: deduplication_options[i].id,
                innerHTML: deduplication_options[i].value
            }));
        }

        if(current_type != ''){
            deduplication_method_select.value = current_type;
        }

        document.getElementById('deduplication_wrapper_config_' + filter_type + '_' + filter_id).style.display = 'flex';
        document.getElementById('deduplication_div_config_' + filter_type + '_' + filter_id).appendChild(deduplication_method_select);
        if(filter_type == 'all'){
            document.getElementById('deduplication_wrapper_warning_' + filter_type + '_' + filter_id).style.display = 'block';
        }
    }else{
        if(current_type != ''){
            set_deduplication_method(filter_type, filter_id, '');
        }else{
            document.getElementById('deduplication_div_config_' + filter_type + '_' + filter_id).innerHTML = '';
        }
        document.getElementById('deduplication_wrapper_config_' + filter_type + '_' + filter_id).style.display = 'none';
        if(document.getElementById('deduplication_div_advanced_link_' + filter_type + '_' + filter_id)){
            document.getElementById('deduplication_div_advanced_link_' + filter_type + '_' + filter_id).style.display = 'none';
        }
        if(filter_type == 'all'){
            document.getElementById('deduplication_wrapper_warning_' + filter_type + '_' + filter_id).style.display = 'none';
        }
    }
}

function set_deduplication_method(filter_type, filter_id, type){
    do_loading();
    block_deduplication_method_dialog(filter_type, filter_id);
    var compare_period = false;
    var fuzzy_precision = false;

    if($('#deduplication_method_advanced_compare_period_slider_' + filter_type + '_' + filter_id)[0]){
        compare_period = $('#deduplication_method_advanced_compare_period_slider_' + filter_type + '_' + filter_id).slider('value');
    }

    xajax_set_deduplication_method(filter_type, filter_id, type, compare_period, fuzzy_precision);
}

function block_deduplication_method_dialog(filter_type, filter_id){
    document.getElementById('deduplication_method_select_' + filter_type + '_' + filter_id).disabled = 'disabled';
    document.getElementById('deduplication_filter_checkbox_' + filter_type + '_' + filter_id).disabled = 'disabled';

    if(filter_type == 'all'){
        show_dialog_loader('account_info_dialog');
    }else if(filter_type == 'folder' || filter_type == 'active_search'){
        show_dialog_loader('folder_info_dialog');
    }else if(filter_type == 'subscription'){
        show_dialog_loader('feed_info_dialog');
    }
}

function delete_deduplicator_from_preferences(filter_type, filter_id){
    xconfirm(_js('Are you sure?'),'delete_deduplicator_from_preferences_do(\'' + filter_type + '\', ' + filter_id + ');');
}

function delete_deduplicator_from_preferences_do(filter_type, filter_id){
    do_loading();
    xajax_set_deduplication_method(filter_type, filter_id, 0);
}

function set_deduplication_method_check_preferences(){
    if($('#duplicate_filters_table')[0]){
        xajax_fill_dialog_async('preferences_rules_duplicate_filters');
    }
}

function toggle_deduplication_advanced_options(filter_type, filter_id, deduplicator_id){
    if($('#deduplication_div_advanced_div_' + filter_type + '_' + filter_id).is(':visible')){
        $('#deduplication_div_advanced_arrow_icon_' + filter_type + '_' + filter_id).removeClass('icon-arrow_down_small').addClass('icon-arrow_right_small');
        $('#deduplication_div_advanced_div_' + filter_type + '_' + filter_id).hide();
        if(deduplicator_id){
            xajax_set_deduplicator_expanded(deduplicator_id, 0);
        }
    }else{
        $('#deduplication_div_advanced_div_' + filter_type + '_' + filter_id).show();
        $('#deduplication_div_advanced_arrow_icon_' + filter_type + '_' + filter_id).removeClass('icon-arrow_right_small').addClass('icon-arrow_down_small');
        if(deduplicator_id){
            xajax_set_deduplicator_expanded(deduplicator_id, 1);
        }
    }
}

function activate_deduplication_interval_slider(filter_type, filter_id, value, max){
    var slider_object = {value: value, animate: true, range: 'min', min: 1, max: max, change: function(event, ui){ save_deduplication_interval_value(filter_type, filter_id, ui)}, slide: function(event, ui){ set_deduplication_interval_value(filter_type, filter_id, ui)}}
    $('#deduplication_method_advanced_compare_period_slider_' + filter_type + '_' + filter_id).slider(slider_object);
}

function save_deduplication_interval_value(filter_type, filter_id, ui){
    do_loading();
    var type = $('#deduplication_method_select_' + filter_type + '_' + filter_id).val();
    var fuzzy_precision = false;
    if(type == 'title_fuzzy'){
        fuzzy_precision = $('input[name="deduplication_method_advanced_precision"]:checked').val();
    }
    block_deduplication_method_dialog(filter_type, filter_id);
    xajax_set_deduplication_method(filter_type, filter_id, type, ui.value, fuzzy_precision);
}

function set_deduplication_interval_value(filter_type, filter_id, ui){
    $('.deduplication_method_advanced_compare_period').hide();
    $('#deduplication_method_advanced_compare_period_' + filter_type + '_' + filter_id + '_' + ui.value).show();
}

function save_deduplication_precision(filter_type, filter_id, value){
    do_loading();
    var type = $('#deduplication_method_select_' + filter_type + '_' + filter_id).val();
    var compare_period = $('#deduplication_method_advanced_compare_period_slider_' + filter_type + '_' + filter_id).slider('value');
    block_deduplication_method_dialog(filter_type, filter_id);
    xajax_set_deduplication_method(filter_type, filter_id, type, compare_period, value);
}

function remove_deduplicator_hint(){
    if($('#deduplicator_hint_dialog').is(':visible')){
        inno_dialog_close('deduplicator_hint_dialog');
    }
}
function remove_articles_bulk_hint(){
    if($('#articles_bulk_hint_dialog').is(':visible')){
        inno_dialog_close('articles_bulk_hint_dialog');
    }
}

function should_show_deduplicator_hint(){
    if(deduplicator_hint_showed){
        return false;
    }

    if(check_user_visit(8)){
        return false;
    }

    if(ino && ino.$player && ino.$player.stopped === false && ino.$player.playlist.length) {
        return false;
    }

    if(!feed_params.filter_type || feed_params.filter_type == 'folder' || feed_params.filter_type == 'active_search' || feed_params.filter_type == 'subscription'){
        return true;
    }

    return false;
}

function show_deduplicator_hint(){
    deduplicator_hint_showed = true;
    if($('#deduplicator_hint_dialog').is(':visible')){
        return;
    }
    var bottom = 30;
    if($('#footer').is(':visible')){
        bottom += $('#footer').outerHeight();
    }
    var content = '<div class="deduplicator_hint_title">' + _js('Duplicate articles detected') + '</div>';
    content += '<div class="deduplicator_hint_subtitle"><a href="https://www.inoreader.com/blog/2020/08/win-the-clone-wars-with-duplicate-filters.html" target="_blank" rel="noopener" class="underlink_hover">' + sprintf(_js('Did you know %s can filter out similar content?'),application_name) + '</a></div>';
    content += '<div class="flex deduplicator_hint_controls">';
    content += '<div class="flex_grow deduplicator_hint_control_left"><a href="javascript:void(0);" onclick="hide_deduplicator_dialog()">' + _js("Don't show this again") + '</a></div>';
    content += '<div class="flex_shrink deduplicator_hint_control_right"><a href="javascript:void(0);" onclick="show_deduplicator_dialog()">' + _js("Filter duplicates") + '</a></div>';
    content += '</div>';
    dialog('deduplicator_hint_dialog',{content: content, bottom: bottom});
}

function hide_deduplicator_dialog(){
    inno_dialog_close('deduplicator_hint_dialog');
    set_user_visits(8);
}

function show_deduplicator_dialog(){
    if(!feed_params.filter_type){
        inno_dialog_close('deduplicator_hint_dialog');
        dialog('account_info_dialog');
    }else if(feed_params.filter_type == 'folder' || feed_params.filter_type == 'active_search'){
        inno_dialog_close('deduplicator_hint_dialog');
        dialog('folder_info_dialog', {folder_id: feed_params.filter_id});
    }else if(feed_params.filter_type == 'subscription'){
        inno_dialog_close('deduplicator_hint_dialog');
        dialog('feed_info_dialog', {subscription_id: feed_params.filter_id});
    }
}

function show_kickstart_hint(period, introductory_price, regular_price){
    kickstart_hint_showed = true;
    var bottom = 30;
    if($('#footer').is(':visible')){
        bottom += $('#footer').outerHeight();
    }
    var content = '<a onclick="hide_kickstart_dialog();pricing_init_payment(8,\'monthly\');" href="javascript:void(0)"><div class="flex align-items-start"><span class="icon-gift"></span><div><div class="deduplicator_hint_title">Get ' + period + ' months of Inoreader Pro for ' + introductory_price + '</div>';
    content += '<div class="deduplicator_hint_subtitle graylink" style="font-size:0.9em">Fixed price for ' + period + ' months, ' + regular_price + '/month afterwards</div>';
    content += '<div class="flex deduplicator_hint_controls">';
    content += '<div class="flex_shrink deduplicator_hint_control_right">Grab offer</div>';
    content += '</div></div></div></a>';
    dialog('kickstart_hint_dialog',{content: content, bottom: bottom});
}

function hide_kickstart_dialog(){
    inno_dialog_close('kickstart_hint_dialog');
}


function show_catalog_hint(){
    catalog_hint_showed = true;
    var bottom = 30;
    if($('#footer').is(':visible')){
        bottom += $('#footer').outerHeight();
    }
    var content = '<div class="deduplicator_hint_title">Explore our new hand-picked catalog "Investing"</div>';
    content += '<div class="deduplicator_hint_subtitle"><a onclick="hide_catalog_dialog();l(\'Investing dialog\',\'Opened catalog\');" href="/search/feeds/category/investing" rel="noopener" class="ajaxed underlink_hover">All the essential information straight into your Inoreader account.</a></div>';
    content += '<div class="flex deduplicator_hint_controls justify-content-end">';
    content += '<div class="flex_shrink deduplicator_hint_control_right"><a onclick="hide_catalog_dialog();l(\'Investing dialog\',\'Opened catalog\');" class="ajaxed" href="/search/feeds/category/investing">Go to Investing</a></div>';
    content += '</div>';
    dialog('catalog_hint_dialog',{content: content, bottom: bottom});
}

function hide_catalog_dialog(){
    inno_dialog_close('catalog_hint_dialog');
}

function show_articles_bulk_hint(){
    return;
    if($('#articles_bulk_hint_dialog')[0]){
        return;
    }
    articles_bulk_hint_showed = true;
    var bottom = 30;
    if($('#footer').is(':visible')){
        bottom += $('#footer').outerHeight();
    }

    var meta_key = client_os == 'MacOS' ? '⌘' : 'Ctrl';

    var content = '<div class="deduplicator_hint_title">New: Bulk operations!</div>';
    content += '<div class="deduplicator_hint_subtitle">Save for later, tag or share multiple articles at once. Hold <span class=hotkey>' + meta_key + '</span> or <span class=hotkey>Shift</span> and click on articles to start selecting.</div>';
    content += '<div class="flex deduplicator_hint_controls justify-content-end">';
    content += '<div class="flex_shrink deduplicator_hint_control_right"><a onclick="hide_article_bulk_dialog();" href="javascript:void(0)">OK, Got it</a></div>';
    content += '</div>';
    dialog('articles_bulk_hint_dialog',{content: content, bottom: bottom});
}

function hide_article_bulk_dialog(){
    inno_dialog_close('articles_bulk_hint_dialog');
    set_user_visits(128);
    l('Bulk actions', 'Hidden announce', '');
}

function twitter_search_show_all_people(heading,subheading){
    var content = '<div class="twitter_all_people_dialog_heading">' + heading + '</div>';
    content += '<div class="twitter_all_people_dialog_subheading">' + subheading + '</div>';
    content += '<div class="flex twitter_all_people_dialog_items">';
    content += $('#twitter_search_people_div').html();
    content += '</div>'
    dialog('twitter_all_people_dialog', {content: content});
    $('#twitter_all_people_dialog').find('.hidden').removeClass('hidden');
    inno_dialog_resize();
}

function readwise_connected(){
    var content = '<div class="readwise_connected_header">' + _js('You have successfully integrated with') + ' Readwise!</div>';
    content += '<div class="readwise_connected_subheader">' + _js('Annotate a phrase in an article to send it to Readwise.') + '</div>';
    content += '<div class="readwise_connected_pic"><img src="/images/annotate-' + get_theme_name() + '.png"></div>';

    dialog('readwise_connected_dialog',{content: content});
    focus_dialog_button('readwise_connected_dialog');
    xajax_fill_dialog_async('preferences_integration');
}

function set_searcher_topic(topic){
    $('#searcher_input').val('#' + topic);
    searcher_term_handler(document.getElementById('searcher_input'), {section_id: 0, sub_section_id: 0, tab: "feeds", term: '#' + topic, language: search_language}, null);
}

function set_searcher_language(language){
    feeds_searcher_previous_value = null;
    set_feed_param('search_language', language);
    search_language = language;
    searcher_term_handler(document.getElementById('searcher_input'), {section_id: 0, sub_section_id: 0, tab: "feeds", term: $('#searcher_input').val(), search_language: language}, null);
    rebuild_search_context('feeds');
}

function check_delete_account_radios(){
    $('.delete_account_option_active').removeClass('delete_account_option_active');
    $('#delete_account_reason_text').attr('placeholder','');
    $('input[name="delete_account_reason_type"]').each(function(){
        if($(this).is(':checked')){
            $('#delete_account_reason_option_' + $(this).val()).addClass('delete_account_option_active');
            if($(this).val() == 1){
                $('#delete_account_reason_text').click().focus().attr('placeholder',_js('Let us know what went wrong...'))
            }
            return false;
        }
    });
}

function delete_account_reason_text_click(){
    $('.delete_account_option_active').removeClass('delete_account_option_active');
    if(!$('#delete_account_reason_type_1').is(':checked')){
        $('#delete_account_reason_type_1').prop('checked',true);
    }
    $('#delete_account_reason_text').attr('placeholder',_js('Let us know what went wrong...'))
}

function delete_account_confirmation(){
    var found_answer = false;
    $('input[name="delete_account_reason_type"]').each(function(){
        if($(this).is(':checked')){
            found_answer = $(this).val();
        }
    });

    if(found_answer){
        var reason = $('#delete_account_reason_text').val();
        inno_dialog_close('delete_account_dialog');
        do_loading();
        xajax_init_delete_account(found_answer,reason);
    }else{
        xalert(_js('Please choose one of the options.'));
    }
}

function delete_account_sub_action(action){
    if(action == 'contact_support'){
        inno_dialog_close('delete_account_dialog');
        dialog('feedback_dialog')
    }else if(action == 'start_free_trial'){
        inno_dialog_close('delete_account_dialog');
        show_free_trial_dialog();
    }
}

function hide_all_articles_link(){
    $('#parent_all_articles').hide();
}

function show_all_articles_link(){
    $('#parent_all_articles').show();
}

function switch_account_confirmation(){
    var html = '<div class="switch_account_dialog_header">';
    html += _js('You are about to be signed out of this account:');
    html += '</div>';
    html += '<div class="switch_account_dialog_profile flex">';
    html += document.getElementById('sidebar_no_feeds_missing_tip_content_user').innerHTML;
    html += '</div>';

    dialog('switch_account_dialog', {content: html});
}

if(window.matchMedia){
    try{
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e){
            init_auto_dark_theme();
        });
    }catch(e){
        // Deprecated
        // window.matchMedia('(prefers-color-scheme: dark)').addListener('change', function(e){
        //     init_auto_dark_theme();
        // });
    }
}

function getSVG(imgURL, cb) {
  cb && $.get(imgURL, function (data) {
    cb(data)
  }, 'text');
}

function require_upgrade( params ) {
  if(params && !params.plan) {
    params.plan = 'pro'
  }
  if(!params || (!params.feature && params.plan && params.plan !== 'team')) {
    console_log('require_upgrade() function requires "feature" param');
    return false;
  }

  var text = '';
  var url = '';
  if(params.plan.toLowerCase() === 'team') {
    url = '/upgrade_teams';
    text = _js("This feature is only available to Team users.");
  } else {
    url = '/upgrade/feature/' + params.feature;
    var plan = params.plan.toString().toLowerCase();
    text = sprintf(_js("This feature is only available to %s users."),plan.charAt(0).toUpperCase() + plan.slice(1));
  }

  params.content  = `
        <div class="preferences_pro_nag">
            <span class="icon-shield"></span>
            <div class="preferences_pro_nag_text">
                ${text}
            </div>
            <a class="ajaxed" href="${url}">
                  <div class="preferences_pro_nag_button greenbutton">${_js("Upgrade now")}</div>
            </a>
            <a onclick="inno_dialog_close('require_upgrade')" href="javascript:void(0);">
                <div class="subaction mt-4">${_js("No, thanks")}</div>            
            </a>
        </div>
        `;
  dialog('require_upgrade', params);
}

function require_upgrade_inline(params) {
  if(params && !params.plan) {
    params.plan = 'pro'
  }
  var text= params.text;
  var link_text= params.link_text || _js('Upgrade now');
  var url = '/upgrade/feature/' + params.feature;

  params.content  = `
        <div class="preferences_pro_nag preferences_pro_nag_inline m-0 px-3 py-0">
            <div class="m-0 flex text-sm">
              <span class="icon-shield" style="font-size: 14px;"></span>
              <span class="mx-2">${text}</span>
              <a class="ajaxed underlink" href="${url}">${link_text}</a>
            </div>
            <span class="icon16 icon-add-menu-button-close flex justify-content-center" onclick="${params.click}"></span>
        </div>
        `;

  if(params.el) {
    $(params.el).html(params.content);
  } else {
    return params.content;
  }
}

function edit_rule_inline(id,context,rule_type){
    if($('#preferences_rules_row_' + id).hasClass('preferences_rules_row_editing')){
        $('#preferences_rules_row_' + id).removeClass('preferences_rules_row_editing');
        $('#rule_inline_editor_' + id).html('<div class="loader"></div>');
    }else{
      //close old
      $('.preferences_rules_row_editing.preferences_rules_row_editing .rule_inline_editor')
        .html('<div class="loader"></div>');
      $('.preferences_rules_row_editing').removeClass('preferences_rules_row_editing');

      $('#preferences_rules_row_' + id).addClass('preferences_rules_row_editing');
        if(rule_type === 1) {
          $('#preferences_rules_row_name_input_' + id).focus().click();
        }
        xajax_fill_dialog('rule_dialog',{rule_id: id, inline: true, context: context});
    }
}

function view_monitored_keyword_inline(id){
    $('.preferences_rules_row_editing').not('#preferences_rules_row_' + id).each(function(){
        $(this).removeClass('preferences_rules_row_editing');
        $(this).find('.highlighter_inline_editor').html('<div class="loader"></div>');
    });

    if($('#preferences_rules_row_' + id).hasClass('preferences_rules_row_editing')){
        $('#preferences_rules_row_' + id).removeClass('preferences_rules_row_editing');
        $('#monitored_keyword_inline_' + id).html('<div class="loader"></div>');
    }else{
        $('#preferences_rules_row_' + id).addClass('preferences_rules_row_editing');
        $('#monitored_keyword_inline_' + id).html('<div id="search_query_builder_dialog"><div class="loader"></div></div>');
        // xajax_fill_monitored_keyword_inline(id);
        xajax_fill_dialog('search_query_builder_dialog', {inline: true, id: id});
    }
}

function edit_highlighter_inline(id){
    if($('#preferences_rules_row_' + id).hasClass('preferences_rules_row_editing')){
        $('#preferences_rules_row_' + id).removeClass('preferences_rules_row_editing');

        if($('#preferences_rules_row_name_input_' + id)[0]){
            var rule_name = $.trim($('#preferences_rules_row_name_input_' + id).val());
            $('#preferences_rules_row_name_' + id).html($('#preferences_rules_row_name_' + id).data('original-content'));
        }

        $('#rule_inline_editor_' + id).html('<div class="loader"></div>');
    }else{
        $('#preferences_rules_row_' + id).addClass('preferences_rules_row_editing');

        var rule_name = $.trim($('#preferences_rules_row_name_' + id).text());
        var rule_name_html = $.trim($('#preferences_rules_row_name_' + id).html());
        var input = create_dom_element('input',{
            id: 'preferences_rules_row_name_input_' + id,
            className: 'preferences_rules_row_name_input',
            type: 'text',
            value: rule_name,
            placeholder: _js('Term to highlight'),
            onkeyup: function(event){
                if(catch_enter(event)){
                    save_highlighter(id);
                }
                if(catch_esc(event)){
                    edit_rule_inline(id);
                }
            }
        });

        $('#preferences_rules_row_name_' + id).data('original-content',rule_name_html).html('');
        document.getElementById('preferences_rules_row_name_' + id).appendChild(input);
        $('#preferences_rules_row_name_input_' + id).focus().click();
        xajax_fill_dialog('highlighter_dialog',{id: id, inline: true});
    }
}

function add_highlighter_inline(){
    var html = ' \
    <div class="reader_pane_rules_wrapper"> \
        <div class="preferences_rules_header"> \
            <div class="preferences_rules_header_count"> \
                ' + _js('New highlighter') + ' \
            </div> \
        </div> \
        <div class="preferences_rules_row preferences_rules_row_editing" id="preferences_rules_row_0"> \
            <div class="preferences_rules_row_flex"> \
                <div class="preferences_rules_row_expand"> \
                    <a href="javascript:void(0);" onclick="view_highlighters();"><span class="icon16 icon-cross_big"></span></a> \
                </div> \
                <div class="preferences_rules_row_descr"> \
                    <div class="preferences_rules_row_descr_h1" id="preferences_rules_row_name_0"><input id="preferences_rules_row_name_input_0" class="preferences_rules_row_name_input" type="text" placeholder="' + _js('Term to highlight') +'"></div> \
                </div> \
            </div> \
            <div class="rule_inline_editor highlighter_inline_editor" id="rule_inline_editor_0"><div class="loader"></div></div> \
        </div> \
    </div>';

    $('#reader_pane').html(html);
    $('#preferences_rules_row_name_input_0').click().focus();
    xajax_fill_dialog('highlighter_dialog',{id: 0, inline: true});
}

var added_addon_features = {};

function init_addon_dialog(params){
    // xajax_load_inspectlet(); //logrocket

    var vat_alert = '';
    if(user_currency == 'EUR'){
        vat_alert = '<span class="addon_no_vat graylink">* ' + _js('Prices do not include VAT') + '</span>';
    }

    var html = '<div class="addon_dialog_h1">' + _js('Choose your addons') + '</div>';
    html += '<div class="addon_dialog_h2 graylink_darker">' + sprintf(_js('Upgrade the %s Pro limits according to your needs'), application_name) + '</div>';
    html += '<div class="addon_dialog_addon_list" id="addon_dialog_addon_list"></div>';
    html += '<div class="flex justify-content-between">';
    html += '<div class="addon_dialog_add_button_wrapper" id="addon_dialog_addbutton"></div>';
    html += '<div class="addon_dialog_need_more graylink_darker">' + _js('Need more?') + ' ' + sprintf(_js('%s for a quote.'), '<a href="javascript:void(0);" class="bluelink underlink" onclick="dialog(\'feedback_dialog\',{from_team_request:1})">' + _js('Contact us') + '</a>') + '</div>';
    html += '</div>';
    html += '<div id="addon_dialog_prices" class="addon_dialog_total">';

    html += '<div id="current_plan_dialog_total" class="flex addon_dialog_total_row">';
    html += '<div class="addon_dialog_total_caption flex_grow graylink">Inoreader Pro:</div>';
    html += '<div class="addon_dialog_final_price" id="addon_dialog_pro_price"></div>';
    html += '</div>';

    html += '<div id="addon_dialog_total" class="flex addon_dialog_total_row">';
    html += '<div class="addon_dialog_total_caption flex_grow graylink">' + _js('Addons:') + '</div>';
    html += '<div class="flex"><div class="addon_dialog_discount" id="addon_dialog_discount"></div>';
    html += '<div class="addon_dialog_price graylink_darker" id="addon_dialog_price"></div></div>';
    html += '<div class="addon_dialog_final_price" id="addon_dialog_addons_price"></div>';
    html += '</div>';

    html += '<div id="plan_with_addons_dialog_total" class="flex addon_dialog_total_row">';
    html += '<div class="addon_dialog_total_caption_final flex_grow">' + _js('Custom plan with addons:') + vat_alert + '</div>';
    html += '<div class="addon_dialog_final_price"><span id="addon_dialog_final_price"></span><span class="graylink_darker">/month</span></div>';
    html += '</div>';
    html += '</div>';

    if(user_access[access_custom]){
        var button_caption = _js('Send request');
        var button_extra_class = '';
    }else{
        var button_caption = _js('Purchase Custom plan with selected addons');
        var button_extra_class = 'greenbutton';
    }

    html += '<div class="addon_dialog_send_request_button" id="addon_dialog_send_request_button"><button class="bluebutton ' + button_extra_class + ' tallbutton" disabled onclick="send_addon_request()">' + button_caption + '</button></div>';

    dialog('addon_dialog',{content: html});
    init_addon_dialog_add_menu();

    if(params && params.feature){
        if(params.feature == 'email_digests'){
            params.feature = 'digests';
        }else if(params.feature == 'active_searche'){
            params.feature = 'active_searches';
        }

        if(params.feature == 'social_feeds'){
            // add_addon('twitter_feeds');
            add_addon('facebook_feeds');
            add_addon('vk_feeds');
            add_addon('telegram_feeds');
        }else{
            if(custom_plan_features[params.feature]){
                add_addon(params.feature);
            }
        }
    }
    reload_current_addons();
}

function init_addon_dialog_add_menu(){
    var menu = [];
    var n = 0;

    for(var i in custom_plan_features){
        if(custom_plan_features[i].addon_available == false){
            continue;
        }

        if(added_addon_features && added_addon_features[i]){
            continue;
        }

        var name = custom_plan_features[i].name
        menu[n++] = {type: 'link', text: name, click: "add_addon('" + i + "')"};
    }

    if(menu.length == 0){
        $('#addon_dialog_addbutton').html('');
    }else{
        $('#addon_dialog_addbutton').html(inno_toolbar_button('inno_toolbar_button_add_addon' , _js('Add feature') + '<span class="icon16 icon-arrow_down_small"></span>','',menu));
    }

}

function add_addon(addon,tier){
    if(!custom_plan_features[addon]){
        return;
    }
    if(!tier){
        tier = 0;
    }
    // for(var i in added_addon_features){
    //     if(i == addon){
    //         added_addon_features[i].qty = custom_plan_features[addon].tiers[tier].qty;
    //     }
    // }
    if(!added_addon_features[addon]){
        added_addon_features[addon] = {};
    }

    added_addon_features[addon].tier = tier;
    added_addon_features[addon].qty = custom_plan_features[addon].tiers[tier].qty;
    reload_current_addons();
    init_addon_dialog_add_menu();
}

function delete_addon(addon){
    delete added_addon_features[addon];
    reload_current_addons();
    init_addon_dialog_add_menu();
}

function reload_current_addons(){
    $('#addon_dialog_addon_list').html('');
    if(Object.keys(added_addon_features).length > 0){
        $('#addon_dialog_send_request_button').find('button').prop('disabled',false);
        //$('#addon_dialog_prices').css('display','block');
        //$('.addon_dialog_need_more').css('display','block');
    }else{
        $('#addon_dialog_send_request_button').find('button').prop('disabled',true);
        //$('#addon_dialog_prices').css('display','none');
        //$('.addon_dialog_need_more').css('display','none');
    }

    var html = '';
    var addons_cnt = 0;
    for(var i in added_addon_features){
        var feature = custom_plan_features[i];
        html += '<div class="addon_dialog_addon_row flex">';
        html += '<div class="addon_dialog_addon_name w-100">' + feature.name + '</div>';
        html += '<div class="flex">';

        var addon_price = null;
        for(var t in feature.tiers){
            var qty_display = feature.tiers[t].qty;
            if(i == 'translate_characters' || i == 'tts_characters'){
                if(feature.tiers[t].qty < 10){
                    qty_display = (feature.tiers[t].qty * 100) + 'k';
                }else{
                    qty_display = (feature.tiers[t].qty / 10) + 'm';
                }
            }
            var extra_class = (added_addon_features[i].qty == feature.tiers[t].qty) ? 'addon_dialog_addon_tier_current' : '';
            html += '<div class="addon_dialog_addon_tier ' + extra_class + '" onclick="add_addon(\'' + i + '\',' + t +  ')">+' + qty_display + '</div>';

            if(added_addon_features[i].qty == feature.tiers[t].qty){
                addon_price = feature.tiers[t].price;
            }
        }
        html += '</div>';
        html += '<div class="addon_dialog_addon_price" data-price="' + addon_price + '">' + format_user_price(addon_price) + '</div>';
        html += '<div class="addon_dialog_addon_delete_button flex" onclick="delete_addon(\'' + i + '\')"><span class="icon16 icon-remove-condition"></span></div>';
        html += '</div>';
        addons_cnt++;
    }

    var discount_percent = 0;
    if(addons_cnt == 2){
        discount_percent = 10;
    }else if(addons_cnt >= 3){
        discount_percent = 15;
    }

    $('#addon_dialog_addon_list').html(html);

    var total_price_pre_discount = 0.00;
    $('.addon_dialog_addon_price').each(function(){
        total_price_pre_discount += parseFloat($(this).data('price'));
    });

    total_price_pre_discount = Math.round(total_price_pre_discount * 100) / 100;
    var total_price_after_dicount = Math.round((total_price_pre_discount * (1 - discount_percent / 100) * 100)) / 100;

    if(total_price_pre_discount){
        total_price_pre_discount = Math.floor(total_price_pre_discount) + 0.99;
        total_price_after_discount_and_pro = Math.floor(total_price_after_dicount + pro_plan_price) + 0.99;
        total_price_after_dicount = Math.floor(total_price_after_dicount) + 0.99;
    }else{
        total_price_after_discount_and_pro = pro_plan_price;
    }

    $('#addon_dialog_price').html(format_user_price(total_price_pre_discount));
    $('#addon_dialog_addons_price').html(format_user_price(total_price_after_dicount));
    $('#addon_dialog_discount').html('- ' + discount_percent + '%');
    $('#addon_dialog_pro_price').html(format_user_price(pro_plan_price));
    $('#addon_dialog_final_price').html(format_user_price(total_price_after_discount_and_pro));

    if(discount_percent == 0){
        $('#addon_dialog_price').hide();
        $('#addon_dialog_discount').hide();
    }else{
        $('#addon_dialog_price').show();
        $('#addon_dialog_discount').show();
    }
}

function format_user_price(price){
    if(user_currency == 'USD'){
        var formatted_price = '$' + price;
    }else if(user_currency == 'EUR'){
        var formatted_price = price + '€';
    }

    return formatted_price;
}

function send_addon_request(){
    $('#addon_dialog_send_request_button').find('button').html(_js("Sending request...")).prop('disabled',true);
    xajax_send_addon_request(added_addon_features);
}

function clear_recently_read (params) {
  xconfirm(_js('Do you want to clear all recently read articles?'), 'xajax_clear_recently_read(' + JSON.stringify(params || []) + ')');
}

function show_clear_recently_read_undo(params){
  create_snackbar(_js("Cleared all recently read articles."),_js('Undo'),function(){ undo_clear_recent_read(params); },6000);
}

function undo_clear_recent_read(params) {
  params.undo = true;
  xajax_clear_recently_read(params);
}

function open_section (section, xajax_function, params) {
  seen_ids_hash = '';
  clear_article_divs();
  remove_article_classes();
  articles_order = global_articles_order;
  group_article_list = global_group_article_list;
  init_articles_order();
  init_group_article_list();
  do_loading();
  delete_feed_param('opened_article');
  set_feed_param('filter_type',section);
  clear_view_styles();
  xajax_function(params);
  set_loc();
  close_search_overlay();
}

function new_team_folder(organization_id, context, subscriptions, feeds){
    new_folder({folder_context: context, organization_id: organization_id, subscriptions: subscriptions, feeds: feeds});
}

function new_folder(params) {
  open_section('new_folder', xajax_new_folder, params);
}

function new_tag(params) {
  open_section('new_tag', xajax_new_tag, params);
}

function add_newsletter_inline(params) {
  open_section('add_newsletter', xajax_add_newsletter, params);
}

function new_covid19_alert(params) {
  open_section('new_covid19_alert', xajax_new_covid19_alert, params);
}

function build_trending_gadget_tab(tab,limit){
    // TODO
    $('#trending_articles_' + tab).html('<div class="loader"></div>');
    xajax_build_trending_gadget_tab(tab,limit);
}

function toggle_add_button_position(){
    $('#add_button_above_feeds').prop('disabled',true).parent().addClass('loading');
    xajax_toggle_add_button_position();
}



//Black Friday
function bf_sidebar_banner(){
  var bf_dismissed_21 = readCookie('bf_deal_dismissed_21');
  if(!bf_dismissed_21){
    var html = '<a href="/upgrade/feature/black_friday_2021" class=\"ajaxed\">Hurry! Get <strong>6 free months</strong> of Inoreader Pro now!</a>';
    $('#splitter').append('<div id="tree_announce" class="tree_announce tree_announce_bf_21">' + html + '<span onclick="dismiss_announce(\'bf_deal_21\')" class="icon16 icon_close_announce icon-cross" title="'+_js("Dismiss")+'"></span></div>');
  }
}

function close_black_friday_banner(){
    createCookie('consents_new_year_2023' ,1,30);
    $('#black_friday').remove();
    resize();
}


function show_supporter_bf_dialog(){
    var html = '<div style="text-align: center;">' +
                '<span class="pricing_plan_name">in case you\'ve missed it</span>' +
                '<h1 style="margin: 20px 0 10px 0;">Our Black Friday Deal is currently on! </h1>' +
                '<p style="font-size: 15px; margin: 16px 0;">Upgrade to Inoreader Pro for a year and we\'ll give you 6 more months free!</p>' +
                '<p style="font-size: 15px; margin: 32px 0 0 0;">Do you still want to get a Supporter plan and miss the deal?</p>'+
                '<div class="bf_supporter_btns">' +
                    '<button class="bluebutton greenbutton" onclick="inno_dialog_close_all();pricing_init_payment(8)" style=" height: 40px; padding: 8px 36px; margin-top: 16px; ">Take the offer and switch to Inoreader Pro</button>' +
                    '<p style="margin-top: 36px;"><a href="javascript:void(0);" onclick="inno_dialog_close_all();pricing_init_payment(2)" class="graylink underlink">Don\'t get the deal and continue to Inoreader Supporter</a></p>' +
                  '</div>' +
                '</div>' +
              '</span>';
    dialog('supporter_bf_dialog', {content: html});
}

function kickstart_sidebar_banner(period, introductory_price){
    var html = '<a href="javascript:void(0);" onclick=\"pricing_init_payment(8,\'monthly\');\">Get <strong>' + period + ' months</strong> of Inoreader Pro for ' + introductory_price + '!</a>';
    $('#splitter').append('<div id="tree_announce" class="tree_announce tree_announce_kickstart">' + html + '<span onclick="dismiss_announce(\'kickstart_promo\')" class="icon16 icon_close_announce icon-cross" title="'+_js("Dismiss")+'"></span></div>');
}

function edit_organization(id){
    view_teams({action: 'edit_organization', id: id});
}

function edit_organization_members(id){
    dialog('manage_organization_members_dialog', {id: id});
}

function edit_organization_sso(id){
    dialog('manage_organization_sso_dialog', {id: id});
}

function save_organization_sso(id){
    var post = {};
    post.id = id;
    post.sso_enabled = $('#organization_sso_enabled').val();
    post.sso_domain = $('#organization_sso_domain').val();
    post.sso_signon_url = $('#organization_sso_signon_url').val();
    post.sso_entity_id = $('#organization_sso_entity_id').val();
    post.sso_certificate = $('#organization_sso_certificate').val();

    if(post.sso_enabled == '1'){
        if(post.sso_domain.length < 4){
            xalert("Please enter email domain!",0,'$(\'#organization_sso_domain\').focus().select();');
            return;
        }
        if(post.sso_signon_url.length < 10){
            xalert("Please enter SAML Sign-on URL!",0,'$(\'#organization_sso_signon_url\').focus().select();');
            return;
        }
        if(post.sso_entity_id.length < 2){
            xalert("Please enter SAML Entity ID!",0,'$(\'#organization_sso_entity_id\').focus().select();');
            return;
        }
        if(post.sso_certificate.length < 1000){
            xalert("Please enter signing certificate!",0,'$(\'#organization_sso_certificate\').focus().select();');
            return;
        }
    }

    if(post.sso_enabled == '1' && $('#organization_sso_enabled_previous').val() == '0'){
        xconfirm('<p>Enabling SSO for your Тeam will deactivate Inoreader authentication for all members. They must use your SSO ID provider, and their email addresses should match our records.</p><p>New signups will only be permitted via SSO from your company domain. The Team owner (you) will retain the option to use Inoreader authentication for emergency access.</p><p>Do you wish to proceed?</p>', 'save_organization_sso_exec(' + JSON.stringify(post) + ')');

     }else if(post.sso_enabled == '0' && $('#organization_sso_enabled_previous').val() == '1'){
         xconfirm('<p>Disabling SSO for your Team will reactivate Inoreader authentication for all members. If they have previously signed up via SSO, they will need to use the password reset function to create new passwords.</p><p>Do you still wish to proceed?</p>', 'save_organization_sso_exec(' + JSON.stringify(post) + ')');
    }else{
        save_organization_sso_exec(post);
    }
}

function save_organization_sso_exec(post){
    disable_dialog_button('manage_organization_sso_dialog', '0');
    xajax_save_organization_sso(post);
}

function save_organization(){
    var pending_email = $('#organization_user_email').val();
    if(pending_email){
        add_new_member_to_organization(pending_email,true);
    }

    var form = {};
    form.id = $('#organization_id').val();
    form.organization_name = $('#organization_name').val();
    form.organization_description = $('#organization_description').val();
    if(form.organization_name == ''){
        xalert(_js("Please enter a name for your team!"),0,'$(\'#organization_name\').focus().select();');
        return false;
    }

    form.members = [];
    $('.edit_organization_member').each(function(){
        form.members.push({email: $(this).data('email'), access: $(this).find('select.edit_organization_member_access_select').val()});
    });

    if(form.members.length == 0){
        xalert("Please add at least one member to your team!",0);
        return false;
    }

    if($('#manage_organization_members_dialog')[0]){
        disable_dialog_button('manage_organization_members_dialog');
    }else{
        $('#organization_form').find('button').prop('disabled', true);
    }

    do_loading();
    xajax_save_organization(form);
}

function add_new_member_to_organization(email,no_alert){
    email = $.trim(email);
    if(!email){
        return false;
    }

    if(!/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/i.test(email)){
        if(!no_alert){
            create_snackbar(_js('Please provide valid email') + '.', '', '', 3000);
        }
        return false;
    }

    if($('#edit_organization_member_' + $.md5(email))[0]){
        create_snackbar(_js('Member already invited.'), '', '', 3000);
        return false;
    }

    var member = {
        email: email,
        realname: email,
        status: -1,
        enabled: 1,
        profile_picture: '/cdn/avatar/?n=' + email + '&s=88'
    }

    add_member_to_organization(member,true);

    $('#organization_user_email').val('');
    return true;
}

function cancel_member_invite(email){
    $('#edit_organization_member_' + $.md5(email)).remove();
    check_members_status();
}

function add_member_to_organization(member,prepend,force){
    if(!member.email){
        return;
    }

    if(!force){
        var members_count = 0;
        var limit = $('#organization_limit').val();
        $('.edit_organization_member').each(function(){
            members_count++;
        });

        if(members_count >= limit){
            return;
        }
    }

    var access_select = ['', '', ''];
    access_select[member.access] = 'selected';
    var access_locked = (member.locked) ? ' readonly disabled' : '';

    var name = '';
    var profile_picture = '';

    if(member.status == 1){
        name = '<a href="javascript:void(0);" onclick="dialog(\'profile_dialog\',{user_id: ' + member.user_id + '})">' + member.realname + '</a>';
        profile_picture = '<a href="javascript:void(0);" onclick="dialog(\'profile_dialog\',{user_id: ' + member.user_id + '})"><img src="' + member.profile_picture + '"></a>';
    }else{
        name = member.realname;
        profile_picture = '<img src="' + member.profile_picture + '">';
    }

    var select_onchange = '';
    if(member.status == -1){
        select_onchange = ' onchange="if(this.value==0)cancel_member_invite(\'' + member.email + '\')"';
    }

    var pending_hint = '';
    if(member.status <= 0){
        var resend_link = '';
        if(member.status == 0){
            resend_link = '<span class="edit_organization_member_resend_invite"> | <a class="underlink" href="javascript:void(0)" onclick="resend_organization_invitation(\'' + member.email + '\')">' + _js("Resend") + '</a></span>';
        }
        pending_hint = '<div class="edit_organization_member_pending graylink">' + _js('Pending invitation') + resend_link + '</div>';
    }

    var disabled_hint = '';
    if(member.enabled == 0){
        pending_hint = '<div class="edit_organization_member_pending graylink">' + _js('Disabled') + '</div>';
    }

    var member_html = '<div class="flex edit_organization_member" id="edit_organization_member_' + $.md5(member.email) + '" data-email="' + member.email + '" data-status="' + member.status + '">';
    member_html += '<div class="edit_organization_member_picture">' + profile_picture + '</div>';
    member_html += '<div class="edit_organization_member_name flex_grow"><div class="edit_organization_member_name_inner">' + name + pending_hint + disabled_hint + '</div></div>';
    member_html += '<div class="edit_organization_member_access">';
    member_html += '<select ' + access_locked + ' class="edit_organization_member_access_select" ' + select_onchange + '>';
    if(!member.is_owner){
        member_html += '<option ' + access_select[1] + ' value=1>' + _js('Member') + '</option>';
    }
    member_html += '<option ' + access_select[2] + ' value=2>' + _js('Administrator') + '</option>';

    if(member.status <= 0){
        member_html += '<option ' + access_select[0] + ' value=0>' + _js('Cancel invite') + '</option>';
    }else{
        member_html += '<option ' + access_select[0] + ' value=0>' + _js('Remove from team') + '</option>';
    }
    member_html += '</select>';

    member_html += '</div>';

    if(prepend === true){
        $('#organization_user_list').prepend(member_html);
    }else{
        $('#organization_user_list').append(member_html);
    }
    check_members_status();
}

function check_members_status(){
    var has_invites = false;
    var members_count = 0;
    var limit = $('#organization_limit').val();
    $('.edit_organization_member').each(function(){
        members_count++;
        if($(this).data('status') == -1){
            has_invites = true;
        }
    });

    if(has_invites){
        $('#organization_user_list_invites_notification').show();
    }else{
        $('#organization_user_list_invites_notification').hide();
    }

    if(members_count >= limit){
        $('#organization_full_notification').show();
        $('#organization_user_email').prop('readonly', true);
        $('#organization_user_email').data('old-placeholder', $('#organization_user_email').attr('placeholder'));
        $('#organization_user_email').prop('placeholder', '');
    }else{
        $('#organization_full_notification').hide();
        $('#organization_user_email').prop('readonly', false);
        if($('#organization_user_email').attr('placeholder') == ''){
            $('#organization_user_email').prop('placeholder', $('#organization_user_email').data('old-placeholder'));
        }
    }
}

function resend_organization_invitation(email){
    xconfirm('<center><img src="/images/email-confirmation-sent-' + get_theme_name() + '.svg\"><p>' + sprintf(_js("Resend email invitation to %s?"),'<b>' + email + '</b>') + '</p></center>','resend_organization_invitation_exec("' + email + '")');
}

function resend_organization_invitation_exec(email){
    var organization_id = ($('#organization_id').val()) ? $('#organization_id').val() : $('#team_organization_id').val();
    $('#edit_organization_member_' + $.md5(email)).find('.edit_organization_member_resend_invite').fadeOut(250, function(){ $(this).remove(); })
    $('#edit_team_member_' + $.md5(email)).find('.edit_organization_member_resend_invite').fadeOut(250, function(){ $(this).remove(); })
    do_loading();
    xajax_resend_organization_invitation(email,organization_id);
}

function view_invitation(id){
    dialog('invitation_dialog', {id: id});
}

function invitation_accept(id){
    $('#invitation_dialog').find('button').prop('disabled', true);
    do_loading();
    xajax_invitation_response(id, 1);
}

function invitation_decline(id){
    $('#invitation_dialog').find('button').prop('disabled', true);
    do_loading();
    xajax_invitation_response(id, 0);
}

function team_dashboard_show_all_members(div){
    $('#' + div).find('.team_dashboard_team_member').each(function(){
        $(this).removeClass('hidden');
    });

    $('#' + div).find('.team_dashboard_team_member_more').remove();
}

function toggle_team_colors_menu(){
    $('#team_colors_list_wrapper').toggle();
}

function set_team_color(id, color){
    $('#team_color').val(id);
    $('#team_color_hex').val(color);
    $('#team_colors_chosen_color').css('background-color', color);
    $('#team_colors_list_wrapper').hide();
    check_team_dialog_icon();
}


function add_new_member_to_team(email,no_alert){
    email = $.trim(email);
    if(!email){
        return false;
    }

    if(!/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/i.test(email)){
        if(!no_alert){
            create_snackbar(_js('Please provide valid email') + '.', '', '', 3000);
        }
        return false;
    }

    if($('#edit_team_member_' + $.md5(email))[0]){
        create_snackbar(_js('Member already invited.'), '', '', 3000);
        return false;
    }

    var member = {
        email: email,
        realname: email,
        enabled: 1,
        status: -1,
        aux_status: -1,
        profile_picture: '/cdn/avatar/?n=' + email + '&s=88'
    }

    add_member_to_team(member,true);

    $('#team_user_email').val('');
    return true;
}

function cancel_team_member_invite(email){
    $('#edit_team_member_' + $.md5(email)).remove();
    check_members_status();
}

function add_member_to_team(member,prepend){
    if(!member.email){
        return;
    }
    var access_select = ['', '', ''];
    access_select[member.access] = 'selected';

    var name = '';
    var profile_picture = '';

    if(member.status == 1){
        name = '<a href="javascript:void(0);" onclick="dialog(\'profile_dialog\',{user_id: ' + member.user_id + '})">' + member.realname + '</a>';
        profile_picture = '<a href="javascript:void(0);" onclick="dialog(\'profile_dialog\',{user_id: ' + member.user_id + '})"><img src="' + member.profile_picture + '"></a>';
    }else{
        name = member.realname;
        profile_picture = '<img src="' + member.profile_picture + '">';
    }

    var select_onchange = '';
    if(member.aux_status == -1){
        select_onchange = 'if(this.value==0)cancel_team_member_invite(\'' + member.email + '\')';
    }

    var pending_hint = '';
    if(member.status <= 0){
        var resend_link = '';
        if(member.status == 0){
            resend_link = '<span class="edit_organization_member_resend_invite"> | <a class="underlink" href="javascript:void(0)" onclick="resend_organization_invitation(\'' + member.email + '\')">' + _js("Resend") + '</a></span>';
        }
        pending_hint = '<div class="edit_organization_member_pending graylink">' + _js('Pending invitation') + resend_link + '</div>';
    }

    var disabled_hint = '';
    if(member.enabled == 0){
        pending_hint = '<div class="edit_organization_member_pending graylink">' + _js('Disabled') + '</div>';
    }

    var member_html = '<div class="flex edit_organization_member edit_team_member" id="edit_team_member_' + $.md5(member.email) + '" data-email="' + member.email + '" data-status="' + member.status + '">';
    member_html += '<div class="edit_organization_member_picture">' + profile_picture + '</div>';
    member_html += '<div class="edit_organization_member_name flex_grow"><div class="edit_organization_member_name_inner">' + name + pending_hint + disabled_hint + '</div></div>';
    member_html += '<div class="edit_organization_member_access">';
    member_html += '<select class="edit_team_member_access_select" onchange="check_team_members_status();' + select_onchange + '">';

    if(!member.is_owner){
        member_html += '<option ' + access_select[1] + ' value=1>' + _js('Member') + '</option>';
    }
    member_html += '<option ' + access_select[2] + ' value=2>' + _js('Administrator') + '</option>';

    if(member.status <= 0){
        member_html += '<option ' + access_select[0] + ' value=0>' + _js('Cancel invite') + '</option>';
    }else{
        member_html += '<option ' + access_select[0] + ' value=0>' + _js('Remove from channel') + '</option>';
    }
    member_html += '</select>';

    member_html += '</div>';

    if(prepend === true){
        $('#team_user_list').prepend(member_html);
    }else{
        $('#team_user_list').append(member_html);
    }
    check_team_members_status();
}

function check_team_members_status(){
    var has_invites = false;
    $('.edit_team_member').each(function(){
        if($(this).data('status') == -1){
            has_invites = true;
            return false;
        }
    });

    var admins_count = 0;
    var select_pointer = null;
    $('.edit_team_member').each(function(){
        if($(this).find('.edit_team_member_access_select').eq(0).val() == 2 && $(this).data('status') == 1){
            admins_count++;
            select_pointer = $(this).find('.edit_team_member_access_select').eq(0);
            $(select_pointer).prop('disabled', false);
        }
    });

    if(admins_count == 0){
        // Shouldn't happen
        xalert('Something went wrong! Please refresh Inoreader and try again!');
        return;
    }else if(admins_count == 1){
        if(select_pointer){
            $(select_pointer).prop('disabled', true).attr('title', _js('There should be at least one active Administrator in the channel'));
        }
    }

    if(has_invites){
        $('#team_user_list_invites_notification').show();
    }else{
        $('#team_user_list_invites_notification').hide();
    }
}

function check_team_integration_visibility(integration, delay){
    if(integration == 'slack'){
        var enabled = $('#team_integration_checkbox_' + integration).is(':checked');
        var webhook_url = $('#team_slack_webhook_url').val();

        if(enabled && !webhook_url){
            connect_service(48);
        }else if(enabled && webhook_url){
            $('#edit_team_integration_right_part_' + integration + '_off').css('display', 'none');
            $('#edit_team_integration_right_part_' + integration + '_on').css('display', 'flex');
            $('#team_slack_workspace_channel_caption').html('<b>' + $('#team_slack_workspace_name').val() + ' / ' + $('#team_slack_channel_name').val() + '</b> (<a class="redlink" href="javascript:void(0);" onclick="team_remove_slack_integration()">Remove</a>)');
        }else{
            $('#edit_team_integration_right_part_' + integration + '_off').css('display', 'flex');
            $('#edit_team_integration_right_part_' + integration + '_on').css('display', 'none');
        }
    }else{
        if(!delay){
            delay = 0;
        }
        setTimeout(function(){
            var enabled = $('#team_integration_checkbox_' + integration).is(':checked');
            if(enabled){
                $('#edit_team_integration_right_part_' + integration + '_off').css('display', 'none');
                $('#edit_team_integration_right_part_' + integration + '_on').css('display', 'flex');
            }else{
                $('#edit_team_integration_right_part_' + integration + '_off').css('display', 'flex');
                $('#edit_team_integration_right_part_' + integration + '_on').css('display', 'none');
            }
        },delay);
    }
}

function team_remove_slack_integration(){
    $('#team_slack_webhook_url').val('');
    $('#team_slack_channel_name').val('');
    $('#team_slack_workspace_name').val('');
    $('#team_integration_checkbox_slack').prop('checked', false);
    check_team_integration_visibility('slack');
}

function check_team_dialog_icon(){
    var name = $.trim($('#team_name').val());
    if(name){
        var color = $('#team_color_hex').val().replace(/#/,'');
        var avatar = '/cdn/avatar/?n=' + encodeURIComponent(name) + '&s=88&c=' + color;
        $('#team_colors_chosen_color').html('<img src="' + avatar + '">');
    }else{
        $('#team_colors_chosen_color').html('');
    }
}

function copyArticleLink(url) {
  copyToClipboard(url, function () {
    create_bottom_notification('Link copied', 'info', true, 500)
  });
}

function print_team_dashboard_activity(organization_id){
    var params = {};
    xajax_print_team_dashboard_activity(organization_id, params);
}

function team_dashboard_show_all(button, selector){
    $(button).remove();
    $(selector).removeClass('hidden');
}

function team_dashboard_show_all_channels(id, button){
    xajax_print_team_channels(id, {show_all_channels: true});
    if(button){
        button.classList.add('loading');
        button.classList.add('blue-circle');
        button.disabled = true;
    }
}

function subcat_subscribe(id,button){
    button.disabled = true;
    do_loading();
    xajax_subcat_subscribe(id);
}

function show_bulk_article_tags_menu(ids,el){
    var id = 0;
    if(document.getElementById('article_tags_menu_' + id)){
        $('#article_tags_menu_' + id).remove();
        $(document).off('.article_tags_menu');
        $('#article_footer_' + id).find('.article_footer_main_buttons').eq(0).find('.tags_img').removeClass('article_footer_buttons_current');
        $('#bulk_article_actions_button_tags').removeClass('bulk_article_actions_button_current');

        return;
    }

    $('#bulk_article_actions_button_tags').addClass('bulk_article_actions_button_current');

    var top_wrapper = create_dom_element('div', {
        className: 'article_tags_menu_top_wrapper'
    });

    var menu = create_dom_element('div', {
        id: 'article_tags_menu_' + id,
        className: 'article_tags_menu article_tags_menu_zero'
    });

    var input = create_dom_element('input', {
        type: 'text',
        placeholder: _js('Search or create tags'),
        name: 'article_tags_menu_filter_' + id + '_' + uniqid(),
        id: 'article_tags_menu_filter_' + id,
        className: 'article_tags_filter'
    });

    var tags_list = create_dom_element('div', {
        id: 'article_tags_menu_tag_list_' + id,
        className: 'article_tags_menu_tag_list'
    });

    top_wrapper.appendChild(input);
    menu.appendChild(top_wrapper);
    menu.appendChild(tags_list);

    document.body.appendChild(menu);
    new Popper($('#bulk_article_actions_button_tags').get(0), $('#article_tags_menu_0'), { placement: 'bottom-center', modifiers: { preventOverflow: { enabled: true } } } )

    $('#article_tags_menu_filter_' + id).on('keydown.esc', function(e){
        show_bulk_article_tags_menu(ids);
        e.preventDefault();
    }).on('keydown.return', function(e){
        // Add
        add_remove_current_bulk_article_tag(ids);

        if($.trim($(this).val()) == ''){
            show_bulk_article_tags_menu(ids);
        }

        $(this).val('');
        e.preventDefault();
    }).on('keydown.up', function(e){
        move_bulk_article_tags_menu_selection(ids,'up');
        e.preventDefault();
    }).on('keydown.down', function(e){
        log_ga_hotkey(e);
        // move_jumper_selection('down');
        move_bulk_article_tags_menu_selection(ids,'down');
        e.preventDefault();
    });

    $('#article_tags_menu_filter_' + id).focus().click();
    $('#article_tags_menu_filter_' + id).on('keyup',function(e){
        if(e.which == 16 || e.which == 37 || e.which == 38 || e.which == 39 || e.which == 40){
            return;
        }
        build_bulk_article_tags_menu_content(ids, this.value);
    });

    build_bulk_article_tags_menu_content(ids, '');

    setTimeout(function(){
        $(document).on('click.article_tags_menu', function(e){
            if(!$(e.target).parents('#article_tags_menu_' + id)[0]){
                show_bulk_article_tags_menu(ids);
            }
        });
    },1);

    resize_bulk_article_tags_menu(ids);
}

function build_bulk_article_tags_menu_content(ids,filter){
    var id = 0;
    filter = $.trim(filter);
    filter = filter.replace(/</,'').replace(/>/,'');
    var article_tags = {};
    var article_tags_cnt = {};

    for(var i in ids){
        var _article_tags = $('#article_' + ids[i]).data('tags');
        for(var t in _article_tags){
            article_tags[t] = _article_tags[t];
            if(article_tags_cnt[t] == undefined){
                article_tags_cnt[t] = 0;
            }
            article_tags_cnt[t]++;
        }
    }

    var all_tags = get_folders_from_tree(true);
    var tags_html = '';
    var first_element = '';
    current_article_tag_sel = null;
    var item_counter = 0;
    if(all_tags === null){
        tags_html += '<div class="article_tags_menu_empty_state"><div class="article_tags_menu_empty_icon"><img src="/images/article_topbar_tags_empty_state_' + get_theme_name() + '.png"></div>';
        tags_html += '<div class="article_tags_menu_empty_title">Loading tags...</div>';
    }else if(Object.size(all_tags) == 0 && !filter){
        tags_html += '<div class="article_tags_menu_empty_state"><div class="article_tags_menu_empty_icon"><img src="/images/article_topbar_tags_empty_state_' + get_theme_name() + '.png"></div>';
        tags_html += '<div class="article_tags_menu_empty_title">' + _js('Tags help you organize better') + '</div>';
        tags_html += '<div class="article_tags_menu_empty_subtitle graylink">' + _js('Type a name and hit Return to create your first tag.') + '</div></div>';
    }else{
        for(var i in all_tags){
            var tag_class = '';

            if(filter){
                if(!fuzzy_match(all_tags[i].name.toLowerCase(),filter.toLowerCase())){
                    tag_class += ' hidden';
                }
            }
            var added_cnt = '';
            for(var t in article_tags){
                if(article_tags[t] == all_tags[i].name){
                    tag_class += ' article_tags_menu_tag_added';
                    added_cnt = ' (' + article_tags_cnt[t] + ')';
                }
            }

            var icon_class = 'icon-add-menu-tag';
            if(is_team_tag(all_tags[i].name)){
                icon_class = 'icon-add-menu-team-tag';
            }

            tags_html += '<div class="article_tags_menu_tag flex' + tag_class + '" id="article_tags_menu_tag_' + id + '_' + all_tags[i].id + '" onmouseover="set_bulk_article_tags_menu_selection(' + JSON.stringify(ids) + ', this.id, true)" onclick="add_remove_current_bulk_article_tag(' + JSON.stringify(ids) + ')" data-id="' + all_tags[i].id + '" data-title="' + htmlentities(all_tags[i].name) + '" data-new="false">';
            tags_html += '<div class="article_tags_menu_tag_icon article_tags_menu_tag_icon_empty"><span class="icon16 ' + icon_class + '"></span></div>';
            tags_html += '<div class="article_tags_menu_tag_icon article_tags_menu_tag_icon_full"><span class="icon16 bluelink ' + icon_class + '-full"></span></div>';
            tags_html += '<div class="article_tags_menu_tag_name flex_grow" title="' + htmlentities(fix_tag_name(all_tags[i].name)) + '"><div>' + fix_tag_name(all_tags[i].name) + '</div></div>';
            tags_html += '<div class="article_tags_menu_tag_add_link">' + _js('Add') + '</div>';
            tags_html += '<div class="article_tags_menu_tag_remove_link redlink">' + _js('Remove') + added_cnt + '</div>';
            tags_html += '<div class="article_tags_menu_tag_added_label">' + _js('Added') + added_cnt + '</div>';
            tags_html += '</div>';

            if(item_counter == 0 && tag_class.indexOf('hidden') === -1){
                if(filter){
                    first_element = 'article_tags_menu_tag_' + id + '_' + all_tags[i].id;
                }
                item_counter++;
            }
        }
    }

    if(filter && all_tags !== null){
        var filter_found_in_tags = false;
        var all_tags_and_folders = get_folders_from_tree();
        for(var i in all_tags_and_folders){
            if(all_tags_and_folders[i].name.toLowerCase() == filter.toLowerCase()){
                filter_found_in_tags = true;
            }
        }

        if(!filter_found_in_tags){
            var fake_id = uniqid();
            tags_html += '<div class="article_tags_menu_tag flex article_tags_menu_new" id="article_tags_menu_tag_' + id + '_' + fake_id + '" onmouseover="set_bulk_article_tags_menu_selection(' + JSON.stringify(ids) + ', this.id, true)" onclick="add_remove_current_bulk_article_tag(' + JSON.stringify(ids) + ', true)" data-id="' + fake_id + '" data-title="' + htmlentities(filter) + '" data-new="true">';
            tags_html += '<div class="article_tags_menu_tag_name flex_grow">' + sprintf(_js('Create new tag %s'),'<b>' + htmlentities(filter) + '</b>') + '</div>';
            tags_html += '</div>';
            if(item_counter == 0){
                first_element = 'article_tags_menu_tag_' + id + '_' + fake_id;
            }

            if(joined_organization_id > 0){
                fake_id = uniqid();
                tags_html += '<div class="article_tags_menu_tag flex article_tags_menu_new" id="article_tags_menu_tag_' + id + '_' + fake_id + '" onmouseover="set_article_tags_menu_selection(' + id + ', this.id, true)" onclick="add_remove_current_article_tag(' + id + ', true)" data-id="' + fake_id + '" data-title="' + htmlentities(filter) + '" data-new="true" data-team="true">';
                tags_html += '<div class="article_tags_menu_tag_name flex_grow">' + sprintf(_js('Create new team tag %s'),'<b>' + htmlentities(filter) + '</b>') + '</div>';
                tags_html += '</div>';
            }
        }
    }

    $('#article_tags_menu_tag_list_' + id).html(tags_html);

    if(first_element){
        set_bulk_article_tags_menu_selection(id, first_element, true);
    }

    resize_bulk_article_tags_menu(id);
}

function resize_bulk_article_tags_menu(ids){

    var id = 0;
    var $el = $('#article_tags_menu_' + id);

    if(!$el[0]){
        return;
    }

    $('#article_tags_menu_tag_list_' + id).css('max-height','auto');

    var container_id = window;

    var bottom = $el.offset().top + $el.outerHeight();
    var height = $(container_id).outerHeight();

    height -= ($('#bulk_article_actions').offset().top + $('#bulk_article_actions').outerHeight());

    if(bottom > height){
        var offset = $el.find('.article_tags_menu_top_wrapper').eq(0).outerHeight();
        offset += 32;
        var tags_height = height - $el.offset().top - offset;

        $('#article_tags_menu_tag_list_' + id).css('max-height', tags_height);
    }
}

var current_article_tag_sel = null;
function move_bulk_article_tags_menu_selection(ids,dir){
    var id = 0;
    if(current_article_tag_sel === null){
        if(dir == 'up'){
            target_obj = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_list').children().not('.hidden').last();
        }else if(dir == 'down'){
            target_obj = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_list').children().not('.hidden').first();
        }
    }else{
        if(dir == 'up'){
            var target_obj = $('#' + current_article_tag_sel).prevAll('div').not('.hidden').first();
            if(!target_obj[0]){
                target_obj = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_list').children().not('.hidden').last();
            }
        }else if(dir == 'down'){
            var target_obj = $('#' + current_article_tag_sel).nextAll('div').not('.hidden').first();
            if(!target_obj[0]){
                target_obj = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_list').children().not('.hidden').first();
            }
        }
    }

    if(target_obj.hasClass('article_tags_menu_tag')){
        set_bulk_article_tags_menu_selection(id,target_obj.attr('id'));
    }
}

function set_bulk_article_tags_menu_selection(ids, element_id, from_mouse){
    var id = 0;
    current_article_tag_sel = element_id;
    $('.article_tags_menu_tag_active').removeClass('article_tags_menu_tag_active');
    $('#' + element_id).addClass('article_tags_menu_tag_active');

    if(!from_mouse){
        $('#article_tags_menu_filter_' + id).val($('#' + element_id).data('title'));

        var jumper_height = $('#article_tags_menu_tag_list_' + id).outerHeight();
        var top = $('#' + element_id).position().top;
        var bottom = top + $('#' + element_id).outerHeight();
        var bottom_delta = jumper_height - bottom;
        var top_delta = top;
        if(bottom_delta < 0){
            $('#article_tags_menu_tag_list_' + id).scrollTo('+=' + (bottom_delta*-1) + 'px')
        }else if(top_delta < 0){
            $('#article_tags_menu_tag_list_' + id).scrollTo('#' + element_id)
        }
    }
}

function add_remove_current_bulk_article_tag(ids,new_tag){
    var id = 0;
    var current_element = $('#article_tags_menu_' + id).find('.article_tags_menu_tag_active');
    if(!current_element[0]){
        return;
    }

    if($(current_element).hasClass('article_tags_menu_tag_added')){
        $(current_element).removeClass('article_tags_menu_tag_added');
    }else{
        $(current_element).addClass('article_tags_menu_tag_added');
    }

    var tags = {};
    $('#article_tags_menu_' + id).find('.article_tags_menu_tag_added').each(function(){
        var dt = $(this).data();
        tags[dt.id] = dt.title;
        if(dt.new){
            user_folders[0] = [{id: dt.id, name: dt.title}].concat(user_folders[0]);
        }
    });

    for(var ii in ids){
        $('#article_' + ids[ii]).data('mtags',clone_object(tags));

        var atags = $('#article_' + ids[ii]).data('atags');
        if(Object.size(atags) > 0){
            for(var i in atags){
                tags[i] = atags[i];
            }
        }

        $('#article_' + ids[ii]).data('tags',tags);

        build_article_tags(ids[ii]);
        check_tags_icon(ids[ii]);
    }

    xajax_save_tags(ids,tags);

    setTimeout(function(){
        $('#article_tags_menu_filter_' + id).val('');
        if(new_tag){
            build_bulk_article_tags_menu_content(ids, '');
        }
    },10);
}

function update_bundle_totals (el) {
  var display_el = $(el.form).find('.bundle-selected-total')
  var feeds = el.value.split(',')
  var special_count = 0;
  for (var i = 0; i < el.items.length; ++i) {
    if(el.items[i].feed_type && el.items[i].feed_type !== 'rss' && el.items[i].feed_type !== 'json')
      special_count++;
  }

  if(el.value === '')
    feeds = []

  if(special_count) {
    $(el.form).addClass('has-special-feeds')
    $(el.form).find('.special_feed_alert')
      .html('<span class="icon16 icon-feed-info"></span> ' + __js(
        'Following this bundle will require a Pro subscription, because of the %s special feed you have chosen.',
        'Following this bundle will require a Pro subscription, because of the %s special feeds you have chosen.',
        special_count
        ))
      .removeClass('hidden')
  } else {
    $(el.form).find('.special_feed_alert').addClass('hidden')
    $(el.form).removeClass('has-special-feeds')
  }

  $(display_el).html(_js('Selected:') + ' ' + feeds.length);
}

function show_musk_alert(){
    var html = '<div style="text-align: center; margin-bottom: 24px;"><img src="/images/twitter-api-' + get_theme_name() + '.svg" width="64"/></div>';
    html += '<p style="font-size: 15px;line-height: 24px;">Recently, <a class="bluelink underlink" href="https://twitter.com/TwitterDev/status/1641222782594990080" target="_blank" rel="noopener">Twitter has revoked free access to its API</a> for all third-party clients and developers without notice. We have tried our best to ensure this does not affect our service, but unfortunately, the newly introduced conditions proved unattainable for us.</p>';
    html += '<p style="font-size: 15px;line-height: 24px;">What this means is public Twitter data will no longer be available to collect in your Inoreader account. All previously gathered Twitter data will be kept in your Inoreader account, but your Twitter feeds have stopped updating.</p>';
    html += '<p style="font-size: 15px;line-height: 24px;">We apologize for any inconvenience this may cause and will keep working on finding alternative solutions to provide you with the best possible experience.</p>';

    xalert(html);
    $('#xalert_wrapper').css('width',420);
    inno_dialog_resize();
}

function check_today_config_checkboxes(){
    if($('.today_config_topics_visible').filter(':checked').length == 1){
        $('.today_config_topics_visible').filter(':checked').eq(0).prop('disabled', true);
    }else{
        $('.today_config_topics_visible').prop('disabled', false);
    }
}

function save_today_config(){
    var topics = [];
    $('.today_config_topics_topic').each(function(){
        var user_hidden = !$(this).find('.today_config_topics_visible').eq(0).is(':checked');
        topics.push({id: $(this).data('topic-id'), user_hidden: user_hidden});
    });

    xajax_save_today_config(topics);
}

function check_today_reload(tab){
    if(feed_params.filter_type == 'today'){
        if(tab == 'my_feeds' && feed_params.today_tab != 'trending'){
            reload_articles();
        }else if(tab == 'trending' && feed_params.today_tab == 'trending'){
            reload_articles();
        }
    }
}

function query_builder_add_row(op,dont_add_input){
    var bar = document.getElementById('query_builder_content');

    var line = create_dom_element('div', { className: 'query_builder_content_line flex' });

    if(bar.innerHTML != ''){
        var divider = create_dom_element('div', { className: 'query_builder_andnot_divider graylink', innerHTML: op.toUpperCase() + '<div class="query_builder_content_andnot_line"></div>'});
        bar.appendChild(divider);

        var hidden_input = create_dom_element('input', {
            type: 'hidden',
            className: 'query_builder_input',
            value: op
        });
        line.appendChild(hidden_input);

        var remove_button = create_dom_element('a', {
            href: 'javascript:void(0);',
            className: 'query_builder_remove_button',
            innerHTML: '<span class="icon16 icon-delete-subscription"></span>',
            onclick: function(){
                query_builder_remove_line(this);
            }
        });
        line.appendChild(remove_button);
    }

    if(!dont_add_input){
        var input_div = create_dom_element('div', { className: 'query_builder_200_div' });

        var input = create_dom_element('input', {
            type: 'text',
            className: 'query_builder_input',
            placeholder: _js('Type keyword or phrase'),
            onkeyup: check_query_builder_button,
            onblur: function(){ check_query_builder_empty_input(this) }
        });

        input_div.appendChild(input);
        line.appendChild(input_div);
    }

    var or_button_wrapper = create_dom_element('div');
    var or_button = create_dom_element('a', {
        href: 'javascript:void(0);',
        className: 'query_builder_or_button bluelink',
        innerHTML: 'OR',
        onclick: function(){
            query_builder_add_cell(this);
        }
    });

    or_button_wrapper.appendChild(or_button);
    line.appendChild(or_button_wrapper);

    bar.appendChild(line);
    check_query_builder_button();
}

function query_builder_add_cell(el, value){
    if(!el){
        el = $('.query_builder_or_button').last();
    }
    var button_el = $(el).parent();
    var line = $(el).parents('.query_builder_content_line').eq(0);

    var input_div = create_dom_element('div', { className: 'query_builder_200_div' });

    var input = create_dom_element('input', {
        type: 'text',
        className: 'query_builder_input',
        placeholder: _js('Type keyword or phrase'),
        value: value ? value : '',
        onkeyup: check_query_builder_button,
        onblur: function(){ check_query_builder_empty_input(this) }
    });

    input_div.appendChild(input);

    line[0].insertBefore(input_div, button_el[0]);
    check_query_builder_button();
}

function query_builder_remove_line(el){
    var line = $(el).parents('.query_builder_content_line').eq(0);
    if($(line).prev().hasClass('query_builder_andnot_divider')){
        $(line).prev().remove();
    }
    $(line).remove();
    check_query_builder_button();
}

function check_query_builder_button(){
    var has_empty = false;
    if($('#query_builder_content').is(':visible')){
        $('input[type="text"].query_builder_input').each(function(){
            if(!$.trim(this.value)){
                has_empty = true;
                return false;
            }
        });
    }else{
        if(!$.trim($('#query_builder_unparsed_term').val())){
            has_empty = true;
        }
    }

    if(!has_empty){
        $('#search_query_builder_dialog_buttonbar').find('button').eq(0).prop('disabled', false);
    }else{
        $('#search_query_builder_dialog_buttonbar').find('button').eq(0).prop('disabled', true);
    }
}

function check_query_builder_empty_input(el){
    if($.trim($(el).val()) == ''){
        var has_filled = false;
        var input_count = 0;
        var $parent = $(el).parents('.query_builder_content_line').eq(0);
        $parent.find('input[type="text"].query_builder_input').each(function(){
            if($.trim($(this).val()) != ''){
                has_filled = true;
            }
            input_count++;
        });

        if(has_filled || input_count > 1){
            $(el).parent().remove();
            check_query_builder_button();
        }
    }
}

function init_query_builder_search(){
    var query = get_query_builder_query();

    search_language = $('#query_builder_language').val() + '';
    search_filters = $('#query_builder_search_filters').val() + '';

    var search_filter_type_full = $('#query_builder_section_id').val();
    var current_tab = 'global';

    if(search_filter_type_full == 'global_0'){
        local_search_options = 4;
        $('#search_content_filters_search_feed_popularity').val('0');
        $('#search_content_filters_filter_type').val('');
    }else if(search_filter_type_full == 'global_1'){
        local_search_options = 4;
        $('#search_content_filters_search_feed_popularity').val('1');
        $('#search_content_filters_filter_type').val('');
    }else if(search_filter_type_full == 'global_2'){
        local_search_options = 4;
        $('#search_content_filters_search_feed_popularity').val('2');
        $('#search_content_filters_filter_type').val('');
    }else{
        current_tab = 'subscriptions';
        local_search_options = 1;
        $('#search_content_filters_filter_type').val(search_filter_type_full);
        $('#search_content_filters_search_feed_popularity').val('');
    }

    if(search_options != 4 && local_search_options == 4){
        switch_search_filter_feed_popularity = $('#search_content_filters_search_feed_popularity').val();
        switch_searcher_tab('global');
    }else if(search_options == 4 && local_search_options != 4){
        switch_searcher_tab('subscriptions');
    }

    setTimeout(function(){
        switch_search_filter_filter = search_filter_type_full;
        search_options = local_search_options;
        feeds_searcher_previous_value = null;

        $('#search_content_filters_language').val(search_language);
        $('#search_content_filters_search_filters').val(search_filters);
        $('#searcher_input').data('used_query_builder', 1);
        $('#feed_searcher').val(query);
        $('#searcher_input').val(query);

        searcher_term_handler(document.getElementById('searcher_input'), {section_id: 0, sub_section_id: 0, tab: current_tab, term: document.getElementById('searcher_input').value}, null);
    },1);

    inno_dialog_close('search_query_builder_dialog');
}

function clear_query_builder(){
    $('#query_builder_content').html('');
    $('#query_builder_content').show();
    $('.query_builder_andnot_buttons').show();
    $('#query_builder_unparsed_content').hide();
    query_builder_add_row('and');
    check_query_builder_button();
}

function show_query_builder(){
    var params = {};
    params.language = $('#search_content_filters_language').val();
    params.search_filters = $('#search_content_filters_search_filters').val();
    params.search_feed_popularity = $('#search_content_filters_search_feed_popularity').val();
    params.search_options = (feeds_searcher_previous_tab == 'global') ? 4 : 1;

    var search_filter_type_full = $('#search_content_filters_filter_type').val();
    search_filter_exploded = search_filter_type_full.split(/\_/);
    params.filter_type = search_filter_exploded[0];
    params.filter_id = search_filter_exploded[1];
    params.term = $('#searcher_input').val();

    dialog('search_query_builder_dialog', params);
}

function get_query_builder_query(){
    var query = '(';
    var group_seq = 0;
    $('.query_builder_input').each(function(){
        if(this.type == 'hidden'){
            query = query.slice(0, -4); // Remove last OR
            if(group_seq == 1){
                var last_index = query.lastIndexOf('(');
                query = query.slice(0, last_index) + query.slice(last_index + 1);
            }else{
                query += ')';
            }
            var operator = this.value.toUpperCase();
            query += ' ' + operator + ' (';
            group_seq = 0;
        }else{
            group_seq++;
            this.value = $.trim(this.value);
            if(!this.value){
                return true;
            }
            if(this.value.indexOf(' ') !== -1){
                this.value = '"' + this.value + '"';
            }
            query += this.value + ' OR ';
        }
    });

    query = query.slice(0, -4); // Remove last OR
    if(group_seq == 1){
        var last_index = query.lastIndexOf('(');
        query = query.slice(0, last_index) + query.slice(last_index + 1);
    }else{
        query += ')';
    }

    return query;
}

function edit_active_search(id,context,type){
    var post = {};
    post.id = id;
    post.type = type;
    post.term = get_query_builder_query();
    post.title = $('#query_builder_title').val();
    post.search_language = $('#query_builder_language').val();
    post.search_filters = $('#query_builder_search_filters').val();
    if(!post.term){
        return;
    }

    var search_filter_type_full = $('#query_builder_section_id').val();
    var search_filter_exploded = search_filter_type_full.split(/\_/);
    if(search_filter_exploded[0] == 'global'){
        post.search_options = 4;
        post.search_feed_popularity = search_filter_exploded[1];
        post.filter_type = 'public';
        post.filter_id = 0;
    }else{
        post.search_options = 1;
        post.filter_type = search_filter_exploded[0];
        post.filter_id = search_filter_exploded[1];
    }

    do_loading();
    $('#search_query_builder_dialog_buttonbar').find('button').eq(0).prop('disabled', true);
    xajax_edit_active_search(post,context);
}

function select_all_organization_folder_members(){
    var total = $('.organization_folder_members_checkbox').filter(':visible').length;
    var checked = $('.organization_folder_members_checkbox:checked').filter(':visible').length;
    if(total == checked){
        $('.organization_folder_members_checkbox').filter(':visible').prop('checked', false);
    }else{
        $('.organization_folder_members_checkbox').filter(':visible').prop('checked', true);
    }
}

function organization_folder_members_check_all(){
    var total = $('.organization_folder_members_checkbox').filter(':visible').length;
    var checked = $('.organization_folder_members_checkbox:checked').filter(':visible').length;
    if(total == checked){
        $('#organization_folder_members_dialog_select_all_checkbox').filter(':visible').prop('checked', true);
    }else{
        $('#organization_folder_members_dialog_select_all_checkbox').filter(':visible').prop('checked', false);
    }
}

function filter_organization_folder_members(filter){
    if(!filter){
        $('.organization_folder_members_dialog_member_list_member').show();
    }else{
        $('.organization_folder_members_dialog_member_list_member').each(function(){
            if($(this).find('label').eq(0).text().toLowerCase().indexOf(filter.toLowerCase()) !== -1){
                $(this).show();
            }else{
                $(this).hide();
            }
        });
    }
    organization_folder_members_check_all();
}

function save_organization_folder_members(){
    var post = {};
    post.folder_id = $('#organization_folder_members_dialog_folder_id').val();
    post.organization_id = $('#organization_folder_members_dialog_organization_id').val();
    post.context = $('#organization_folder_members_dialog_context').val();
    post.members = [];
    $('.organization_folder_members_checkbox').filter(':checked').filter(':visible').each(function(){
        post.members.push($(this).val());
    });
    do_loading();
    disable_dialog_button('organization_folder_members_dialog', 0);
    xajax_save_organization_folder_members(post);
}

function toggle_team_folder_feeds(folder_id){
    if($('#team_folder_feeds_list_' + folder_id).is(':visible')){
        $('#team_folder_feeds_list_' + folder_id).hide();
        $('#team_folder_feeds_expand_arrow_' + folder_id).removeClass('rotate_expand_arrow');
    }else{
        $('#team_folder_feeds_list_' + folder_id).show();
        $('#team_folder_feeds_expand_arrow_' + folder_id).addClass('rotate_expand_arrow');
    }
}

function convert_team_bundles_to_folders(organization_id){
    xconfirm('Do you want to start the conversion process now?', 'convert_team_bundles_to_folders_do(' + organization_id + ')');
}

function convert_team_bundles_to_folders_do(organization_id){
    do_loading();
    $('#convert_bundles_to_folders_button').addClass('loading');
    $('#convert_bundles_to_folders_progress').show();
    xajax_convert_team_bundles_to_folders(organization_id);
}

function show_team_folder_dot(){
    if(!check_user_visit(512) && document.getElementById('team_feeds_fieldset')){
        document.getElementById('team_feeds_fieldset').appendChild(create_dom_element('span', {
            id: 'tp_visit_dot_team_folders',
            className: 'visit_dot',
            style: 'left:120px;top:8px;',
            dataset: {tippyContent: 'New shared folders are here!<br><a class="whitelink underlink" href="https://www.inoreader.com/blog/2024/01/manage-shared-feeds-with-new-team-folders.html" target="_blank" onclick="set_user_visits(512); $(\'#tp_visit_dot_team_folders\').remove();">Read more</a>' },
            onclick: function(){ set_user_visits(512); $('#tp_visit_dot_team_folders').remove(); }
        }));
        tippy('#tp_visit_dot_team_folders', { interactive: true });
    }
}

function convert_monitored_keywords_to_feeds(){
    xconfirm('Do you want to start the conversion process now?', 'convert_monitored_keywords_to_feeds_do()');
}

function convert_monitored_keywords_to_feeds_do(){
    do_loading();
    $('#convert_keywords_to_feeds_button').addClass('loading');
    $('#convert_keywords_to_feeds_progress').show();
    xajax_convert_monitored_keywords_to_feeds();
}

function check_organization_sso_inputs(){
    if($('#organization_sso_enabled').val() == 0){
        $('#manage_organization_sso_dialog').find('input, textarea').prop('disabled', true);
        $('#organization_sso_help').hide();
    }else{
        $('#manage_organization_sso_dialog').find('input, textarea').prop('disabled', false);
        $('#organization_sso_help').show();
    }
}

function legacy_plans_dialog(period){
    currency = user_currency == 'USD' ? '$' : '€';
    var now = new Date();
    var deadline = new Date('2024-02-29');
    var deadline_monthly = new Date('2024-04-01');

    var html = '<h2>Important changes to your subscription</h2>';

    var vat_excluded = '';
    if(user_currency == 'EUR'){
        vat_excluded = ' (VAT excluded)';
    }

    if(period == 'monthly'){
        if(now.getTime() < deadline_monthly.getTime()){
            html += '<p style="line-height:1.5;">Starting March 31, 2024, the ' + currency + '4.99' + vat_excluded + ' monthly Pro plan introduced in 2013 will no longer be available. Your automatic subscription renewal will be turned off, and your access to Inoreader’s Pro features will remain uninterrupted until your prepaid period ends.</p>';
        }else{
            html += '<p style="line-height:1.5;">Since March 31, 2024, the ' + currency + '4.99' + vat_excluded + ' monthly Pro plan introduced in 2013 is no longer available. Your automatic subscription renewal has been turned off, and your access to Inoreader’s Pro features will remain uninterrupted until your prepaid period ends.</p>';
        }
    }else{
        if(now.getTime() < deadline.getTime()){
            html += '<p style="line-height:1.5;">Starting February 29, 2024, the ' + currency + '49.99' + vat_excluded + ' yearly Pro plan introduced in 2013 will no longer be available. Your automatic subscription renewal will be turned off, and your access to Inoreader’s Pro features will remain uninterrupted until your prepaid period ends.</p>';
        }else{
            html += '<p style="line-height:1.5;">Since February 29, 2024, the ' + currency + '49.99' + vat_excluded + ' yearly Pro plan introduced in 2013 is no longer available. Your automatic subscription renewal has been turned off, and your access to Inoreader’s Pro features will remain uninterrupted until your prepaid period ends.</p>';
        }
    }

    if(user_currency == 'USD'){
        html += '<p style="line-height:1.5;">To continue enjoying the benefits of Inoreader Pro, you should start a new subscription at our current prices ($89.99/year or $9.99/month).</p>';
    }else{
        html += '<p style="line-height:1.5;">To continue enjoying the benefits of Inoreader Pro, you should start a new subscription at our current prices (€79.99/year or €8.99/month, VAT excluded).</p>';
    }

    html += '<p style="margin-top:36px;"><center><button class=\"bluebutton greenbutton tallbutton\" onclick="view_upgrade({feature: \'from_legacy_popup\'})">View plans</button></center></p>';

    dialog('legacy_plans_dialog', {content: html});

}

function show_beta_return_reason_dialog(){
    var html = '<div style="font-size: 20px;font-weight:bold;margin-bottom:8px;">Help us improve Inoreader’s new design</div>';
    html += '<div style="font-size:15px;line-height:1.5;margin-bottom:16px;">We noticed you recently opted out of using Inoreader’s new design. Please take a moment to share why you prefer the current version.</div>';
    html += '<div><textarea style="width:465px;height:100px;box-sizing:border-box" id="return_reason"></textarea></div>';
    dialog('beta_feedback_dialog', {content: html});
}

function beta_feedback_dialog_submit(give){
    if(give){
        var reason = $.trim($('#return_reason').val());
        if(!reason){
            $('#return_reason').effect('highlight',{color:'#F78181'});
            $('#return_reason').focus().click();
            return;
        }
        disable_dialog_button('beta_feedback_dialog', 0);
        disable_dialog_button('beta_feedback_dialog', 1);
        do_loading();
        xajax_update_beta_invite('give_return_reason', reason);
    }else{
        disable_dialog_button('beta_feedback_dialog', 0);
        disable_dialog_button('beta_feedback_dialog', 1);
        do_loading();
        xajax_update_beta_invite('do_not_give_return_reason');
    }
}

function beta_feedback_dialog_success(){
    var html = '<div style="font-size: 20px;font-weight:bold;margin-bottom:8px;">Thank you for your response!</div>';
    html += '<div style="font-size:15px;line-height:1.5;margin-bottom:16px;">Your feedback helps us improve Inoreader for all users.</div>';

    $('#beta_feedback_dialog').html(html);
    $('#beta_feedback_dialog_buttonbar_container').find('button').remove();
    $('#beta_feedback_dialog_buttonbar_container').html('<button class="inno_dialog_buttonbar_button" onclick="inno_dialog_close(\'beta_feedback_dialog\');">Close</button>');
}

function teams_presentation_faq_answer_toggle(e){
    var answer = $(e).find('.answer');
    var icon = $(e).find('.icon14');
    if(answer.css('display') == 'none'){
        $('.answer').slideUp(200);
        $('.teams_presentation_faq_question .icon14').css('transform', 'rotate(0deg)');
        answer.slideDown(200);
        icon.css('transform', 'rotate(90deg)');
    }
    else{
        answer.slideUp(200);
        icon.css('transform', 'rotate(0deg)');
    }
}
